//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Argix.Enterprise {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EnterpriseDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EnterpriseDS : global::System.Data.DataSet {
        
        private CompanyTableDataTable tableCompanyTable;
        
        private StoreTableDataTable tableStoreTable;
        
        private DeliveryTableDataTable tableDeliveryTable;
        
        private OSDScanTableDataTable tableOSDScanTable;
        
        private PODScanTableDataTable tablePODScanTable;
        
        private RegionTableDataTable tableRegionTable;
        
        private DistrictTableDataTable tableDistrictTable;
        
        private AgentTableDataTable tableAgentTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EnterpriseDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EnterpriseDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CompanyTable"] != null)) {
                    base.Tables.Add(new CompanyTableDataTable(ds.Tables["CompanyTable"]));
                }
                if ((ds.Tables["StoreTable"] != null)) {
                    base.Tables.Add(new StoreTableDataTable(ds.Tables["StoreTable"]));
                }
                if ((ds.Tables["DeliveryTable"] != null)) {
                    base.Tables.Add(new DeliveryTableDataTable(ds.Tables["DeliveryTable"]));
                }
                if ((ds.Tables["OSDScanTable"] != null)) {
                    base.Tables.Add(new OSDScanTableDataTable(ds.Tables["OSDScanTable"]));
                }
                if ((ds.Tables["PODScanTable"] != null)) {
                    base.Tables.Add(new PODScanTableDataTable(ds.Tables["PODScanTable"]));
                }
                if ((ds.Tables["RegionTable"] != null)) {
                    base.Tables.Add(new RegionTableDataTable(ds.Tables["RegionTable"]));
                }
                if ((ds.Tables["DistrictTable"] != null)) {
                    base.Tables.Add(new DistrictTableDataTable(ds.Tables["DistrictTable"]));
                }
                if ((ds.Tables["AgentTable"] != null)) {
                    base.Tables.Add(new AgentTableDataTable(ds.Tables["AgentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyTableDataTable CompanyTable {
            get {
                return this.tableCompanyTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StoreTableDataTable StoreTable {
            get {
                return this.tableStoreTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeliveryTableDataTable DeliveryTable {
            get {
                return this.tableDeliveryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OSDScanTableDataTable OSDScanTable {
            get {
                return this.tableOSDScanTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PODScanTableDataTable PODScanTable {
            get {
                return this.tablePODScanTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RegionTableDataTable RegionTable {
            get {
                return this.tableRegionTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistrictTableDataTable DistrictTable {
            get {
                return this.tableDistrictTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgentTableDataTable AgentTable {
            get {
                return this.tableAgentTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EnterpriseDS cln = ((EnterpriseDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CompanyTable"] != null)) {
                    base.Tables.Add(new CompanyTableDataTable(ds.Tables["CompanyTable"]));
                }
                if ((ds.Tables["StoreTable"] != null)) {
                    base.Tables.Add(new StoreTableDataTable(ds.Tables["StoreTable"]));
                }
                if ((ds.Tables["DeliveryTable"] != null)) {
                    base.Tables.Add(new DeliveryTableDataTable(ds.Tables["DeliveryTable"]));
                }
                if ((ds.Tables["OSDScanTable"] != null)) {
                    base.Tables.Add(new OSDScanTableDataTable(ds.Tables["OSDScanTable"]));
                }
                if ((ds.Tables["PODScanTable"] != null)) {
                    base.Tables.Add(new PODScanTableDataTable(ds.Tables["PODScanTable"]));
                }
                if ((ds.Tables["RegionTable"] != null)) {
                    base.Tables.Add(new RegionTableDataTable(ds.Tables["RegionTable"]));
                }
                if ((ds.Tables["DistrictTable"] != null)) {
                    base.Tables.Add(new DistrictTableDataTable(ds.Tables["DistrictTable"]));
                }
                if ((ds.Tables["AgentTable"] != null)) {
                    base.Tables.Add(new AgentTableDataTable(ds.Tables["AgentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCompanyTable = ((CompanyTableDataTable)(base.Tables["CompanyTable"]));
            if ((initTable == true)) {
                if ((this.tableCompanyTable != null)) {
                    this.tableCompanyTable.InitVars();
                }
            }
            this.tableStoreTable = ((StoreTableDataTable)(base.Tables["StoreTable"]));
            if ((initTable == true)) {
                if ((this.tableStoreTable != null)) {
                    this.tableStoreTable.InitVars();
                }
            }
            this.tableDeliveryTable = ((DeliveryTableDataTable)(base.Tables["DeliveryTable"]));
            if ((initTable == true)) {
                if ((this.tableDeliveryTable != null)) {
                    this.tableDeliveryTable.InitVars();
                }
            }
            this.tableOSDScanTable = ((OSDScanTableDataTable)(base.Tables["OSDScanTable"]));
            if ((initTable == true)) {
                if ((this.tableOSDScanTable != null)) {
                    this.tableOSDScanTable.InitVars();
                }
            }
            this.tablePODScanTable = ((PODScanTableDataTable)(base.Tables["PODScanTable"]));
            if ((initTable == true)) {
                if ((this.tablePODScanTable != null)) {
                    this.tablePODScanTable.InitVars();
                }
            }
            this.tableRegionTable = ((RegionTableDataTable)(base.Tables["RegionTable"]));
            if ((initTable == true)) {
                if ((this.tableRegionTable != null)) {
                    this.tableRegionTable.InitVars();
                }
            }
            this.tableDistrictTable = ((DistrictTableDataTable)(base.Tables["DistrictTable"]));
            if ((initTable == true)) {
                if ((this.tableDistrictTable != null)) {
                    this.tableDistrictTable.InitVars();
                }
            }
            this.tableAgentTable = ((AgentTableDataTable)(base.Tables["AgentTable"]));
            if ((initTable == true)) {
                if ((this.tableAgentTable != null)) {
                    this.tableAgentTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EnterpriseDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EnterpriseDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCompanyTable = new CompanyTableDataTable();
            base.Tables.Add(this.tableCompanyTable);
            this.tableStoreTable = new StoreTableDataTable();
            base.Tables.Add(this.tableStoreTable);
            this.tableDeliveryTable = new DeliveryTableDataTable();
            base.Tables.Add(this.tableDeliveryTable);
            this.tableOSDScanTable = new OSDScanTableDataTable();
            base.Tables.Add(this.tableOSDScanTable);
            this.tablePODScanTable = new PODScanTableDataTable();
            base.Tables.Add(this.tablePODScanTable);
            this.tableRegionTable = new RegionTableDataTable();
            base.Tables.Add(this.tableRegionTable);
            this.tableDistrictTable = new DistrictTableDataTable();
            base.Tables.Add(this.tableDistrictTable);
            this.tableAgentTable = new AgentTableDataTable();
            base.Tables.Add(this.tableAgentTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompanyTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStoreTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeliveryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOSDScanTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePODScanTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRegionTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistrictTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAgentTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EnterpriseDS ds = new EnterpriseDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CompanyTableRowChangeEventHandler(object sender, CompanyTableRowChangeEvent e);
        
        public delegate void StoreTableRowChangeEventHandler(object sender, StoreTableRowChangeEvent e);
        
        public delegate void DeliveryTableRowChangeEventHandler(object sender, DeliveryTableRowChangeEvent e);
        
        public delegate void OSDScanTableRowChangeEventHandler(object sender, OSDScanTableRowChangeEvent e);
        
        public delegate void PODScanTableRowChangeEventHandler(object sender, PODScanTableRowChangeEvent e);
        
        public delegate void RegionTableRowChangeEventHandler(object sender, RegionTableRowChangeEvent e);
        
        public delegate void DistrictTableRowChangeEventHandler(object sender, DistrictTableRowChangeEvent e);
        
        public delegate void AgentTableRowChangeEventHandler(object sender, AgentTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyTableDataTable : global::System.Data.TypedTableBase<CompanyTableRow> {
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnCompanyType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableDataTable() {
                this.TableName = "CompanyTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTypeColumn {
                get {
                    return this.columnCompanyType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow this[int index] {
                get {
                    return ((CompanyTableRow)(this.Rows[index]));
                }
            }
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowChanging;
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowChanged;
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowDeleting;
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyTableRow(CompanyTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow AddCompanyTableRow(int CompanyID, string CompanyName, string Number, string CompanyType) {
                CompanyTableRow rowCompanyTableRow = ((CompanyTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompanyID,
                        CompanyName,
                        Number,
                        CompanyType};
                rowCompanyTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyTableRow);
                return rowCompanyTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyTableDataTable cln = ((CompanyTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnNumber = base.Columns["Number"];
                this.columnCompanyType = base.Columns["CompanyType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnCompanyType = new global::System.Data.DataColumn("CompanyType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow NewCompanyTableRow() {
                return ((CompanyTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyTableRowChanged != null)) {
                    this.CompanyTableRowChanged(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyTableRowChanging != null)) {
                    this.CompanyTableRowChanging(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyTableRowDeleted != null)) {
                    this.CompanyTableRowDeleted(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyTableRowDeleting != null)) {
                    this.CompanyTableRowDeleting(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyTableRow(CompanyTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StoreTableDataTable : global::System.Data.TypedTableBase<StoreTableRow> {
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnClientNumber;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnStoreNumber;
            
            private global::System.Data.DataColumn columnSubStoreNumber;
            
            private global::System.Data.DataColumn columnSanNumber;
            
            private global::System.Data.DataColumn columnStoreName;
            
            private global::System.Data.DataColumn columnStoreAddressline1;
            
            private global::System.Data.DataColumn columnStoreAddressline2;
            
            private global::System.Data.DataColumn columnStoreCity;
            
            private global::System.Data.DataColumn columnStoreState;
            
            private global::System.Data.DataColumn columnStoreZip;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnWindowTimeStart;
            
            private global::System.Data.DataColumn columnWindowTimeEnd;
            
            private global::System.Data.DataColumn columnZone;
            
            private global::System.Data.DataColumn columnAgentNumber;
            
            private global::System.Data.DataColumn columnAgentName;
            
            private global::System.Data.DataColumn columnSpecialInstructions;
            
            private global::System.Data.DataColumn columnDivision;
            
            private global::System.Data.DataColumn columnDeliveryScanStatus;
            
            private global::System.Data.DataColumn columnScanStatusDescrption;
            
            private global::System.Data.DataColumn columnIsDeliveryDayMonday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayTuesday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayWednesday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayThursday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayFriday;
            
            private global::System.Data.DataColumn columnIsOutforDeliveryDay1;
            
            private global::System.Data.DataColumn columnIsOutforDeliveryDay2;
            
            private global::System.Data.DataColumn columnStandardTransit;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnRegionDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableDataTable() {
                this.TableName = "StoreTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StoreTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StoreTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNumberColumn {
                get {
                    return this.columnStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubStoreNumberColumn {
                get {
                    return this.columnSubStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SanNumberColumn {
                get {
                    return this.columnSanNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNameColumn {
                get {
                    return this.columnStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreAddressline1Column {
                get {
                    return this.columnStoreAddressline1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreAddressline2Column {
                get {
                    return this.columnStoreAddressline2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreCityColumn {
                get {
                    return this.columnStoreCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreStateColumn {
                get {
                    return this.columnStoreState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreZipColumn {
                get {
                    return this.columnStoreZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowTimeStartColumn {
                get {
                    return this.columnWindowTimeStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowTimeEndColumn {
                get {
                    return this.columnWindowTimeEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneColumn {
                get {
                    return this.columnZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNumberColumn {
                get {
                    return this.columnAgentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNameColumn {
                get {
                    return this.columnAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialInstructionsColumn {
                get {
                    return this.columnSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionColumn {
                get {
                    return this.columnDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryScanStatusColumn {
                get {
                    return this.columnDeliveryScanStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanStatusDescrptionColumn {
                get {
                    return this.columnScanStatusDescrption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayMondayColumn {
                get {
                    return this.columnIsDeliveryDayMonday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayTuesdayColumn {
                get {
                    return this.columnIsDeliveryDayTuesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayWednesdayColumn {
                get {
                    return this.columnIsDeliveryDayWednesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayThursdayColumn {
                get {
                    return this.columnIsDeliveryDayThursday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayFridayColumn {
                get {
                    return this.columnIsDeliveryDayFriday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOutforDeliveryDay1Column {
                get {
                    return this.columnIsOutforDeliveryDay1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOutforDeliveryDay2Column {
                get {
                    return this.columnIsOutforDeliveryDay2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardTransitColumn {
                get {
                    return this.columnStandardTransit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionDescriptionColumn {
                get {
                    return this.columnRegionDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow this[int index] {
                get {
                    return ((StoreTableRow)(this.Rows[index]));
                }
            }
            
            public event StoreTableRowChangeEventHandler StoreTableRowChanging;
            
            public event StoreTableRowChangeEventHandler StoreTableRowChanged;
            
            public event StoreTableRowChangeEventHandler StoreTableRowDeleting;
            
            public event StoreTableRowChangeEventHandler StoreTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStoreTableRow(StoreTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow AddStoreTableRow(
                        int CompanyID, 
                        string ClientNumber, 
                        string ClientName, 
                        int StoreNumber, 
                        string SubStoreNumber, 
                        string SanNumber, 
                        string StoreName, 
                        string StoreAddressline1, 
                        string StoreAddressline2, 
                        string StoreCity, 
                        string StoreState, 
                        string StoreZip, 
                        string ContactName, 
                        string PhoneNumber, 
                        System.DateTime WindowTimeStart, 
                        System.DateTime WindowTimeEnd, 
                        string Zone, 
                        string AgentNumber, 
                        string AgentName, 
                        string SpecialInstructions, 
                        string Division, 
                        byte DeliveryScanStatus, 
                        string ScanStatusDescrption, 
                        string IsDeliveryDayMonday, 
                        string IsDeliveryDayTuesday, 
                        string IsDeliveryDayWednesday, 
                        string IsDeliveryDayThursday, 
                        string IsDeliveryDayFriday, 
                        string IsOutforDeliveryDay1, 
                        string IsOutforDeliveryDay2, 
                        byte StandardTransit, 
                        string District, 
                        string DistrictName, 
                        string Region, 
                        string RegionDescription) {
                StoreTableRow rowStoreTableRow = ((StoreTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompanyID,
                        ClientNumber,
                        ClientName,
                        StoreNumber,
                        SubStoreNumber,
                        SanNumber,
                        StoreName,
                        StoreAddressline1,
                        StoreAddressline2,
                        StoreCity,
                        StoreState,
                        StoreZip,
                        ContactName,
                        PhoneNumber,
                        WindowTimeStart,
                        WindowTimeEnd,
                        Zone,
                        AgentNumber,
                        AgentName,
                        SpecialInstructions,
                        Division,
                        DeliveryScanStatus,
                        ScanStatusDescrption,
                        IsDeliveryDayMonday,
                        IsDeliveryDayTuesday,
                        IsDeliveryDayWednesday,
                        IsDeliveryDayThursday,
                        IsDeliveryDayFriday,
                        IsOutforDeliveryDay1,
                        IsOutforDeliveryDay2,
                        StandardTransit,
                        District,
                        DistrictName,
                        Region,
                        RegionDescription};
                rowStoreTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStoreTableRow);
                return rowStoreTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StoreTableDataTable cln = ((StoreTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StoreTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnStoreNumber = base.Columns["StoreNumber"];
                this.columnSubStoreNumber = base.Columns["SubStoreNumber"];
                this.columnSanNumber = base.Columns["SanNumber"];
                this.columnStoreName = base.Columns["StoreName"];
                this.columnStoreAddressline1 = base.Columns["StoreAddressline1"];
                this.columnStoreAddressline2 = base.Columns["StoreAddressline2"];
                this.columnStoreCity = base.Columns["StoreCity"];
                this.columnStoreState = base.Columns["StoreState"];
                this.columnStoreZip = base.Columns["StoreZip"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnWindowTimeStart = base.Columns["WindowTimeStart"];
                this.columnWindowTimeEnd = base.Columns["WindowTimeEnd"];
                this.columnZone = base.Columns["Zone"];
                this.columnAgentNumber = base.Columns["AgentNumber"];
                this.columnAgentName = base.Columns["AgentName"];
                this.columnSpecialInstructions = base.Columns["SpecialInstructions"];
                this.columnDivision = base.Columns["Division"];
                this.columnDeliveryScanStatus = base.Columns["DeliveryScanStatus"];
                this.columnScanStatusDescrption = base.Columns["ScanStatusDescrption"];
                this.columnIsDeliveryDayMonday = base.Columns["IsDeliveryDayMonday"];
                this.columnIsDeliveryDayTuesday = base.Columns["IsDeliveryDayTuesday"];
                this.columnIsDeliveryDayWednesday = base.Columns["IsDeliveryDayWednesday"];
                this.columnIsDeliveryDayThursday = base.Columns["IsDeliveryDayThursday"];
                this.columnIsDeliveryDayFriday = base.Columns["IsDeliveryDayFriday"];
                this.columnIsOutforDeliveryDay1 = base.Columns["IsOutforDeliveryDay1"];
                this.columnIsOutforDeliveryDay2 = base.Columns["IsOutforDeliveryDay2"];
                this.columnStandardTransit = base.Columns["StandardTransit"];
                this.columnDistrict = base.Columns["District"];
                this.columnDistrictName = base.Columns["DistrictName"];
                this.columnRegion = base.Columns["Region"];
                this.columnRegionDescription = base.Columns["RegionDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnClientNumber = new global::System.Data.DataColumn("ClientNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnStoreNumber = new global::System.Data.DataColumn("StoreNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreNumber);
                this.columnSubStoreNumber = new global::System.Data.DataColumn("SubStoreNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubStoreNumber);
                this.columnSanNumber = new global::System.Data.DataColumn("SanNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSanNumber);
                this.columnStoreName = new global::System.Data.DataColumn("StoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreName);
                this.columnStoreAddressline1 = new global::System.Data.DataColumn("StoreAddressline1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreAddressline1);
                this.columnStoreAddressline2 = new global::System.Data.DataColumn("StoreAddressline2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreAddressline2);
                this.columnStoreCity = new global::System.Data.DataColumn("StoreCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreCity);
                this.columnStoreState = new global::System.Data.DataColumn("StoreState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreState);
                this.columnStoreZip = new global::System.Data.DataColumn("StoreZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreZip);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnWindowTimeStart = new global::System.Data.DataColumn("WindowTimeStart", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowTimeStart);
                this.columnWindowTimeEnd = new global::System.Data.DataColumn("WindowTimeEnd", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowTimeEnd);
                this.columnZone = new global::System.Data.DataColumn("Zone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone);
                this.columnAgentNumber = new global::System.Data.DataColumn("AgentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNumber);
                this.columnAgentName = new global::System.Data.DataColumn("AgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentName);
                this.columnSpecialInstructions = new global::System.Data.DataColumn("SpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialInstructions);
                this.columnDivision = new global::System.Data.DataColumn("Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision);
                this.columnDeliveryScanStatus = new global::System.Data.DataColumn("DeliveryScanStatus", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryScanStatus);
                this.columnScanStatusDescrption = new global::System.Data.DataColumn("ScanStatusDescrption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanStatusDescrption);
                this.columnIsDeliveryDayMonday = new global::System.Data.DataColumn("IsDeliveryDayMonday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayMonday);
                this.columnIsDeliveryDayTuesday = new global::System.Data.DataColumn("IsDeliveryDayTuesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayTuesday);
                this.columnIsDeliveryDayWednesday = new global::System.Data.DataColumn("IsDeliveryDayWednesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayWednesday);
                this.columnIsDeliveryDayThursday = new global::System.Data.DataColumn("IsDeliveryDayThursday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayThursday);
                this.columnIsDeliveryDayFriday = new global::System.Data.DataColumn("IsDeliveryDayFriday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayFriday);
                this.columnIsOutforDeliveryDay1 = new global::System.Data.DataColumn("IsOutforDeliveryDay1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutforDeliveryDay1);
                this.columnIsOutforDeliveryDay2 = new global::System.Data.DataColumn("IsOutforDeliveryDay2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutforDeliveryDay2);
                this.columnStandardTransit = new global::System.Data.DataColumn("StandardTransit", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardTransit);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnRegionDescription = new global::System.Data.DataColumn("RegionDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow NewStoreTableRow() {
                return ((StoreTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StoreTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StoreTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StoreTableRowChanged != null)) {
                    this.StoreTableRowChanged(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StoreTableRowChanging != null)) {
                    this.StoreTableRowChanging(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StoreTableRowDeleted != null)) {
                    this.StoreTableRowDeleted(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StoreTableRowDeleting != null)) {
                    this.StoreTableRowDeleting(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStoreTableRow(StoreTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StoreTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeliveryTableDataTable : global::System.Data.TypedTableBase<DeliveryTableRow> {
            
            private global::System.Data.DataColumn columnCBOL;
            
            private global::System.Data.DataColumn columnCPROID;
            
            private global::System.Data.DataColumn columnCPRONumber;
            
            private global::System.Data.DataColumn columnStoreNumber;
            
            private global::System.Data.DataColumn columnOFD1;
            
            private global::System.Data.DataColumn columnOFD2;
            
            private global::System.Data.DataColumn columnPodDate;
            
            private global::System.Data.DataColumn columnPodTime;
            
            private global::System.Data.DataColumn columnShouldBeDeliveredOn;
            
            private global::System.Data.DataColumn columnWindowStartTime;
            
            private global::System.Data.DataColumn columnWindowEndTime;
            
            private global::System.Data.DataColumn columnCartonsSorted;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnTLS;
            
            private global::System.Data.DataColumn columnPODCartonsMatch;
            
            private global::System.Data.DataColumn columnPODCartonsShort;
            
            private global::System.Data.DataColumn columnPODCartonsOver;
            
            private global::System.Data.DataColumn columnPODCartonsMisroute;
            
            private global::System.Data.DataColumn columnPODCartonsDamaged;
            
            private global::System.Data.DataColumn columnPODCartonsScanned;
            
            private global::System.Data.DataColumn columnPODCartonsManual;
            
            private global::System.Data.DataColumn columnOSDCartonsMatch;
            
            private global::System.Data.DataColumn columnOSDCartonsShort;
            
            private global::System.Data.DataColumn columnOSDCartonsOver;
            
            private global::System.Data.DataColumn columnOSDCartonsMisroute;
            
            private global::System.Data.DataColumn columnOSDCartonsDamaged;
            
            private global::System.Data.DataColumn columnOSDCartonsScanned;
            
            private global::System.Data.DataColumn columnOSDCartonsManual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableDataTable() {
                this.TableName = "DeliveryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeliveryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CBOLColumn {
                get {
                    return this.columnCBOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPROIDColumn {
                get {
                    return this.columnCPROID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPRONumberColumn {
                get {
                    return this.columnCPRONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNumberColumn {
                get {
                    return this.columnStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD1Column {
                get {
                    return this.columnOFD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD2Column {
                get {
                    return this.columnOFD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PodDateColumn {
                get {
                    return this.columnPodDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PodTimeColumn {
                get {
                    return this.columnPodTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShouldBeDeliveredOnColumn {
                get {
                    return this.columnShouldBeDeliveredOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowStartTimeColumn {
                get {
                    return this.columnWindowStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowEndTimeColumn {
                get {
                    return this.columnWindowEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsSortedColumn {
                get {
                    return this.columnCartonsSorted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLSColumn {
                get {
                    return this.columnTLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsMatchColumn {
                get {
                    return this.columnPODCartonsMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsShortColumn {
                get {
                    return this.columnPODCartonsShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsOverColumn {
                get {
                    return this.columnPODCartonsOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsMisrouteColumn {
                get {
                    return this.columnPODCartonsMisroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsDamagedColumn {
                get {
                    return this.columnPODCartonsDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsScannedColumn {
                get {
                    return this.columnPODCartonsScanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsManualColumn {
                get {
                    return this.columnPODCartonsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsMatchColumn {
                get {
                    return this.columnOSDCartonsMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsShortColumn {
                get {
                    return this.columnOSDCartonsShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsOverColumn {
                get {
                    return this.columnOSDCartonsOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsMisrouteColumn {
                get {
                    return this.columnOSDCartonsMisroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsDamagedColumn {
                get {
                    return this.columnOSDCartonsDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsScannedColumn {
                get {
                    return this.columnOSDCartonsScanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsManualColumn {
                get {
                    return this.columnOSDCartonsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow this[int index] {
                get {
                    return ((DeliveryTableRow)(this.Rows[index]));
                }
            }
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowChanging;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowChanged;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowDeleting;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeliveryTableRow(DeliveryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow AddDeliveryTableRow(
                        string CBOL, 
                        long CPROID, 
                        long CPRONumber, 
                        int StoreNumber, 
                        System.DateTime OFD1, 
                        System.DateTime OFD2, 
                        System.DateTime PodDate, 
                        System.DateTime PodTime, 
                        System.DateTime ShouldBeDeliveredOn, 
                        System.DateTime WindowStartTime, 
                        System.DateTime WindowEndTime, 
                        int CartonsSorted, 
                        int Weight, 
                        string TLS, 
                        int PODCartonsMatch, 
                        int PODCartonsShort, 
                        int PODCartonsOver, 
                        int PODCartonsMisroute, 
                        int PODCartonsDamaged, 
                        int PODCartonsScanned, 
                        int PODCartonsManual, 
                        int OSDCartonsMatch, 
                        int OSDCartonsShort, 
                        int OSDCartonsOver, 
                        int OSDCartonsMisroute, 
                        int OSDCartonsDamaged, 
                        int OSDCartonsScanned, 
                        int OSDCartonsManual) {
                DeliveryTableRow rowDeliveryTableRow = ((DeliveryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CBOL,
                        CPROID,
                        CPRONumber,
                        StoreNumber,
                        OFD1,
                        OFD2,
                        PodDate,
                        PodTime,
                        ShouldBeDeliveredOn,
                        WindowStartTime,
                        WindowEndTime,
                        CartonsSorted,
                        Weight,
                        TLS,
                        PODCartonsMatch,
                        PODCartonsShort,
                        PODCartonsOver,
                        PODCartonsMisroute,
                        PODCartonsDamaged,
                        PODCartonsScanned,
                        PODCartonsManual,
                        OSDCartonsMatch,
                        OSDCartonsShort,
                        OSDCartonsOver,
                        OSDCartonsMisroute,
                        OSDCartonsDamaged,
                        OSDCartonsScanned,
                        OSDCartonsManual};
                rowDeliveryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDeliveryTableRow);
                return rowDeliveryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DeliveryTableDataTable cln = ((DeliveryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DeliveryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCBOL = base.Columns["CBOL"];
                this.columnCPROID = base.Columns["CPROID"];
                this.columnCPRONumber = base.Columns["CPRONumber"];
                this.columnStoreNumber = base.Columns["StoreNumber"];
                this.columnOFD1 = base.Columns["OFD1"];
                this.columnOFD2 = base.Columns["OFD2"];
                this.columnPodDate = base.Columns["PodDate"];
                this.columnPodTime = base.Columns["PodTime"];
                this.columnShouldBeDeliveredOn = base.Columns["ShouldBeDeliveredOn"];
                this.columnWindowStartTime = base.Columns["WindowStartTime"];
                this.columnWindowEndTime = base.Columns["WindowEndTime"];
                this.columnCartonsSorted = base.Columns["CartonsSorted"];
                this.columnWeight = base.Columns["Weight"];
                this.columnTLS = base.Columns["TLS"];
                this.columnPODCartonsMatch = base.Columns["PODCartonsMatch"];
                this.columnPODCartonsShort = base.Columns["PODCartonsShort"];
                this.columnPODCartonsOver = base.Columns["PODCartonsOver"];
                this.columnPODCartonsMisroute = base.Columns["PODCartonsMisroute"];
                this.columnPODCartonsDamaged = base.Columns["PODCartonsDamaged"];
                this.columnPODCartonsScanned = base.Columns["PODCartonsScanned"];
                this.columnPODCartonsManual = base.Columns["PODCartonsManual"];
                this.columnOSDCartonsMatch = base.Columns["OSDCartonsMatch"];
                this.columnOSDCartonsShort = base.Columns["OSDCartonsShort"];
                this.columnOSDCartonsOver = base.Columns["OSDCartonsOver"];
                this.columnOSDCartonsMisroute = base.Columns["OSDCartonsMisroute"];
                this.columnOSDCartonsDamaged = base.Columns["OSDCartonsDamaged"];
                this.columnOSDCartonsScanned = base.Columns["OSDCartonsScanned"];
                this.columnOSDCartonsManual = base.Columns["OSDCartonsManual"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCBOL = new global::System.Data.DataColumn("CBOL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBOL);
                this.columnCPROID = new global::System.Data.DataColumn("CPROID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPROID);
                this.columnCPRONumber = new global::System.Data.DataColumn("CPRONumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPRONumber);
                this.columnStoreNumber = new global::System.Data.DataColumn("StoreNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreNumber);
                this.columnOFD1 = new global::System.Data.DataColumn("OFD1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD1);
                this.columnOFD2 = new global::System.Data.DataColumn("OFD2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD2);
                this.columnPodDate = new global::System.Data.DataColumn("PodDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodDate);
                this.columnPodTime = new global::System.Data.DataColumn("PodTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodTime);
                this.columnShouldBeDeliveredOn = new global::System.Data.DataColumn("ShouldBeDeliveredOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShouldBeDeliveredOn);
                this.columnWindowStartTime = new global::System.Data.DataColumn("WindowStartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowStartTime);
                this.columnWindowEndTime = new global::System.Data.DataColumn("WindowEndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowEndTime);
                this.columnCartonsSorted = new global::System.Data.DataColumn("CartonsSorted", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonsSorted);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnTLS = new global::System.Data.DataColumn("TLS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLS);
                this.columnPODCartonsMatch = new global::System.Data.DataColumn("PODCartonsMatch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsMatch);
                this.columnPODCartonsShort = new global::System.Data.DataColumn("PODCartonsShort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsShort);
                this.columnPODCartonsOver = new global::System.Data.DataColumn("PODCartonsOver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsOver);
                this.columnPODCartonsMisroute = new global::System.Data.DataColumn("PODCartonsMisroute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsMisroute);
                this.columnPODCartonsDamaged = new global::System.Data.DataColumn("PODCartonsDamaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsDamaged);
                this.columnPODCartonsScanned = new global::System.Data.DataColumn("PODCartonsScanned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsScanned);
                this.columnPODCartonsManual = new global::System.Data.DataColumn("PODCartonsManual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsManual);
                this.columnOSDCartonsMatch = new global::System.Data.DataColumn("OSDCartonsMatch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsMatch);
                this.columnOSDCartonsShort = new global::System.Data.DataColumn("OSDCartonsShort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsShort);
                this.columnOSDCartonsOver = new global::System.Data.DataColumn("OSDCartonsOver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsOver);
                this.columnOSDCartonsMisroute = new global::System.Data.DataColumn("OSDCartonsMisroute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsMisroute);
                this.columnOSDCartonsDamaged = new global::System.Data.DataColumn("OSDCartonsDamaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsDamaged);
                this.columnOSDCartonsScanned = new global::System.Data.DataColumn("OSDCartonsScanned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsScanned);
                this.columnOSDCartonsManual = new global::System.Data.DataColumn("OSDCartonsManual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsManual);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow NewDeliveryTableRow() {
                return ((DeliveryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DeliveryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DeliveryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeliveryTableRowChanged != null)) {
                    this.DeliveryTableRowChanged(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeliveryTableRowChanging != null)) {
                    this.DeliveryTableRowChanging(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeliveryTableRowDeleted != null)) {
                    this.DeliveryTableRowDeleted(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeliveryTableRowDeleting != null)) {
                    this.DeliveryTableRowDeleting(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeliveryTableRow(DeliveryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeliveryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OSDScanTableDataTable : global::System.Data.TypedTableBase<OSDScanTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLabelSequenceNumber;
            
            private global::System.Data.DataColumn columnScanStatus;
            
            private global::System.Data.DataColumn columnCartonStatus;
            
            private global::System.Data.DataColumn columnDamage;
            
            private global::System.Data.DataColumn columnScanDate;
            
            private global::System.Data.DataColumn columnScanTime;
            
            private global::System.Data.DataColumn columnTrackingNumber;
            
            private global::System.Data.DataColumn columnVendorNumber;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnZoneCode;
            
            private global::System.Data.DataColumn columnTLNumber;
            
            private global::System.Data.DataColumn columnBLNumber;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupNumber;
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnVendorKey;
            
            private global::System.Data.DataColumn columnSortDate;
            
            private global::System.Data.DataColumn columnSortTime;
            
            private global::System.Data.DataColumn columnSortedLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OSDScanTableDataTable() {
                this.TableName = "OSDScanTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OSDScanTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OSDScanTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelSequenceNumberColumn {
                get {
                    return this.columnLabelSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanStatusColumn {
                get {
                    return this.columnScanStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonStatusColumn {
                get {
                    return this.columnCartonStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DamageColumn {
                get {
                    return this.columnDamage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanDateColumn {
                get {
                    return this.columnScanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanTimeColumn {
                get {
                    return this.columnScanTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrackingNumberColumn {
                get {
                    return this.columnTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNumberColumn {
                get {
                    return this.columnVendorNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneCodeColumn {
                get {
                    return this.columnZoneCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLNumberColumn {
                get {
                    return this.columnTLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLNumberColumn {
                get {
                    return this.columnBLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDateColumn {
                get {
                    return this.columnSortDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortTimeColumn {
                get {
                    return this.columnSortTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortedLocationColumn {
                get {
                    return this.columnSortedLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OSDScanTableRow this[int index] {
                get {
                    return ((OSDScanTableRow)(this.Rows[index]));
                }
            }
            
            public event OSDScanTableRowChangeEventHandler OSDScanTableRowChanging;
            
            public event OSDScanTableRowChangeEventHandler OSDScanTableRowChanged;
            
            public event OSDScanTableRowChangeEventHandler OSDScanTableRowDeleting;
            
            public event OSDScanTableRowChangeEventHandler OSDScanTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOSDScanTableRow(OSDScanTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OSDScanTableRow AddOSDScanTableRow(
                        long ID, 
                        long LabelSequenceNumber, 
                        string ScanStatus, 
                        string CartonStatus, 
                        string Damage, 
                        System.DateTime ScanDate, 
                        System.DateTime ScanTime, 
                        string TrackingNumber, 
                        string VendorNumber, 
                        string VendorName, 
                        int Weight, 
                        string ZoneCode, 
                        string TLNumber, 
                        int BLNumber, 
                        System.DateTime PickupDate, 
                        int PickupNumber, 
                        string ItemNumber, 
                        string VendorKey, 
                        System.DateTime SortDate, 
                        System.DateTime SortTime, 
                        string SortedLocation) {
                OSDScanTableRow rowOSDScanTableRow = ((OSDScanTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        LabelSequenceNumber,
                        ScanStatus,
                        CartonStatus,
                        Damage,
                        ScanDate,
                        ScanTime,
                        TrackingNumber,
                        VendorNumber,
                        VendorName,
                        Weight,
                        ZoneCode,
                        TLNumber,
                        BLNumber,
                        PickupDate,
                        PickupNumber,
                        ItemNumber,
                        VendorKey,
                        SortDate,
                        SortTime,
                        SortedLocation};
                rowOSDScanTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOSDScanTableRow);
                return rowOSDScanTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OSDScanTableDataTable cln = ((OSDScanTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OSDScanTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLabelSequenceNumber = base.Columns["LabelSequenceNumber"];
                this.columnScanStatus = base.Columns["ScanStatus"];
                this.columnCartonStatus = base.Columns["CartonStatus"];
                this.columnDamage = base.Columns["Damage"];
                this.columnScanDate = base.Columns["ScanDate"];
                this.columnScanTime = base.Columns["ScanTime"];
                this.columnTrackingNumber = base.Columns["TrackingNumber"];
                this.columnVendorNumber = base.Columns["VendorNumber"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnWeight = base.Columns["Weight"];
                this.columnZoneCode = base.Columns["ZoneCode"];
                this.columnTLNumber = base.Columns["TLNumber"];
                this.columnBLNumber = base.Columns["BLNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnSortDate = base.Columns["SortDate"];
                this.columnSortTime = base.Columns["SortTime"];
                this.columnSortedLocation = base.Columns["SortedLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLabelSequenceNumber = new global::System.Data.DataColumn("LabelSequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelSequenceNumber);
                this.columnScanStatus = new global::System.Data.DataColumn("ScanStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanStatus);
                this.columnCartonStatus = new global::System.Data.DataColumn("CartonStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonStatus);
                this.columnDamage = new global::System.Data.DataColumn("Damage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDamage);
                this.columnScanDate = new global::System.Data.DataColumn("ScanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanDate);
                this.columnScanTime = new global::System.Data.DataColumn("ScanTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanTime);
                this.columnTrackingNumber = new global::System.Data.DataColumn("TrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingNumber);
                this.columnVendorNumber = new global::System.Data.DataColumn("VendorNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorNumber);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnZoneCode = new global::System.Data.DataColumn("ZoneCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneCode);
                this.columnTLNumber = new global::System.Data.DataColumn("TLNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLNumber);
                this.columnBLNumber = new global::System.Data.DataColumn("BLNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLNumber);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new global::System.Data.DataColumn("PickupNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnVendorKey = new global::System.Data.DataColumn("VendorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnSortDate = new global::System.Data.DataColumn("SortDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortDate);
                this.columnSortTime = new global::System.Data.DataColumn("SortTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortTime);
                this.columnSortedLocation = new global::System.Data.DataColumn("SortedLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortedLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OSDScanTableRow NewOSDScanTableRow() {
                return ((OSDScanTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OSDScanTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OSDScanTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OSDScanTableRowChanged != null)) {
                    this.OSDScanTableRowChanged(this, new OSDScanTableRowChangeEvent(((OSDScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OSDScanTableRowChanging != null)) {
                    this.OSDScanTableRowChanging(this, new OSDScanTableRowChangeEvent(((OSDScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OSDScanTableRowDeleted != null)) {
                    this.OSDScanTableRowDeleted(this, new OSDScanTableRowChangeEvent(((OSDScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OSDScanTableRowDeleting != null)) {
                    this.OSDScanTableRowDeleting(this, new OSDScanTableRowChangeEvent(((OSDScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOSDScanTableRow(OSDScanTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OSDScanTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PODScanTableDataTable : global::System.Data.TypedTableBase<PODScanTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLabelSequenceNumber;
            
            private global::System.Data.DataColumn columnScanStatus;
            
            private global::System.Data.DataColumn columnCartonStatus;
            
            private global::System.Data.DataColumn columnDamage;
            
            private global::System.Data.DataColumn columnScanDate;
            
            private global::System.Data.DataColumn columnScanTime;
            
            private global::System.Data.DataColumn columnTrackingNumber;
            
            private global::System.Data.DataColumn columnVendorNumber;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnZoneCode;
            
            private global::System.Data.DataColumn columnTLNumber;
            
            private global::System.Data.DataColumn columnBLNumber;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupNumber;
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnVendorKey;
            
            private global::System.Data.DataColumn columnSortDate;
            
            private global::System.Data.DataColumn columnSortTime;
            
            private global::System.Data.DataColumn columnSortedLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PODScanTableDataTable() {
                this.TableName = "PODScanTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PODScanTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PODScanTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelSequenceNumberColumn {
                get {
                    return this.columnLabelSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanStatusColumn {
                get {
                    return this.columnScanStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonStatusColumn {
                get {
                    return this.columnCartonStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DamageColumn {
                get {
                    return this.columnDamage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanDateColumn {
                get {
                    return this.columnScanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanTimeColumn {
                get {
                    return this.columnScanTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrackingNumberColumn {
                get {
                    return this.columnTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNumberColumn {
                get {
                    return this.columnVendorNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneCodeColumn {
                get {
                    return this.columnZoneCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLNumberColumn {
                get {
                    return this.columnTLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLNumberColumn {
                get {
                    return this.columnBLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDateColumn {
                get {
                    return this.columnSortDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortTimeColumn {
                get {
                    return this.columnSortTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortedLocationColumn {
                get {
                    return this.columnSortedLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PODScanTableRow this[int index] {
                get {
                    return ((PODScanTableRow)(this.Rows[index]));
                }
            }
            
            public event PODScanTableRowChangeEventHandler PODScanTableRowChanging;
            
            public event PODScanTableRowChangeEventHandler PODScanTableRowChanged;
            
            public event PODScanTableRowChangeEventHandler PODScanTableRowDeleting;
            
            public event PODScanTableRowChangeEventHandler PODScanTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPODScanTableRow(PODScanTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PODScanTableRow AddPODScanTableRow(
                        long ID, 
                        long LabelSequenceNumber, 
                        string ScanStatus, 
                        string CartonStatus, 
                        string Damage, 
                        System.DateTime ScanDate, 
                        System.DateTime ScanTime, 
                        string TrackingNumber, 
                        string VendorNumber, 
                        string VendorName, 
                        int Weight, 
                        string ZoneCode, 
                        string TLNumber, 
                        int BLNumber, 
                        System.DateTime PickupDate, 
                        int PickupNumber, 
                        string ItemNumber, 
                        string VendorKey, 
                        System.DateTime SortDate, 
                        System.DateTime SortTime, 
                        string SortedLocation) {
                PODScanTableRow rowPODScanTableRow = ((PODScanTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        LabelSequenceNumber,
                        ScanStatus,
                        CartonStatus,
                        Damage,
                        ScanDate,
                        ScanTime,
                        TrackingNumber,
                        VendorNumber,
                        VendorName,
                        Weight,
                        ZoneCode,
                        TLNumber,
                        BLNumber,
                        PickupDate,
                        PickupNumber,
                        ItemNumber,
                        VendorKey,
                        SortDate,
                        SortTime,
                        SortedLocation};
                rowPODScanTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPODScanTableRow);
                return rowPODScanTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PODScanTableDataTable cln = ((PODScanTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PODScanTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLabelSequenceNumber = base.Columns["LabelSequenceNumber"];
                this.columnScanStatus = base.Columns["ScanStatus"];
                this.columnCartonStatus = base.Columns["CartonStatus"];
                this.columnDamage = base.Columns["Damage"];
                this.columnScanDate = base.Columns["ScanDate"];
                this.columnScanTime = base.Columns["ScanTime"];
                this.columnTrackingNumber = base.Columns["TrackingNumber"];
                this.columnVendorNumber = base.Columns["VendorNumber"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnWeight = base.Columns["Weight"];
                this.columnZoneCode = base.Columns["ZoneCode"];
                this.columnTLNumber = base.Columns["TLNumber"];
                this.columnBLNumber = base.Columns["BLNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnSortDate = base.Columns["SortDate"];
                this.columnSortTime = base.Columns["SortTime"];
                this.columnSortedLocation = base.Columns["SortedLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLabelSequenceNumber = new global::System.Data.DataColumn("LabelSequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelSequenceNumber);
                this.columnScanStatus = new global::System.Data.DataColumn("ScanStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanStatus);
                this.columnCartonStatus = new global::System.Data.DataColumn("CartonStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonStatus);
                this.columnDamage = new global::System.Data.DataColumn("Damage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDamage);
                this.columnScanDate = new global::System.Data.DataColumn("ScanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanDate);
                this.columnScanTime = new global::System.Data.DataColumn("ScanTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanTime);
                this.columnTrackingNumber = new global::System.Data.DataColumn("TrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingNumber);
                this.columnVendorNumber = new global::System.Data.DataColumn("VendorNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorNumber);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnZoneCode = new global::System.Data.DataColumn("ZoneCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneCode);
                this.columnTLNumber = new global::System.Data.DataColumn("TLNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLNumber);
                this.columnBLNumber = new global::System.Data.DataColumn("BLNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLNumber);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new global::System.Data.DataColumn("PickupNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnVendorKey = new global::System.Data.DataColumn("VendorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnSortDate = new global::System.Data.DataColumn("SortDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortDate);
                this.columnSortTime = new global::System.Data.DataColumn("SortTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortTime);
                this.columnSortedLocation = new global::System.Data.DataColumn("SortedLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortedLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PODScanTableRow NewPODScanTableRow() {
                return ((PODScanTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PODScanTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PODScanTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PODScanTableRowChanged != null)) {
                    this.PODScanTableRowChanged(this, new PODScanTableRowChangeEvent(((PODScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PODScanTableRowChanging != null)) {
                    this.PODScanTableRowChanging(this, new PODScanTableRowChangeEvent(((PODScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PODScanTableRowDeleted != null)) {
                    this.PODScanTableRowDeleted(this, new PODScanTableRowChangeEvent(((PODScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PODScanTableRowDeleting != null)) {
                    this.PODScanTableRowDeleting(this, new PODScanTableRowChangeEvent(((PODScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePODScanTableRow(PODScanTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PODScanTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RegionTableDataTable : global::System.Data.TypedTableBase<RegionTableRow> {
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnRegionName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegionTableDataTable() {
                this.TableName = "RegionTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RegionTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RegionTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionNameColumn {
                get {
                    return this.columnRegionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegionTableRow this[int index] {
                get {
                    return ((RegionTableRow)(this.Rows[index]));
                }
            }
            
            public event RegionTableRowChangeEventHandler RegionTableRowChanging;
            
            public event RegionTableRowChangeEventHandler RegionTableRowChanged;
            
            public event RegionTableRowChangeEventHandler RegionTableRowDeleting;
            
            public event RegionTableRowChangeEventHandler RegionTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRegionTableRow(RegionTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegionTableRow AddRegionTableRow(string Region, string RegionName) {
                RegionTableRow rowRegionTableRow = ((RegionTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Region,
                        RegionName};
                rowRegionTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRegionTableRow);
                return rowRegionTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RegionTableDataTable cln = ((RegionTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RegionTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRegion = base.Columns["Region"];
                this.columnRegionName = base.Columns["RegionName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnRegionName = new global::System.Data.DataColumn("RegionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionName);
                this.columnRegion.AllowDBNull = false;
                this.columnRegionName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegionTableRow NewRegionTableRow() {
                return ((RegionTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RegionTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RegionTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RegionTableRowChanged != null)) {
                    this.RegionTableRowChanged(this, new RegionTableRowChangeEvent(((RegionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RegionTableRowChanging != null)) {
                    this.RegionTableRowChanging(this, new RegionTableRowChangeEvent(((RegionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RegionTableRowDeleted != null)) {
                    this.RegionTableRowDeleted(this, new RegionTableRowChangeEvent(((RegionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RegionTableRowDeleting != null)) {
                    this.RegionTableRowDeleting(this, new RegionTableRowChangeEvent(((RegionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRegionTableRow(RegionTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RegionTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistrictTableDataTable : global::System.Data.TypedTableBase<DistrictTableRow> {
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictTableDataTable() {
                this.TableName = "DistrictTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistrictTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictTableRow this[int index] {
                get {
                    return ((DistrictTableRow)(this.Rows[index]));
                }
            }
            
            public event DistrictTableRowChangeEventHandler DistrictTableRowChanging;
            
            public event DistrictTableRowChangeEventHandler DistrictTableRowChanged;
            
            public event DistrictTableRowChangeEventHandler DistrictTableRowDeleting;
            
            public event DistrictTableRowChangeEventHandler DistrictTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistrictTableRow(DistrictTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictTableRow AddDistrictTableRow(string District, string DistrictName) {
                DistrictTableRow rowDistrictTableRow = ((DistrictTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        District,
                        DistrictName};
                rowDistrictTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistrictTableRow);
                return rowDistrictTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistrictTableDataTable cln = ((DistrictTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistrictTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistrict = base.Columns["District"];
                this.columnDistrictName = base.Columns["DistrictName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columnDistrict.AllowDBNull = false;
                this.columnDistrictName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictTableRow NewDistrictTableRow() {
                return ((DistrictTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistrictTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistrictTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistrictTableRowChanged != null)) {
                    this.DistrictTableRowChanged(this, new DistrictTableRowChangeEvent(((DistrictTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistrictTableRowChanging != null)) {
                    this.DistrictTableRowChanging(this, new DistrictTableRowChangeEvent(((DistrictTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistrictTableRowDeleted != null)) {
                    this.DistrictTableRowDeleted(this, new DistrictTableRowChangeEvent(((DistrictTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistrictTableRowDeleting != null)) {
                    this.DistrictTableRowDeleting(this, new DistrictTableRowChangeEvent(((DistrictTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistrictTableRow(DistrictTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistrictTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AgentTableDataTable : global::System.Data.TypedTableBase<AgentTableRow> {
            
            private global::System.Data.DataColumn columnAgentNumber;
            
            private global::System.Data.DataColumn columnAgentName;
            
            private global::System.Data.DataColumn columnMainZone;
            
            private global::System.Data.DataColumn columnAgentParentNumber;
            
            private global::System.Data.DataColumn columnAgentSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableDataTable() {
                this.TableName = "AgentTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AgentTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNumberColumn {
                get {
                    return this.columnAgentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNameColumn {
                get {
                    return this.columnAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainZoneColumn {
                get {
                    return this.columnMainZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentParentNumberColumn {
                get {
                    return this.columnAgentParentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentSummaryColumn {
                get {
                    return this.columnAgentSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow this[int index] {
                get {
                    return ((AgentTableRow)(this.Rows[index]));
                }
            }
            
            public event AgentTableRowChangeEventHandler AgentTableRowChanging;
            
            public event AgentTableRowChangeEventHandler AgentTableRowChanged;
            
            public event AgentTableRowChangeEventHandler AgentTableRowDeleting;
            
            public event AgentTableRowChangeEventHandler AgentTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAgentTableRow(AgentTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow AddAgentTableRow(string AgentNumber, string AgentName, string MainZone, string AgentParentNumber, string AgentSummary) {
                AgentTableRow rowAgentTableRow = ((AgentTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AgentNumber,
                        AgentName,
                        MainZone,
                        AgentParentNumber,
                        AgentSummary};
                rowAgentTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAgentTableRow);
                return rowAgentTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AgentTableDataTable cln = ((AgentTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AgentTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAgentNumber = base.Columns["AgentNumber"];
                this.columnAgentName = base.Columns["AgentName"];
                this.columnMainZone = base.Columns["MainZone"];
                this.columnAgentParentNumber = base.Columns["AgentParentNumber"];
                this.columnAgentSummary = base.Columns["AgentSummary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAgentNumber = new global::System.Data.DataColumn("AgentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNumber);
                this.columnAgentName = new global::System.Data.DataColumn("AgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentName);
                this.columnMainZone = new global::System.Data.DataColumn("MainZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainZone);
                this.columnAgentParentNumber = new global::System.Data.DataColumn("AgentParentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentParentNumber);
                this.columnAgentSummary = new global::System.Data.DataColumn("AgentSummary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentSummary);
                this.columnAgentNumber.AllowDBNull = false;
                this.columnAgentName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow NewAgentTableRow() {
                return ((AgentTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AgentTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AgentTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgentTableRowChanged != null)) {
                    this.AgentTableRowChanged(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgentTableRowChanging != null)) {
                    this.AgentTableRowChanging(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgentTableRowDeleted != null)) {
                    this.AgentTableRowDeleted(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgentTableRowDeleting != null)) {
                    this.AgentTableRowDeleting(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAgentTableRow(AgentTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AgentTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyTableRow : global::System.Data.DataRow {
            
            private CompanyTableDataTable tableCompanyTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompanyTable = ((CompanyTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableCompanyTable.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTable.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTable.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyType {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTable.CompanyTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyType\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.CompanyTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableCompanyTable.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableCompanyTable.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableCompanyTable.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableCompanyTable.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tableCompanyTable.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tableCompanyTable.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTypeNull() {
                return this.IsNull(this.tableCompanyTable.CompanyTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTypeNull() {
                this[this.tableCompanyTable.CompanyTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StoreTableRow : global::System.Data.DataRow {
            
            private StoreTableDataTable tableStoreTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StoreTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStoreTable = ((StoreTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableStoreTable.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ClientNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ClientNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreNumber {
                get {
                    try {
                        return ((int)(this[this.tableStoreTable.StoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubStoreNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.SubStoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubStoreNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.SubStoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SanNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.SanNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SanNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.SanNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreAddressline1 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreAddressline1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreAddressline1\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreAddressline1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreAddressline2 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreAddressline2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreAddressline2\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreAddressline2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreCity {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreCity\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreState {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreState\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreZip {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreZip\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.PhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowTimeStart {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStoreTable.WindowTimeStartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowTimeStart\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.WindowTimeStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowTimeEnd {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStoreTable.WindowTimeEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowTimeEnd\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.WindowTimeEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.AgentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.AgentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.AgentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.AgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.SpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialInstructions\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.SpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Division {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.DivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeliveryScanStatus {
                get {
                    try {
                        return ((byte)(this[this.tableStoreTable.DeliveryScanStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryScanStatus\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DeliveryScanStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScanStatusDescrption {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ScanStatusDescrptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanStatusDescrption\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ScanStatusDescrptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayMonday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayMondayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayMonday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayMondayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayTuesday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayTuesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayTuesday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayTuesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayWednesday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayWednesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayWednesday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayWednesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayThursday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayThursdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayThursday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayThursdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayFriday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayFridayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayFriday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayFridayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsOutforDeliveryDay1 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsOutforDeliveryDay1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOutforDeliveryDay1\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsOutforDeliveryDay1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsOutforDeliveryDay2 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsOutforDeliveryDay2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOutforDeliveryDay2\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsOutforDeliveryDay2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte StandardTransit {
                get {
                    try {
                        return ((byte)(this[this.tableStoreTable.StandardTransitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardTransit\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StandardTransitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.DistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegionDescription {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.RegionDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionDescription\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.RegionDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableStoreTable.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableStoreTable.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableStoreTable.ClientNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableStoreTable.ClientNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableStoreTable.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableStoreTable.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNumberNull() {
                return this.IsNull(this.tableStoreTable.StoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNumberNull() {
                this[this.tableStoreTable.StoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubStoreNumberNull() {
                return this.IsNull(this.tableStoreTable.SubStoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubStoreNumberNull() {
                this[this.tableStoreTable.SubStoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSanNumberNull() {
                return this.IsNull(this.tableStoreTable.SanNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSanNumberNull() {
                this[this.tableStoreTable.SanNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNameNull() {
                return this.IsNull(this.tableStoreTable.StoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNameNull() {
                this[this.tableStoreTable.StoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreAddressline1Null() {
                return this.IsNull(this.tableStoreTable.StoreAddressline1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreAddressline1Null() {
                this[this.tableStoreTable.StoreAddressline1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreAddressline2Null() {
                return this.IsNull(this.tableStoreTable.StoreAddressline2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreAddressline2Null() {
                this[this.tableStoreTable.StoreAddressline2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreCityNull() {
                return this.IsNull(this.tableStoreTable.StoreCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreCityNull() {
                this[this.tableStoreTable.StoreCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreStateNull() {
                return this.IsNull(this.tableStoreTable.StoreStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreStateNull() {
                this[this.tableStoreTable.StoreStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreZipNull() {
                return this.IsNull(this.tableStoreTable.StoreZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreZipNull() {
                this[this.tableStoreTable.StoreZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableStoreTable.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableStoreTable.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableStoreTable.PhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNumberNull() {
                this[this.tableStoreTable.PhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowTimeStartNull() {
                return this.IsNull(this.tableStoreTable.WindowTimeStartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowTimeStartNull() {
                this[this.tableStoreTable.WindowTimeStartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowTimeEndNull() {
                return this.IsNull(this.tableStoreTable.WindowTimeEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowTimeEndNull() {
                this[this.tableStoreTable.WindowTimeEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneNull() {
                return this.IsNull(this.tableStoreTable.ZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneNull() {
                this[this.tableStoreTable.ZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNumberNull() {
                return this.IsNull(this.tableStoreTable.AgentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNumberNull() {
                this[this.tableStoreTable.AgentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNameNull() {
                return this.IsNull(this.tableStoreTable.AgentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNameNull() {
                this[this.tableStoreTable.AgentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialInstructionsNull() {
                return this.IsNull(this.tableStoreTable.SpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialInstructionsNull() {
                this[this.tableStoreTable.SpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNull() {
                return this.IsNull(this.tableStoreTable.DivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNull() {
                this[this.tableStoreTable.DivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryScanStatusNull() {
                return this.IsNull(this.tableStoreTable.DeliveryScanStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryScanStatusNull() {
                this[this.tableStoreTable.DeliveryScanStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanStatusDescrptionNull() {
                return this.IsNull(this.tableStoreTable.ScanStatusDescrptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanStatusDescrptionNull() {
                this[this.tableStoreTable.ScanStatusDescrptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayMondayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayMondayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayMondayNull() {
                this[this.tableStoreTable.IsDeliveryDayMondayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayTuesdayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayTuesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayTuesdayNull() {
                this[this.tableStoreTable.IsDeliveryDayTuesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayWednesdayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayWednesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayWednesdayNull() {
                this[this.tableStoreTable.IsDeliveryDayWednesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayThursdayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayThursdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayThursdayNull() {
                this[this.tableStoreTable.IsDeliveryDayThursdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayFridayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayFridayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayFridayNull() {
                this[this.tableStoreTable.IsDeliveryDayFridayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOutforDeliveryDay1Null() {
                return this.IsNull(this.tableStoreTable.IsOutforDeliveryDay1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOutforDeliveryDay1Null() {
                this[this.tableStoreTable.IsOutforDeliveryDay1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOutforDeliveryDay2Null() {
                return this.IsNull(this.tableStoreTable.IsOutforDeliveryDay2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOutforDeliveryDay2Null() {
                this[this.tableStoreTable.IsOutforDeliveryDay2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardTransitNull() {
                return this.IsNull(this.tableStoreTable.StandardTransitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardTransitNull() {
                this[this.tableStoreTable.StandardTransitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableStoreTable.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableStoreTable.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNameNull() {
                return this.IsNull(this.tableStoreTable.DistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNameNull() {
                this[this.tableStoreTable.DistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tableStoreTable.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tableStoreTable.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionDescriptionNull() {
                return this.IsNull(this.tableStoreTable.RegionDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionDescriptionNull() {
                this[this.tableStoreTable.RegionDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeliveryTableRow : global::System.Data.DataRow {
            
            private DeliveryTableDataTable tableDeliveryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeliveryTable = ((DeliveryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CBOL {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryTable.CBOLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBOL\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CBOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPROID {
                get {
                    try {
                        return ((long)(this[this.tableDeliveryTable.CPROIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPROID\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CPROIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPRONumber {
                get {
                    try {
                        return ((long)(this[this.tableDeliveryTable.CPRONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPRONumber\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CPRONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreNumber {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.StoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreNumber\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.StoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.OFD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD1\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OFD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.OFD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD2\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OFD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PodDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.PodDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PodDate\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PodDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PodTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.PodTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PodTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PodTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShouldBeDeliveredOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShouldBeDeliveredOn\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowStartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.WindowStartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowStartTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WindowStartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowEndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.WindowEndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowEndTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WindowEndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CartonsSorted {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.CartonsSortedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonsSorted\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CartonsSortedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLS {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryTable.TLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLS\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.TLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsMatch {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsMatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsMatch\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsMatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsShort {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsShort\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsOver {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsOver\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsMisroute {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsMisrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsMisroute\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsMisrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsDamaged {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsDamagedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsDamaged\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsScanned {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsScanned\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsScannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsManual {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsManualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsManual\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsMatch {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsMatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsMatch\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsMatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsShort {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsShort\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsOver {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsOver\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsMisroute {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsMisrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsMisroute\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsMisrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsDamaged {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsDamagedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsDamaged\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsScanned {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsScanned\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsScannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsManual {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsManualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsManual\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCBOLNull() {
                return this.IsNull(this.tableDeliveryTable.CBOLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCBOLNull() {
                this[this.tableDeliveryTable.CBOLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPROIDNull() {
                return this.IsNull(this.tableDeliveryTable.CPROIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPROIDNull() {
                this[this.tableDeliveryTable.CPROIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPRONumberNull() {
                return this.IsNull(this.tableDeliveryTable.CPRONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPRONumberNull() {
                this[this.tableDeliveryTable.CPRONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNumberNull() {
                return this.IsNull(this.tableDeliveryTable.StoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNumberNull() {
                this[this.tableDeliveryTable.StoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD1Null() {
                return this.IsNull(this.tableDeliveryTable.OFD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD1Null() {
                this[this.tableDeliveryTable.OFD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD2Null() {
                return this.IsNull(this.tableDeliveryTable.OFD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD2Null() {
                this[this.tableDeliveryTable.OFD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPodDateNull() {
                return this.IsNull(this.tableDeliveryTable.PodDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPodDateNull() {
                this[this.tableDeliveryTable.PodDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPodTimeNull() {
                return this.IsNull(this.tableDeliveryTable.PodTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPodTimeNull() {
                this[this.tableDeliveryTable.PodTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShouldBeDeliveredOnNull() {
                return this.IsNull(this.tableDeliveryTable.ShouldBeDeliveredOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShouldBeDeliveredOnNull() {
                this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowStartTimeNull() {
                return this.IsNull(this.tableDeliveryTable.WindowStartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowStartTimeNull() {
                this[this.tableDeliveryTable.WindowStartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowEndTimeNull() {
                return this.IsNull(this.tableDeliveryTable.WindowEndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowEndTimeNull() {
                this[this.tableDeliveryTable.WindowEndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsSortedNull() {
                return this.IsNull(this.tableDeliveryTable.CartonsSortedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsSortedNull() {
                this[this.tableDeliveryTable.CartonsSortedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableDeliveryTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableDeliveryTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLSNull() {
                return this.IsNull(this.tableDeliveryTable.TLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLSNull() {
                this[this.tableDeliveryTable.TLSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsMatchNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsMatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsMatchNull() {
                this[this.tableDeliveryTable.PODCartonsMatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsShortNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsShortNull() {
                this[this.tableDeliveryTable.PODCartonsShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsOverNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsOverNull() {
                this[this.tableDeliveryTable.PODCartonsOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsMisrouteNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsMisrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsMisrouteNull() {
                this[this.tableDeliveryTable.PODCartonsMisrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsDamagedNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsDamagedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsDamagedNull() {
                this[this.tableDeliveryTable.PODCartonsDamagedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsScannedNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsScannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsScannedNull() {
                this[this.tableDeliveryTable.PODCartonsScannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsManualNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsManualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsManualNull() {
                this[this.tableDeliveryTable.PODCartonsManualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsMatchNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsMatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsMatchNull() {
                this[this.tableDeliveryTable.OSDCartonsMatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsShortNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsShortNull() {
                this[this.tableDeliveryTable.OSDCartonsShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsOverNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsOverNull() {
                this[this.tableDeliveryTable.OSDCartonsOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsMisrouteNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsMisrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsMisrouteNull() {
                this[this.tableDeliveryTable.OSDCartonsMisrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsDamagedNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsDamagedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsDamagedNull() {
                this[this.tableDeliveryTable.OSDCartonsDamagedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsScannedNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsScannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsScannedNull() {
                this[this.tableDeliveryTable.OSDCartonsScannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsManualNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsManualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsManualNull() {
                this[this.tableDeliveryTable.OSDCartonsManualColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OSDScanTableRow : global::System.Data.DataRow {
            
            private OSDScanTableDataTable tableOSDScanTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OSDScanTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOSDScanTable = ((OSDScanTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableOSDScanTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LabelSequenceNumber {
                get {
                    try {
                        return ((long)(this[this.tableOSDScanTable.LabelSequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelSequenceNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.LabelSequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScanStatus {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.ScanStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanStatus\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.ScanStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CartonStatus {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.CartonStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonStatus\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.CartonStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Damage {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Damage\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOSDScanTable.ScanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanDate\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.ScanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOSDScanTable.ScanTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanTime\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.ScanTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.TrackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.TrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorNumber {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.VendorNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.VendorNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableOSDScanTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZoneCode {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.ZoneCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneCode\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.ZoneCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLNumber {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.TLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.TLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLNumber {
                get {
                    try {
                        return ((int)(this[this.tableOSDScanTable.BLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.BLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOSDScanTable.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PickupNumber {
                get {
                    try {
                        return ((int)(this[this.tableOSDScanTable.PickupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.PickupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNumber {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.ItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNumber\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.VendorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.VendorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOSDScanTable.SortDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortDate\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.SortDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOSDScanTable.SortTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortTime\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.SortTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SortedLocation {
                get {
                    try {
                        return ((string)(this[this.tableOSDScanTable.SortedLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortedLocation\' in table \'OSDScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOSDScanTable.SortedLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableOSDScanTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableOSDScanTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelSequenceNumberNull() {
                return this.IsNull(this.tableOSDScanTable.LabelSequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelSequenceNumberNull() {
                this[this.tableOSDScanTable.LabelSequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanStatusNull() {
                return this.IsNull(this.tableOSDScanTable.ScanStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanStatusNull() {
                this[this.tableOSDScanTable.ScanStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonStatusNull() {
                return this.IsNull(this.tableOSDScanTable.CartonStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonStatusNull() {
                this[this.tableOSDScanTable.CartonStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDamageNull() {
                return this.IsNull(this.tableOSDScanTable.DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDamageNull() {
                this[this.tableOSDScanTable.DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanDateNull() {
                return this.IsNull(this.tableOSDScanTable.ScanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanDateNull() {
                this[this.tableOSDScanTable.ScanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanTimeNull() {
                return this.IsNull(this.tableOSDScanTable.ScanTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanTimeNull() {
                this[this.tableOSDScanTable.ScanTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrackingNumberNull() {
                return this.IsNull(this.tableOSDScanTable.TrackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrackingNumberNull() {
                this[this.tableOSDScanTable.TrackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNumberNull() {
                return this.IsNull(this.tableOSDScanTable.VendorNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNumberNull() {
                this[this.tableOSDScanTable.VendorNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableOSDScanTable.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableOSDScanTable.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableOSDScanTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableOSDScanTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneCodeNull() {
                return this.IsNull(this.tableOSDScanTable.ZoneCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneCodeNull() {
                this[this.tableOSDScanTable.ZoneCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLNumberNull() {
                return this.IsNull(this.tableOSDScanTable.TLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLNumberNull() {
                this[this.tableOSDScanTable.TLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLNumberNull() {
                return this.IsNull(this.tableOSDScanTable.BLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLNumberNull() {
                this[this.tableOSDScanTable.BLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableOSDScanTable.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableOSDScanTable.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableOSDScanTable.PickupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tableOSDScanTable.PickupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNumberNull() {
                return this.IsNull(this.tableOSDScanTable.ItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNumberNull() {
                this[this.tableOSDScanTable.ItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableOSDScanTable.VendorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tableOSDScanTable.VendorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDateNull() {
                return this.IsNull(this.tableOSDScanTable.SortDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDateNull() {
                this[this.tableOSDScanTable.SortDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTimeNull() {
                return this.IsNull(this.tableOSDScanTable.SortTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTimeNull() {
                this[this.tableOSDScanTable.SortTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortedLocationNull() {
                return this.IsNull(this.tableOSDScanTable.SortedLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortedLocationNull() {
                this[this.tableOSDScanTable.SortedLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PODScanTableRow : global::System.Data.DataRow {
            
            private PODScanTableDataTable tablePODScanTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PODScanTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePODScanTable = ((PODScanTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tablePODScanTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LabelSequenceNumber {
                get {
                    try {
                        return ((long)(this[this.tablePODScanTable.LabelSequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelSequenceNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.LabelSequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScanStatus {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.ScanStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanStatus\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.ScanStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CartonStatus {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.CartonStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonStatus\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.CartonStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Damage {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Damage\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePODScanTable.ScanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanDate\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.ScanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePODScanTable.ScanTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanTime\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.ScanTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.TrackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.TrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorNumber {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.VendorNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.VendorNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tablePODScanTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZoneCode {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.ZoneCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneCode\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.ZoneCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLNumber {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.TLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.TLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLNumber {
                get {
                    try {
                        return ((int)(this[this.tablePODScanTable.BLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.BLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePODScanTable.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PickupNumber {
                get {
                    try {
                        return ((int)(this[this.tablePODScanTable.PickupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.PickupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNumber {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.ItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNumber\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.VendorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.VendorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePODScanTable.SortDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortDate\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.SortDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePODScanTable.SortTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortTime\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.SortTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SortedLocation {
                get {
                    try {
                        return ((string)(this[this.tablePODScanTable.SortedLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortedLocation\' in table \'PODScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODScanTable.SortedLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablePODScanTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablePODScanTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelSequenceNumberNull() {
                return this.IsNull(this.tablePODScanTable.LabelSequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelSequenceNumberNull() {
                this[this.tablePODScanTable.LabelSequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanStatusNull() {
                return this.IsNull(this.tablePODScanTable.ScanStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanStatusNull() {
                this[this.tablePODScanTable.ScanStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonStatusNull() {
                return this.IsNull(this.tablePODScanTable.CartonStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonStatusNull() {
                this[this.tablePODScanTable.CartonStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDamageNull() {
                return this.IsNull(this.tablePODScanTable.DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDamageNull() {
                this[this.tablePODScanTable.DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanDateNull() {
                return this.IsNull(this.tablePODScanTable.ScanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanDateNull() {
                this[this.tablePODScanTable.ScanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanTimeNull() {
                return this.IsNull(this.tablePODScanTable.ScanTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanTimeNull() {
                this[this.tablePODScanTable.ScanTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrackingNumberNull() {
                return this.IsNull(this.tablePODScanTable.TrackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrackingNumberNull() {
                this[this.tablePODScanTable.TrackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNumberNull() {
                return this.IsNull(this.tablePODScanTable.VendorNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNumberNull() {
                this[this.tablePODScanTable.VendorNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tablePODScanTable.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tablePODScanTable.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tablePODScanTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tablePODScanTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneCodeNull() {
                return this.IsNull(this.tablePODScanTable.ZoneCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneCodeNull() {
                this[this.tablePODScanTable.ZoneCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLNumberNull() {
                return this.IsNull(this.tablePODScanTable.TLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLNumberNull() {
                this[this.tablePODScanTable.TLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLNumberNull() {
                return this.IsNull(this.tablePODScanTable.BLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLNumberNull() {
                this[this.tablePODScanTable.BLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tablePODScanTable.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tablePODScanTable.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tablePODScanTable.PickupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tablePODScanTable.PickupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNumberNull() {
                return this.IsNull(this.tablePODScanTable.ItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNumberNull() {
                this[this.tablePODScanTable.ItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tablePODScanTable.VendorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tablePODScanTable.VendorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDateNull() {
                return this.IsNull(this.tablePODScanTable.SortDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDateNull() {
                this[this.tablePODScanTable.SortDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTimeNull() {
                return this.IsNull(this.tablePODScanTable.SortTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTimeNull() {
                this[this.tablePODScanTable.SortTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortedLocationNull() {
                return this.IsNull(this.tablePODScanTable.SortedLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortedLocationNull() {
                this[this.tablePODScanTable.SortedLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RegionTableRow : global::System.Data.DataRow {
            
            private RegionTableDataTable tableRegionTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RegionTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRegionTable = ((RegionTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    return ((string)(this[this.tableRegionTable.RegionColumn]));
                }
                set {
                    this[this.tableRegionTable.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegionName {
                get {
                    return ((string)(this[this.tableRegionTable.RegionNameColumn]));
                }
                set {
                    this[this.tableRegionTable.RegionNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistrictTableRow : global::System.Data.DataRow {
            
            private DistrictTableDataTable tableDistrictTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistrictTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistrictTable = ((DistrictTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    return ((string)(this[this.tableDistrictTable.DistrictColumn]));
                }
                set {
                    this[this.tableDistrictTable.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictName {
                get {
                    return ((string)(this[this.tableDistrictTable.DistrictNameColumn]));
                }
                set {
                    this[this.tableDistrictTable.DistrictNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AgentTableRow : global::System.Data.DataRow {
            
            private AgentTableDataTable tableAgentTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgentTable = ((AgentTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNumber {
                get {
                    return ((string)(this[this.tableAgentTable.AgentNumberColumn]));
                }
                set {
                    this[this.tableAgentTable.AgentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentName {
                get {
                    return ((string)(this[this.tableAgentTable.AgentNameColumn]));
                }
                set {
                    this[this.tableAgentTable.AgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainZone {
                get {
                    try {
                        return ((string)(this[this.tableAgentTable.MainZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainZone\' in table \'AgentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTable.MainZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentParentNumber {
                get {
                    try {
                        return ((string)(this[this.tableAgentTable.AgentParentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentParentNumber\' in table \'AgentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTable.AgentParentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentSummary {
                get {
                    try {
                        return ((string)(this[this.tableAgentTable.AgentSummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentSummary\' in table \'AgentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTable.AgentSummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainZoneNull() {
                return this.IsNull(this.tableAgentTable.MainZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainZoneNull() {
                this[this.tableAgentTable.MainZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentParentNumberNull() {
                return this.IsNull(this.tableAgentTable.AgentParentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentParentNumberNull() {
                this[this.tableAgentTable.AgentParentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentSummaryNull() {
                return this.IsNull(this.tableAgentTable.AgentSummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentSummaryNull() {
                this[this.tableAgentTable.AgentSummaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyTableRowChangeEvent : global::System.EventArgs {
            
            private CompanyTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRowChangeEvent(CompanyTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StoreTableRowChangeEvent : global::System.EventArgs {
            
            private StoreTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRowChangeEvent(StoreTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeliveryTableRowChangeEvent : global::System.EventArgs {
            
            private DeliveryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRowChangeEvent(DeliveryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OSDScanTableRowChangeEvent : global::System.EventArgs {
            
            private OSDScanTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OSDScanTableRowChangeEvent(OSDScanTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OSDScanTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PODScanTableRowChangeEvent : global::System.EventArgs {
            
            private PODScanTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PODScanTableRowChangeEvent(PODScanTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PODScanTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RegionTableRowChangeEvent : global::System.EventArgs {
            
            private RegionTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegionTableRowChangeEvent(RegionTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegionTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistrictTableRowChangeEvent : global::System.EventArgs {
            
            private DistrictTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictTableRowChangeEvent(DistrictTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistrictTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AgentTableRowChangeEvent : global::System.EventArgs {
            
            private AgentTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRowChangeEvent(AgentTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591