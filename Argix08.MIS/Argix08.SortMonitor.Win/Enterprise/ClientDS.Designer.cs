//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Tsort.Enterprise {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ClientDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClientDS : System.Data.DataSet {
        
        private ClientDetailTableDataTable tableClientDetailTable;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ClientDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ClientDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ClientDetailTable"] != null)) {
                    base.Tables.Add(new ClientDetailTableDataTable(ds.Tables["ClientDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientDetailTableDataTable ClientDetailTable {
            get {
                return this.tableClientDetailTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ClientDS cln = ((ClientDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ClientDetailTable"] != null)) {
                    base.Tables.Add(new ClientDetailTableDataTable(ds.Tables["ClientDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableClientDetailTable = ((ClientDetailTableDataTable)(base.Tables["ClientDetailTable"]));
            if ((initTable == true)) {
                if ((this.tableClientDetailTable != null)) {
                    this.tableClientDetailTable.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ClientDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/ClientDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableClientDetailTable = new ClientDetailTableDataTable();
            base.Tables.Add(this.tableClientDetailTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClientDetailTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ClientDS ds = new ClientDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ClientDetailTableRowChangeEventHandler(object sender, ClientDetailTableRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientDetailTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnClientID;
            
            private System.Data.DataColumn columnClientNumber;
            
            private System.Data.DataColumn columnNUMBER;
            
            private System.Data.DataColumn columnDIVISION;
            
            private System.Data.DataColumn columnNAME;
            
            private System.Data.DataColumn columnSTATUS;
            
            private System.Data.DataColumn columnUPS_SHIPPER_NBR;
            
            private System.Data.DataColumn columnABBREVIATION;
            
            private System.Data.DataColumn columnADDRESS_LINE1;
            
            private System.Data.DataColumn columnADDRESS_LINE2;
            
            private System.Data.DataColumn columnCITY;
            
            private System.Data.DataColumn columnSTATE;
            
            private System.Data.DataColumn columnZIP;
            
            private System.Data.DataColumn columnZIP4;
            
            private System.Data.DataColumn columnDELIVERY_BILL_TYPE;
            
            private System.Data.DataColumn columnCARTON_COMMODITY;
            
            private System.Data.DataColumn columnDELIVERY_BILL;
            
            private System.Data.DataColumn columnDBILL_COPIES;
            
            private System.Data.DataColumn columnIsSan;
            
            private System.Data.DataColumn columnInvoiceProgram;
            
            private System.Data.DataColumn columnContactName;
            
            private System.Data.DataColumn columnPhone;
            
            private System.Data.DataColumn columnFax;
            
            private System.Data.DataColumn columnMnemonic;
            
            private System.Data.DataColumn columnBLNumberOnInvoice;
            
            private System.Data.DataColumn columnARNumber;
            
            private System.Data.DataColumn columnPickupZip;
            
            private System.Data.DataColumn columnManifestPerTrailer;
            
            private System.Data.DataColumn columnLastUpdated;
            
            private System.Data.DataColumn columnUserID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableDataTable() {
                this.TableName = "ClientDetailTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientDetailTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClientDetailTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NUMBERColumn {
                get {
                    return this.columnNUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIVISIONColumn {
                get {
                    return this.columnDIVISION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UPS_SHIPPER_NBRColumn {
                get {
                    return this.columnUPS_SHIPPER_NBR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ABBREVIATIONColumn {
                get {
                    return this.columnABBREVIATION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADDRESS_LINE1Column {
                get {
                    return this.columnADDRESS_LINE1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADDRESS_LINE2Column {
                get {
                    return this.columnADDRESS_LINE2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZIP4Column {
                get {
                    return this.columnZIP4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DELIVERY_BILL_TYPEColumn {
                get {
                    return this.columnDELIVERY_BILL_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CARTON_COMMODITYColumn {
                get {
                    return this.columnCARTON_COMMODITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DELIVERY_BILLColumn {
                get {
                    return this.columnDELIVERY_BILL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DBILL_COPIESColumn {
                get {
                    return this.columnDBILL_COPIES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsSanColumn {
                get {
                    return this.columnIsSan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvoiceProgramColumn {
                get {
                    return this.columnInvoiceProgram;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MnemonicColumn {
                get {
                    return this.columnMnemonic;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BLNumberOnInvoiceColumn {
                get {
                    return this.columnBLNumberOnInvoice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ARNumberColumn {
                get {
                    return this.columnARNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PickupZipColumn {
                get {
                    return this.columnPickupZip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManifestPerTrailerColumn {
                get {
                    return this.columnManifestPerTrailer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableRow this[int index] {
                get {
                    return ((ClientDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event ClientDetailTableRowChangeEventHandler ClientDetailTableRowChanging;
            
            public event ClientDetailTableRowChangeEventHandler ClientDetailTableRowChanged;
            
            public event ClientDetailTableRowChangeEventHandler ClientDetailTableRowDeleting;
            
            public event ClientDetailTableRowChangeEventHandler ClientDetailTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClientDetailTableRow(ClientDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableRow AddClientDetailTableRow(
                        int ClientID, 
                        string ClientNumber, 
                        string NUMBER, 
                        string DIVISION, 
                        string NAME, 
                        string STATUS, 
                        string UPS_SHIPPER_NBR, 
                        string ABBREVIATION, 
                        string ADDRESS_LINE1, 
                        string ADDRESS_LINE2, 
                        string CITY, 
                        string STATE, 
                        string ZIP, 
                        string ZIP4, 
                        string DELIVERY_BILL_TYPE, 
                        string CARTON_COMMODITY, 
                        string DELIVERY_BILL, 
                        short DBILL_COPIES, 
                        string IsSan, 
                        string InvoiceProgram, 
                        string ContactName, 
                        string Phone, 
                        string Fax, 
                        string Mnemonic, 
                        string BLNumberOnInvoice, 
                        string ARNumber, 
                        string PickupZip, 
                        string ManifestPerTrailer, 
                        System.DateTime LastUpdated, 
                        string UserID) {
                ClientDetailTableRow rowClientDetailTableRow = ((ClientDetailTableRow)(this.NewRow()));
                rowClientDetailTableRow.ItemArray = new object[] {
                        ClientID,
                        ClientNumber,
                        NUMBER,
                        DIVISION,
                        NAME,
                        STATUS,
                        UPS_SHIPPER_NBR,
                        ABBREVIATION,
                        ADDRESS_LINE1,
                        ADDRESS_LINE2,
                        CITY,
                        STATE,
                        ZIP,
                        ZIP4,
                        DELIVERY_BILL_TYPE,
                        CARTON_COMMODITY,
                        DELIVERY_BILL,
                        DBILL_COPIES,
                        IsSan,
                        InvoiceProgram,
                        ContactName,
                        Phone,
                        Fax,
                        Mnemonic,
                        BLNumberOnInvoice,
                        ARNumber,
                        PickupZip,
                        ManifestPerTrailer,
                        LastUpdated,
                        UserID};
                this.Rows.Add(rowClientDetailTableRow);
                return rowClientDetailTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableRow FindByNUMBERDIVISION(string NUMBER, string DIVISION) {
                return ((ClientDetailTableRow)(this.Rows.Find(new object[] {
                            NUMBER,
                            DIVISION})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ClientDetailTableDataTable cln = ((ClientDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ClientDetailTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClientID = base.Columns["ClientID"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnNUMBER = base.Columns["NUMBER"];
                this.columnDIVISION = base.Columns["DIVISION"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnUPS_SHIPPER_NBR = base.Columns["UPS_SHIPPER_NBR"];
                this.columnABBREVIATION = base.Columns["ABBREVIATION"];
                this.columnADDRESS_LINE1 = base.Columns["ADDRESS_LINE1"];
                this.columnADDRESS_LINE2 = base.Columns["ADDRESS_LINE2"];
                this.columnCITY = base.Columns["CITY"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnZIP = base.Columns["ZIP"];
                this.columnZIP4 = base.Columns["ZIP4"];
                this.columnDELIVERY_BILL_TYPE = base.Columns["DELIVERY_BILL_TYPE"];
                this.columnCARTON_COMMODITY = base.Columns["CARTON_COMMODITY"];
                this.columnDELIVERY_BILL = base.Columns["DELIVERY_BILL"];
                this.columnDBILL_COPIES = base.Columns["DBILL_COPIES"];
                this.columnIsSan = base.Columns["IsSan"];
                this.columnInvoiceProgram = base.Columns["InvoiceProgram"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnPhone = base.Columns["Phone"];
                this.columnFax = base.Columns["Fax"];
                this.columnMnemonic = base.Columns["Mnemonic"];
                this.columnBLNumberOnInvoice = base.Columns["BLNumberOnInvoice"];
                this.columnARNumber = base.Columns["ARNumber"];
                this.columnPickupZip = base.Columns["PickupZip"];
                this.columnManifestPerTrailer = base.Columns["ManifestPerTrailer"];
                this.columnLastUpdated = base.Columns["LastUpdated"];
                this.columnUserID = base.Columns["UserID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClientID = new System.Data.DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnClientNumber = new System.Data.DataColumn("ClientNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnNUMBER = new System.Data.DataColumn("NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMBER);
                this.columnDIVISION = new System.Data.DataColumn("DIVISION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVISION);
                this.columnNAME = new System.Data.DataColumn("NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSTATUS = new System.Data.DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnUPS_SHIPPER_NBR = new System.Data.DataColumn("UPS_SHIPPER_NBR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPS_SHIPPER_NBR);
                this.columnABBREVIATION = new System.Data.DataColumn("ABBREVIATION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnABBREVIATION);
                this.columnADDRESS_LINE1 = new System.Data.DataColumn("ADDRESS_LINE1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS_LINE1);
                this.columnADDRESS_LINE2 = new System.Data.DataColumn("ADDRESS_LINE2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS_LINE2);
                this.columnCITY = new System.Data.DataColumn("CITY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnSTATE = new System.Data.DataColumn("STATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnZIP = new System.Data.DataColumn("ZIP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP);
                this.columnZIP4 = new System.Data.DataColumn("ZIP4", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP4);
                this.columnDELIVERY_BILL_TYPE = new System.Data.DataColumn("DELIVERY_BILL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVERY_BILL_TYPE);
                this.columnCARTON_COMMODITY = new System.Data.DataColumn("CARTON_COMMODITY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARTON_COMMODITY);
                this.columnDELIVERY_BILL = new System.Data.DataColumn("DELIVERY_BILL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVERY_BILL);
                this.columnDBILL_COPIES = new System.Data.DataColumn("DBILL_COPIES", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBILL_COPIES);
                this.columnIsSan = new System.Data.DataColumn("IsSan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSan);
                this.columnInvoiceProgram = new System.Data.DataColumn("InvoiceProgram", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceProgram);
                this.columnContactName = new System.Data.DataColumn("ContactName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnPhone = new System.Data.DataColumn("Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnFax = new System.Data.DataColumn("Fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnMnemonic = new System.Data.DataColumn("Mnemonic", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMnemonic);
                this.columnBLNumberOnInvoice = new System.Data.DataColumn("BLNumberOnInvoice", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLNumberOnInvoice);
                this.columnARNumber = new System.Data.DataColumn("ARNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnARNumber);
                this.columnPickupZip = new System.Data.DataColumn("PickupZip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupZip);
                this.columnManifestPerTrailer = new System.Data.DataColumn("ManifestPerTrailer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManifestPerTrailer);
                this.columnLastUpdated = new System.Data.DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.Constraints.Add(new System.Data.UniqueConstraint("ClientDSKey1", new System.Data.DataColumn[] {
                                this.columnNUMBER,
                                this.columnDIVISION}, true));
                this.columnNUMBER.AllowDBNull = false;
                this.columnDIVISION.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableRow NewClientDetailTableRow() {
                return ((ClientDetailTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ClientDetailTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ClientDetailTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientDetailTableRowChanged != null)) {
                    this.ClientDetailTableRowChanged(this, new ClientDetailTableRowChangeEvent(((ClientDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientDetailTableRowChanging != null)) {
                    this.ClientDetailTableRowChanging(this, new ClientDetailTableRowChangeEvent(((ClientDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientDetailTableRowDeleted != null)) {
                    this.ClientDetailTableRowDeleted(this, new ClientDetailTableRowChangeEvent(((ClientDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientDetailTableRowDeleting != null)) {
                    this.ClientDetailTableRowDeleting(this, new ClientDetailTableRowChangeEvent(((ClientDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClientDetailTableRow(ClientDetailTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ClientDS ds = new ClientDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientDetailTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClientDetailTableRow : System.Data.DataRow {
            
            private ClientDetailTableDataTable tableClientDetailTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientDetailTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientDetailTable = ((ClientDetailTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableClientDetailTable.ClientIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientID\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ClientIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ClientNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ClientNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NUMBER {
                get {
                    return ((string)(this[this.tableClientDetailTable.NUMBERColumn]));
                }
                set {
                    this[this.tableClientDetailTable.NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIVISION {
                get {
                    return ((string)(this[this.tableClientDetailTable.DIVISIONColumn]));
                }
                set {
                    this[this.tableClientDetailTable.DIVISIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NAME\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STATUS\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPS_SHIPPER_NBR {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.UPS_SHIPPER_NBRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UPS_SHIPPER_NBR\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.UPS_SHIPPER_NBRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ABBREVIATION {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ABBREVIATIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ABBREVIATION\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ABBREVIATIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS_LINE1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ADDRESS_LINE1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDRESS_LINE1\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ADDRESS_LINE1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS_LINE2 {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ADDRESS_LINE2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDRESS_LINE2\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ADDRESS_LINE2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CITY {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.CITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CITY\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.CITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATE {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.STATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STATE\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.STATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIP {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ZIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ZIP\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ZIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIP4 {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ZIP4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ZIP4\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ZIP4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_BILL_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.DELIVERY_BILL_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DELIVERY_BILL_TYPE\' in table \'ClientDetailTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.DELIVERY_BILL_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CARTON_COMMODITY {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.CARTON_COMMODITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CARTON_COMMODITY\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.CARTON_COMMODITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_BILL {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.DELIVERY_BILLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DELIVERY_BILL\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.DELIVERY_BILLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DBILL_COPIES {
                get {
                    try {
                        return ((short)(this[this.tableClientDetailTable.DBILL_COPIESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DBILL_COPIES\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.DBILL_COPIESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsSan {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.IsSanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsSan\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.IsSanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceProgram {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.InvoiceProgramColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InvoiceProgram\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.InvoiceProgramColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ContactNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ContactName\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ContactNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.PhoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.PhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.FaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.FaxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mnemonic {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.MnemonicColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Mnemonic\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.MnemonicColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLNumberOnInvoice {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.BLNumberOnInvoiceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BLNumberOnInvoice\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.BLNumberOnInvoiceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ARNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ARNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ARNumber\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ARNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupZip {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.PickupZipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PickupZip\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.PickupZipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManifestPerTrailer {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.ManifestPerTrailerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManifestPerTrailer\' in table \'ClientDetailTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.ManifestPerTrailerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientDetailTable.LastUpdatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LastUpdated\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableClientDetailTable.UserIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserID\' in table \'ClientDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDetailTable.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableClientDetailTable.ClientIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tableClientDetailTable.ClientIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableClientDetailTable.ClientNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableClientDetailTable.ClientNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableClientDetailTable.NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableClientDetailTable.NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableClientDetailTable.STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableClientDetailTable.STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPS_SHIPPER_NBRNull() {
                return this.IsNull(this.tableClientDetailTable.UPS_SHIPPER_NBRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPS_SHIPPER_NBRNull() {
                this[this.tableClientDetailTable.UPS_SHIPPER_NBRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABBREVIATIONNull() {
                return this.IsNull(this.tableClientDetailTable.ABBREVIATIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABBREVIATIONNull() {
                this[this.tableClientDetailTable.ABBREVIATIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS_LINE1Null() {
                return this.IsNull(this.tableClientDetailTable.ADDRESS_LINE1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS_LINE1Null() {
                this[this.tableClientDetailTable.ADDRESS_LINE1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS_LINE2Null() {
                return this.IsNull(this.tableClientDetailTable.ADDRESS_LINE2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS_LINE2Null() {
                this[this.tableClientDetailTable.ADDRESS_LINE2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCITYNull() {
                return this.IsNull(this.tableClientDetailTable.CITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCITYNull() {
                this[this.tableClientDetailTable.CITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATENull() {
                return this.IsNull(this.tableClientDetailTable.STATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATENull() {
                this[this.tableClientDetailTable.STATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZIPNull() {
                return this.IsNull(this.tableClientDetailTable.ZIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZIPNull() {
                this[this.tableClientDetailTable.ZIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZIP4Null() {
                return this.IsNull(this.tableClientDetailTable.ZIP4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZIP4Null() {
                this[this.tableClientDetailTable.ZIP4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_BILL_TYPENull() {
                return this.IsNull(this.tableClientDetailTable.DELIVERY_BILL_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_BILL_TYPENull() {
                this[this.tableClientDetailTable.DELIVERY_BILL_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCARTON_COMMODITYNull() {
                return this.IsNull(this.tableClientDetailTable.CARTON_COMMODITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCARTON_COMMODITYNull() {
                this[this.tableClientDetailTable.CARTON_COMMODITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_BILLNull() {
                return this.IsNull(this.tableClientDetailTable.DELIVERY_BILLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_BILLNull() {
                this[this.tableClientDetailTable.DELIVERY_BILLColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBILL_COPIESNull() {
                return this.IsNull(this.tableClientDetailTable.DBILL_COPIESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBILL_COPIESNull() {
                this[this.tableClientDetailTable.DBILL_COPIESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSanNull() {
                return this.IsNull(this.tableClientDetailTable.IsSanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSanNull() {
                this[this.tableClientDetailTable.IsSanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceProgramNull() {
                return this.IsNull(this.tableClientDetailTable.InvoiceProgramColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceProgramNull() {
                this[this.tableClientDetailTable.InvoiceProgramColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableClientDetailTable.ContactNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableClientDetailTable.ContactNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableClientDetailTable.PhoneColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableClientDetailTable.PhoneColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableClientDetailTable.FaxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableClientDetailTable.FaxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMnemonicNull() {
                return this.IsNull(this.tableClientDetailTable.MnemonicColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMnemonicNull() {
                this[this.tableClientDetailTable.MnemonicColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLNumberOnInvoiceNull() {
                return this.IsNull(this.tableClientDetailTable.BLNumberOnInvoiceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLNumberOnInvoiceNull() {
                this[this.tableClientDetailTable.BLNumberOnInvoiceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsARNumberNull() {
                return this.IsNull(this.tableClientDetailTable.ARNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetARNumberNull() {
                this[this.tableClientDetailTable.ARNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupZipNull() {
                return this.IsNull(this.tableClientDetailTable.PickupZipColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupZipNull() {
                this[this.tableClientDetailTable.PickupZipColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManifestPerTrailerNull() {
                return this.IsNull(this.tableClientDetailTable.ManifestPerTrailerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManifestPerTrailerNull() {
                this[this.tableClientDetailTable.ManifestPerTrailerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableClientDetailTable.LastUpdatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedNull() {
                this[this.tableClientDetailTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableClientDetailTable.UserIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableClientDetailTable.UserIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClientDetailTableRowChangeEvent : System.EventArgs {
            
            private ClientDetailTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableRowChangeEvent(ClientDetailTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591