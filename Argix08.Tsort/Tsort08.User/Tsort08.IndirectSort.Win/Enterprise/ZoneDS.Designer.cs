//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Argix.Enterprise {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ZoneDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ZoneDS : global::System.Data.DataSet {
        
        private ZoneDetailTableDataTable tableZoneDetailTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ZoneDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ZoneDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ZoneDetailTable"] != null)) {
                    base.Tables.Add(new ZoneDetailTableDataTable(ds.Tables["ZoneDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZoneDetailTableDataTable ZoneDetailTable {
            get {
                return this.tableZoneDetailTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ZoneDS cln = ((ZoneDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ZoneDetailTable"] != null)) {
                    base.Tables.Add(new ZoneDetailTableDataTable(ds.Tables["ZoneDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableZoneDetailTable = ((ZoneDetailTableDataTable)(base.Tables["ZoneDetailTable"]));
            if ((initTable == true)) {
                if ((this.tableZoneDetailTable != null)) {
                    this.tableZoneDetailTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ZoneDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ZoneDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableZoneDetailTable = new ZoneDetailTableDataTable();
            base.Tables.Add(this.tableZoneDetailTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeZoneDetailTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ZoneDS ds = new ZoneDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ZoneDetailTableRowChangeEventHandler(object sender, ZoneDetailTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZoneDetailTableDataTable : global::System.Data.TypedTableBase<ZoneDetailTableRow> {
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnTRAILER_LOAD_NUM;
            
            private global::System.Data.DataColumn columnLABEL_TYPE;
            
            private global::System.Data.DataColumn columnLANE;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnRB_TL_NUMBER;
            
            private global::System.Data.DataColumn columnAgentID;
            
            private global::System.Data.DataColumn columnAGENT_NUMBER;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnSortCenterID;
            
            private global::System.Data.DataColumn columnSHIP_DATE;
            
            private global::System.Data.DataColumn columnCAN_BE_CLOSED;
            
            private global::System.Data.DataColumn columnOSDStatus;
            
            private global::System.Data.DataColumn columnLABELTYPE;
            
            private global::System.Data.DataColumn columnLANE_SMALL_SORT;
            
            private global::System.Data.DataColumn columnIsMain;
            
            private global::System.Data.DataColumn columnShipScdeToClose;
            
            private global::System.Data.DataColumn columnLastUpdated;
            
            private global::System.Data.DataColumn columnUserID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneDetailTableDataTable() {
                this.TableName = "ZoneDetailTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZoneDetailTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ZoneDetailTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRAILER_LOAD_NUMColumn {
                get {
                    return this.columnTRAILER_LOAD_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LABEL_TYPEColumn {
                get {
                    return this.columnLABEL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LANEColumn {
                get {
                    return this.columnLANE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RB_TL_NUMBERColumn {
                get {
                    return this.columnRB_TL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentIDColumn {
                get {
                    return this.columnAgentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGENT_NUMBERColumn {
                get {
                    return this.columnAGENT_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortCenterIDColumn {
                get {
                    return this.columnSortCenterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_DATEColumn {
                get {
                    return this.columnSHIP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAN_BE_CLOSEDColumn {
                get {
                    return this.columnCAN_BE_CLOSED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDStatusColumn {
                get {
                    return this.columnOSDStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LABELTYPEColumn {
                get {
                    return this.columnLABELTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LANE_SMALL_SORTColumn {
                get {
                    return this.columnLANE_SMALL_SORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsMainColumn {
                get {
                    return this.columnIsMain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipScdeToCloseColumn {
                get {
                    return this.columnShipScdeToClose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneDetailTableRow this[int index] {
                get {
                    return ((ZoneDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event ZoneDetailTableRowChangeEventHandler ZoneDetailTableRowChanging;
            
            public event ZoneDetailTableRowChangeEventHandler ZoneDetailTableRowChanged;
            
            public event ZoneDetailTableRowChangeEventHandler ZoneDetailTableRowDeleting;
            
            public event ZoneDetailTableRowChangeEventHandler ZoneDetailTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddZoneDetailTableRow(ZoneDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneDetailTableRow AddZoneDetailTableRow(
                        string CODE, 
                        string TYPE, 
                        string TRAILER_LOAD_NUM, 
                        string LABEL_TYPE, 
                        string LANE, 
                        string STATUS, 
                        string RB_TL_NUMBER, 
                        int AgentID, 
                        string AGENT_NUMBER, 
                        string DESCRIPTION, 
                        string LOCATION, 
                        int SortCenterID, 
                        System.DateTime SHIP_DATE, 
                        string CAN_BE_CLOSED, 
                        string OSDStatus, 
                        string LABELTYPE, 
                        string LANE_SMALL_SORT, 
                        short IsMain, 
                        short ShipScdeToClose, 
                        System.DateTime LastUpdated, 
                        string UserID) {
                ZoneDetailTableRow rowZoneDetailTableRow = ((ZoneDetailTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODE,
                        TYPE,
                        TRAILER_LOAD_NUM,
                        LABEL_TYPE,
                        LANE,
                        STATUS,
                        RB_TL_NUMBER,
                        AgentID,
                        AGENT_NUMBER,
                        DESCRIPTION,
                        LOCATION,
                        SortCenterID,
                        SHIP_DATE,
                        CAN_BE_CLOSED,
                        OSDStatus,
                        LABELTYPE,
                        LANE_SMALL_SORT,
                        IsMain,
                        ShipScdeToClose,
                        LastUpdated,
                        UserID};
                rowZoneDetailTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZoneDetailTableRow);
                return rowZoneDetailTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ZoneDetailTableDataTable cln = ((ZoneDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZoneDetailTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODE = base.Columns["CODE"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnTRAILER_LOAD_NUM = base.Columns["TRAILER_LOAD_NUM"];
                this.columnLABEL_TYPE = base.Columns["LABEL_TYPE"];
                this.columnLANE = base.Columns["LANE"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnRB_TL_NUMBER = base.Columns["RB_TL_NUMBER"];
                this.columnAgentID = base.Columns["AgentID"];
                this.columnAGENT_NUMBER = base.Columns["AGENT_NUMBER"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnSortCenterID = base.Columns["SortCenterID"];
                this.columnSHIP_DATE = base.Columns["SHIP_DATE"];
                this.columnCAN_BE_CLOSED = base.Columns["CAN_BE_CLOSED"];
                this.columnOSDStatus = base.Columns["OSDStatus"];
                this.columnLABELTYPE = base.Columns["LABELTYPE"];
                this.columnLANE_SMALL_SORT = base.Columns["LANE_SMALL_SORT"];
                this.columnIsMain = base.Columns["IsMain"];
                this.columnShipScdeToClose = base.Columns["ShipScdeToClose"];
                this.columnLastUpdated = base.Columns["LastUpdated"];
                this.columnUserID = base.Columns["UserID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnTRAILER_LOAD_NUM = new global::System.Data.DataColumn("TRAILER_LOAD_NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAILER_LOAD_NUM);
                this.columnLABEL_TYPE = new global::System.Data.DataColumn("LABEL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLABEL_TYPE);
                this.columnLANE = new global::System.Data.DataColumn("LANE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLANE);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnRB_TL_NUMBER = new global::System.Data.DataColumn("RB_TL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRB_TL_NUMBER);
                this.columnAgentID = new global::System.Data.DataColumn("AgentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentID);
                this.columnAGENT_NUMBER = new global::System.Data.DataColumn("AGENT_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGENT_NUMBER);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnSortCenterID = new global::System.Data.DataColumn("SortCenterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortCenterID);
                this.columnSHIP_DATE = new global::System.Data.DataColumn("SHIP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_DATE);
                this.columnCAN_BE_CLOSED = new global::System.Data.DataColumn("CAN_BE_CLOSED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAN_BE_CLOSED);
                this.columnOSDStatus = new global::System.Data.DataColumn("OSDStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDStatus);
                this.columnLABELTYPE = new global::System.Data.DataColumn("LABELTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLABELTYPE);
                this.columnLANE_SMALL_SORT = new global::System.Data.DataColumn("LANE_SMALL_SORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLANE_SMALL_SORT);
                this.columnIsMain = new global::System.Data.DataColumn("IsMain", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMain);
                this.columnShipScdeToClose = new global::System.Data.DataColumn("ShipScdeToClose", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipScdeToClose);
                this.columnLastUpdated = new global::System.Data.DataColumn("LastUpdated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnCODE.AllowDBNull = false;
                this.columnTYPE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneDetailTableRow NewZoneDetailTableRow() {
                return ((ZoneDetailTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZoneDetailTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ZoneDetailTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZoneDetailTableRowChanged != null)) {
                    this.ZoneDetailTableRowChanged(this, new ZoneDetailTableRowChangeEvent(((ZoneDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZoneDetailTableRowChanging != null)) {
                    this.ZoneDetailTableRowChanging(this, new ZoneDetailTableRowChangeEvent(((ZoneDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZoneDetailTableRowDeleted != null)) {
                    this.ZoneDetailTableRowDeleted(this, new ZoneDetailTableRowChangeEvent(((ZoneDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZoneDetailTableRowDeleting != null)) {
                    this.ZoneDetailTableRowDeleting(this, new ZoneDetailTableRowChangeEvent(((ZoneDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveZoneDetailTableRow(ZoneDetailTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ZoneDS ds = new ZoneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZoneDetailTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ZoneDetailTableRow : global::System.Data.DataRow {
            
            private ZoneDetailTableDataTable tableZoneDetailTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZoneDetailTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZoneDetailTable = ((ZoneDetailTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE {
                get {
                    return ((string)(this[this.tableZoneDetailTable.CODEColumn]));
                }
                set {
                    this[this.tableZoneDetailTable.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    return ((string)(this[this.tableZoneDetailTable.TYPEColumn]));
                }
                set {
                    this[this.tableZoneDetailTable.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAILER_LOAD_NUM {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.TRAILER_LOAD_NUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAILER_LOAD_NUM\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.TRAILER_LOAD_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LABEL_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.LABEL_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LABEL_TYPE\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.LABEL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LANE {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.LANEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LANE\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.LANEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RB_TL_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.RB_TL_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RB_TL_NUMBER\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.RB_TL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AgentID {
                get {
                    try {
                        return ((int)(this[this.tableZoneDetailTable.AgentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentID\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.AgentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGENT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.AGENT_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGENT_NUMBER\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.AGENT_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortCenterID {
                get {
                    try {
                        return ((int)(this[this.tableZoneDetailTable.SortCenterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortCenterID\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.SortCenterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SHIP_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZoneDetailTable.SHIP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHIP_DATE\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.SHIP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CAN_BE_CLOSED {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.CAN_BE_CLOSEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAN_BE_CLOSED\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.CAN_BE_CLOSEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OSDStatus {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.OSDStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDStatus\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.OSDStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LABELTYPE {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.LABELTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LABELTYPE\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.LABELTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LANE_SMALL_SORT {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.LANE_SMALL_SORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LANE_SMALL_SORT\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.LANE_SMALL_SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short IsMain {
                get {
                    try {
                        return ((short)(this[this.tableZoneDetailTable.IsMainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsMain\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.IsMainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ShipScdeToClose {
                get {
                    try {
                        return ((short)(this[this.tableZoneDetailTable.ShipScdeToCloseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipScdeToClose\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.ShipScdeToCloseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZoneDetailTable.LastUpdatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdated\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableZoneDetailTable.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'ZoneDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneDetailTable.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRAILER_LOAD_NUMNull() {
                return this.IsNull(this.tableZoneDetailTable.TRAILER_LOAD_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRAILER_LOAD_NUMNull() {
                this[this.tableZoneDetailTable.TRAILER_LOAD_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLABEL_TYPENull() {
                return this.IsNull(this.tableZoneDetailTable.LABEL_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLABEL_TYPENull() {
                this[this.tableZoneDetailTable.LABEL_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLANENull() {
                return this.IsNull(this.tableZoneDetailTable.LANEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLANENull() {
                this[this.tableZoneDetailTable.LANEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableZoneDetailTable.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableZoneDetailTable.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRB_TL_NUMBERNull() {
                return this.IsNull(this.tableZoneDetailTable.RB_TL_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRB_TL_NUMBERNull() {
                this[this.tableZoneDetailTable.RB_TL_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentIDNull() {
                return this.IsNull(this.tableZoneDetailTable.AgentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentIDNull() {
                this[this.tableZoneDetailTable.AgentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGENT_NUMBERNull() {
                return this.IsNull(this.tableZoneDetailTable.AGENT_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGENT_NUMBERNull() {
                this[this.tableZoneDetailTable.AGENT_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableZoneDetailTable.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableZoneDetailTable.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableZoneDetailTable.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATIONNull() {
                this[this.tableZoneDetailTable.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortCenterIDNull() {
                return this.IsNull(this.tableZoneDetailTable.SortCenterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortCenterIDNull() {
                this[this.tableZoneDetailTable.SortCenterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIP_DATENull() {
                return this.IsNull(this.tableZoneDetailTable.SHIP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIP_DATENull() {
                this[this.tableZoneDetailTable.SHIP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAN_BE_CLOSEDNull() {
                return this.IsNull(this.tableZoneDetailTable.CAN_BE_CLOSEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAN_BE_CLOSEDNull() {
                this[this.tableZoneDetailTable.CAN_BE_CLOSEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDStatusNull() {
                return this.IsNull(this.tableZoneDetailTable.OSDStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDStatusNull() {
                this[this.tableZoneDetailTable.OSDStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLABELTYPENull() {
                return this.IsNull(this.tableZoneDetailTable.LABELTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLABELTYPENull() {
                this[this.tableZoneDetailTable.LABELTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLANE_SMALL_SORTNull() {
                return this.IsNull(this.tableZoneDetailTable.LANE_SMALL_SORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLANE_SMALL_SORTNull() {
                this[this.tableZoneDetailTable.LANE_SMALL_SORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsMainNull() {
                return this.IsNull(this.tableZoneDetailTable.IsMainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsMainNull() {
                this[this.tableZoneDetailTable.IsMainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipScdeToCloseNull() {
                return this.IsNull(this.tableZoneDetailTable.ShipScdeToCloseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipScdeToCloseNull() {
                this[this.tableZoneDetailTable.ShipScdeToCloseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableZoneDetailTable.LastUpdatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedNull() {
                this[this.tableZoneDetailTable.LastUpdatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableZoneDetailTable.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableZoneDetailTable.UserIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ZoneDetailTableRowChangeEvent : global::System.EventArgs {
            
            private ZoneDetailTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneDetailTableRowChangeEvent(ZoneDetailTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591