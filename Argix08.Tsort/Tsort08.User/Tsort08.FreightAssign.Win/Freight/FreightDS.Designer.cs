//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Tsort05.Enterprise {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("FreightDS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FreightDS : System.Data.DataSet {
        
        private FreightTableDataTable tableFreightTable;
        
        private SortedFreightTableDataTable tableSortedFreightTable;
        
        private StationFreightAssignmentTableDataTable tableStationFreightAssignmentTable;
        
        private InboundFreightTypeTableDataTable tableInboundFreightTypeTable;
        
        private InboundFreightSortTypeTableDataTable tableInboundFreightSortTypeTable;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FreightDS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FreightDS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["FreightTable"] != null)) {
                    base.Tables.Add(new FreightTableDataTable(ds.Tables["FreightTable"]));
                }
                if ((ds.Tables["SortedFreightTable"] != null)) {
                    base.Tables.Add(new SortedFreightTableDataTable(ds.Tables["SortedFreightTable"]));
                }
                if ((ds.Tables["StationFreightAssignmentTable"] != null)) {
                    base.Tables.Add(new StationFreightAssignmentTableDataTable(ds.Tables["StationFreightAssignmentTable"]));
                }
                if ((ds.Tables["InboundFreightTypeTable"] != null)) {
                    base.Tables.Add(new InboundFreightTypeTableDataTable(ds.Tables["InboundFreightTypeTable"]));
                }
                if ((ds.Tables["InboundFreightSortTypeTable"] != null)) {
                    base.Tables.Add(new InboundFreightSortTypeTableDataTable(ds.Tables["InboundFreightSortTypeTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FreightTableDataTable FreightTable {
            get {
                return this.tableFreightTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SortedFreightTableDataTable SortedFreightTable {
            get {
                return this.tableSortedFreightTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StationFreightAssignmentTableDataTable StationFreightAssignmentTable {
            get {
                return this.tableStationFreightAssignmentTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InboundFreightTypeTableDataTable InboundFreightTypeTable {
            get {
                return this.tableInboundFreightTypeTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InboundFreightSortTypeTableDataTable InboundFreightSortTypeTable {
            get {
                return this.tableInboundFreightSortTypeTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            FreightDS cln = ((FreightDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FreightTable"] != null)) {
                    base.Tables.Add(new FreightTableDataTable(ds.Tables["FreightTable"]));
                }
                if ((ds.Tables["SortedFreightTable"] != null)) {
                    base.Tables.Add(new SortedFreightTableDataTable(ds.Tables["SortedFreightTable"]));
                }
                if ((ds.Tables["StationFreightAssignmentTable"] != null)) {
                    base.Tables.Add(new StationFreightAssignmentTableDataTable(ds.Tables["StationFreightAssignmentTable"]));
                }
                if ((ds.Tables["InboundFreightTypeTable"] != null)) {
                    base.Tables.Add(new InboundFreightTypeTableDataTable(ds.Tables["InboundFreightTypeTable"]));
                }
                if ((ds.Tables["InboundFreightSortTypeTable"] != null)) {
                    base.Tables.Add(new InboundFreightSortTypeTableDataTable(ds.Tables["InboundFreightSortTypeTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFreightTable = ((FreightTableDataTable)(base.Tables["FreightTable"]));
            if ((initTable == true)) {
                if ((this.tableFreightTable != null)) {
                    this.tableFreightTable.InitVars();
                }
            }
            this.tableSortedFreightTable = ((SortedFreightTableDataTable)(base.Tables["SortedFreightTable"]));
            if ((initTable == true)) {
                if ((this.tableSortedFreightTable != null)) {
                    this.tableSortedFreightTable.InitVars();
                }
            }
            this.tableStationFreightAssignmentTable = ((StationFreightAssignmentTableDataTable)(base.Tables["StationFreightAssignmentTable"]));
            if ((initTable == true)) {
                if ((this.tableStationFreightAssignmentTable != null)) {
                    this.tableStationFreightAssignmentTable.InitVars();
                }
            }
            this.tableInboundFreightTypeTable = ((InboundFreightTypeTableDataTable)(base.Tables["InboundFreightTypeTable"]));
            if ((initTable == true)) {
                if ((this.tableInboundFreightTypeTable != null)) {
                    this.tableInboundFreightTypeTable.InitVars();
                }
            }
            this.tableInboundFreightSortTypeTable = ((InboundFreightSortTypeTableDataTable)(base.Tables["InboundFreightSortTypeTable"]));
            if ((initTable == true)) {
                if ((this.tableInboundFreightSortTypeTable != null)) {
                    this.tableInboundFreightSortTypeTable.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FreightDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FreightDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFreightTable = new FreightTableDataTable();
            base.Tables.Add(this.tableFreightTable);
            this.tableSortedFreightTable = new SortedFreightTableDataTable();
            base.Tables.Add(this.tableSortedFreightTable);
            this.tableStationFreightAssignmentTable = new StationFreightAssignmentTableDataTable();
            base.Tables.Add(this.tableStationFreightAssignmentTable);
            this.tableInboundFreightTypeTable = new InboundFreightTypeTableDataTable();
            base.Tables.Add(this.tableInboundFreightTypeTable);
            this.tableInboundFreightSortTypeTable = new InboundFreightSortTypeTableDataTable();
            base.Tables.Add(this.tableInboundFreightSortTypeTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFreightTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSortedFreightTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStationFreightAssignmentTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInboundFreightTypeTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInboundFreightSortTypeTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            FreightDS ds = new FreightDS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void FreightTableRowChangeEventHandler(object sender, FreightTableRowChangeEvent e);
        
        public delegate void SortedFreightTableRowChangeEventHandler(object sender, SortedFreightTableRowChangeEvent e);
        
        public delegate void StationFreightAssignmentTableRowChangeEventHandler(object sender, StationFreightAssignmentTableRowChangeEvent e);
        
        public delegate void InboundFreightTypeTableRowChangeEventHandler(object sender, InboundFreightTypeTableRowChangeEvent e);
        
        public delegate void InboundFreightSortTypeTableRowChangeEventHandler(object sender, InboundFreightSortTypeTableRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FreightTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnTDSNumber;
            
            private System.Data.DataColumn columnTerminalID;
            
            private System.Data.DataColumn columnClientNumber;
            
            private System.Data.DataColumn columnDivisionNumber;
            
            private System.Data.DataColumn columnVendorNumber;
            
            private System.Data.DataColumn columnAgentNumber;
            
            private System.Data.DataColumn columnPickupDate;
            
            private System.Data.DataColumn columnPickupNumber;
            
            private System.Data.DataColumn columnReceiveDate;
            
            private System.Data.DataColumn columnVendorKey;
            
            private System.Data.DataColumn columnCartons;
            
            private System.Data.DataColumn columnPallets;
            
            private System.Data.DataColumn columnCarrierNumber;
            
            private System.Data.DataColumn columnDriverNumber;
            
            private System.Data.DataColumn columnTrailerNumber;
            
            private System.Data.DataColumn columnStorageTrailerNumber;
            
            private System.Data.DataColumn columnCurrentLocation;
            
            private System.Data.DataColumn columnFloorStatus;
            
            private System.Data.DataColumn columnSealNumber;
            
            private System.Data.DataColumn columnUnloadedStatus;
            
            private System.Data.DataColumn columnStartSortDate;
            
            private System.Data.DataColumn columnStartSortTime;
            
            private System.Data.DataColumn columnStopSortDate;
            
            private System.Data.DataColumn columnStopSortTime;
            
            private System.Data.DataColumn columnLastUpdatedDate;
            
            private System.Data.DataColumn columnLastUpdatedTime;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightTableDataTable() {
                this.TableName = "FreightTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FreightTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FreightTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TDSNumberColumn {
                get {
                    return this.columnTDSNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DivisionNumberColumn {
                get {
                    return this.columnDivisionNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorNumberColumn {
                get {
                    return this.columnVendorNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AgentNumberColumn {
                get {
                    return this.columnAgentNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReceiveDateColumn {
                get {
                    return this.columnReceiveDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CartonsColumn {
                get {
                    return this.columnCartons;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PalletsColumn {
                get {
                    return this.columnPallets;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CarrierNumberColumn {
                get {
                    return this.columnCarrierNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DriverNumberColumn {
                get {
                    return this.columnDriverNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrailerNumberColumn {
                get {
                    return this.columnTrailerNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StorageTrailerNumberColumn {
                get {
                    return this.columnStorageTrailerNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrentLocationColumn {
                get {
                    return this.columnCurrentLocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FloorStatusColumn {
                get {
                    return this.columnFloorStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SealNumberColumn {
                get {
                    return this.columnSealNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnloadedStatusColumn {
                get {
                    return this.columnUnloadedStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StartSortDateColumn {
                get {
                    return this.columnStartSortDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StartSortTimeColumn {
                get {
                    return this.columnStartSortTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StopSortDateColumn {
                get {
                    return this.columnStopSortDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StopSortTimeColumn {
                get {
                    return this.columnStopSortTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastUpdatedTimeColumn {
                get {
                    return this.columnLastUpdatedTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightTableRow this[int index] {
                get {
                    return ((FreightTableRow)(this.Rows[index]));
                }
            }
            
            public event FreightTableRowChangeEventHandler FreightTableRowChanging;
            
            public event FreightTableRowChangeEventHandler FreightTableRowChanged;
            
            public event FreightTableRowChangeEventHandler FreightTableRowDeleting;
            
            public event FreightTableRowChangeEventHandler FreightTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFreightTableRow(FreightTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightTableRow AddFreightTableRow(
                        string ID, 
                        int TDSNumber, 
                        int TerminalID, 
                        string ClientNumber, 
                        string DivisionNumber, 
                        string VendorNumber, 
                        string AgentNumber, 
                        string PickupDate, 
                        int PickupNumber, 
                        string ReceiveDate, 
                        string VendorKey, 
                        int Cartons, 
                        int Pallets, 
                        int CarrierNumber, 
                        int DriverNumber, 
                        string TrailerNumber, 
                        string StorageTrailerNumber, 
                        string CurrentLocation, 
                        string FloorStatus, 
                        string SealNumber, 
                        string UnloadedStatus, 
                        string StartSortDate, 
                        string StartSortTime, 
                        string StopSortDate, 
                        string StopSortTime, 
                        int LastUpdatedDate, 
                        int LastUpdatedTime) {
                FreightTableRow rowFreightTableRow = ((FreightTableRow)(this.NewRow()));
                rowFreightTableRow.ItemArray = new object[] {
                        ID,
                        TDSNumber,
                        TerminalID,
                        ClientNumber,
                        DivisionNumber,
                        VendorNumber,
                        AgentNumber,
                        PickupDate,
                        PickupNumber,
                        ReceiveDate,
                        VendorKey,
                        Cartons,
                        Pallets,
                        CarrierNumber,
                        DriverNumber,
                        TrailerNumber,
                        StorageTrailerNumber,
                        CurrentLocation,
                        FloorStatus,
                        SealNumber,
                        UnloadedStatus,
                        StartSortDate,
                        StartSortTime,
                        StopSortDate,
                        StopSortTime,
                        LastUpdatedDate,
                        LastUpdatedTime};
                this.Rows.Add(rowFreightTableRow);
                return rowFreightTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FreightTableDataTable cln = ((FreightTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FreightTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTDSNumber = base.Columns["TDSNumber"];
                this.columnTerminalID = base.Columns["TerminalID"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnDivisionNumber = base.Columns["DivisionNumber"];
                this.columnVendorNumber = base.Columns["VendorNumber"];
                this.columnAgentNumber = base.Columns["AgentNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnReceiveDate = base.Columns["ReceiveDate"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnCartons = base.Columns["Cartons"];
                this.columnPallets = base.Columns["Pallets"];
                this.columnCarrierNumber = base.Columns["CarrierNumber"];
                this.columnDriverNumber = base.Columns["DriverNumber"];
                this.columnTrailerNumber = base.Columns["TrailerNumber"];
                this.columnStorageTrailerNumber = base.Columns["StorageTrailerNumber"];
                this.columnCurrentLocation = base.Columns["CurrentLocation"];
                this.columnFloorStatus = base.Columns["FloorStatus"];
                this.columnSealNumber = base.Columns["SealNumber"];
                this.columnUnloadedStatus = base.Columns["UnloadedStatus"];
                this.columnStartSortDate = base.Columns["StartSortDate"];
                this.columnStartSortTime = base.Columns["StartSortTime"];
                this.columnStopSortDate = base.Columns["StopSortDate"];
                this.columnStopSortTime = base.Columns["StopSortTime"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnLastUpdatedTime = base.Columns["LastUpdatedTime"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTDSNumber = new System.Data.DataColumn("TDSNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSNumber);
                this.columnTerminalID = new System.Data.DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminalID);
                this.columnClientNumber = new System.Data.DataColumn("ClientNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnDivisionNumber = new System.Data.DataColumn("DivisionNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionNumber);
                this.columnVendorNumber = new System.Data.DataColumn("VendorNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorNumber);
                this.columnAgentNumber = new System.Data.DataColumn("AgentNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNumber);
                this.columnPickupDate = new System.Data.DataColumn("PickupDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new System.Data.DataColumn("PickupNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnReceiveDate = new System.Data.DataColumn("ReceiveDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDate);
                this.columnVendorKey = new System.Data.DataColumn("VendorKey", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnCartons = new System.Data.DataColumn("Cartons", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartons);
                this.columnPallets = new System.Data.DataColumn("Pallets", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPallets);
                this.columnCarrierNumber = new System.Data.DataColumn("CarrierNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarrierNumber);
                this.columnDriverNumber = new System.Data.DataColumn("DriverNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverNumber);
                this.columnTrailerNumber = new System.Data.DataColumn("TrailerNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrailerNumber);
                this.columnStorageTrailerNumber = new System.Data.DataColumn("StorageTrailerNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageTrailerNumber);
                this.columnCurrentLocation = new System.Data.DataColumn("CurrentLocation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentLocation);
                this.columnFloorStatus = new System.Data.DataColumn("FloorStatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloorStatus);
                this.columnSealNumber = new System.Data.DataColumn("SealNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSealNumber);
                this.columnUnloadedStatus = new System.Data.DataColumn("UnloadedStatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnloadedStatus);
                this.columnStartSortDate = new System.Data.DataColumn("StartSortDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartSortDate);
                this.columnStartSortTime = new System.Data.DataColumn("StartSortTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartSortTime);
                this.columnStopSortDate = new System.Data.DataColumn("StopSortDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopSortDate);
                this.columnStopSortTime = new System.Data.DataColumn("StopSortTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopSortTime);
                this.columnLastUpdatedDate = new System.Data.DataColumn("LastUpdatedDate", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnLastUpdatedTime = new System.Data.DataColumn("LastUpdatedTime", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedTime);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightTableRow NewFreightTableRow() {
                return ((FreightTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FreightTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FreightTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FreightTableRowChanged != null)) {
                    this.FreightTableRowChanged(this, new FreightTableRowChangeEvent(((FreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FreightTableRowChanging != null)) {
                    this.FreightTableRowChanging(this, new FreightTableRowChangeEvent(((FreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FreightTableRowDeleted != null)) {
                    this.FreightTableRowDeleted(this, new FreightTableRowChangeEvent(((FreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FreightTableRowDeleting != null)) {
                    this.FreightTableRowDeleting(this, new FreightTableRowChangeEvent(((FreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFreightTableRow(FreightTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FreightDS ds = new FreightDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FreightTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SortedFreightTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLABEL_SEQ_NUMBER;
            
            private System.Data.DataColumn columnCLIENT_NUMBER;
            
            private System.Data.DataColumn columnCLIENT_DIV_NUM;
            
            private System.Data.DataColumn columnAGENT_NUMBER;
            
            private System.Data.DataColumn columnVENDOR_NUMBER;
            
            private System.Data.DataColumn columnSORTED_LOCATION;
            
            private System.Data.DataColumn columnDAMAGE_CODE;
            
            private System.Data.DataColumn columnPICKUP_DATE;
            
            private System.Data.DataColumn columnPICKUP_NUMBER;
            
            private System.Data.DataColumn columnSTORE;
            
            private System.Data.DataColumn columnZONE_CODE;
            
            private System.Data.DataColumn columnTRAILER_LOAD_NUM;
            
            private System.Data.DataColumn columnITEM_TYPE;
            
            private System.Data.DataColumn columnITEM_WEIGHT;
            
            private System.Data.DataColumn columnVENDOR_KEY;
            
            private System.Data.DataColumn columnVENDOR_ITEM_NUMBER;
            
            private System.Data.DataColumn columnRETURN_FLAG;
            
            private System.Data.DataColumn columnRETURN_NUMBER;
            
            private System.Data.DataColumn columnSHIFT_NUMBER;
            
            private System.Data.DataColumn columnSHIFT_DATE;
            
            private System.Data.DataColumn columnEND_TIME;
            
            private System.Data.DataColumn columnARC_DATE;
            
            private System.Data.DataColumn columnSTATION;
            
            private System.Data.DataColumn columnITEM_CUBE;
            
            private System.Data.DataColumn columnSORT_DATE;
            
            private System.Data.DataColumn columnSAN_NUMBER;
            
            private System.Data.DataColumn columnELAPSED_SECONDS;
            
            private System.Data.DataColumn columnDOWN_SECONDS;
            
            private System.Data.DataColumn columnPO_NUMBER;
            
            private System.Data.DataColumn columnOS_TRACKING_NUMBER;
            
            private System.Data.DataColumn columnSHIPPING_METHOD;
            
            private System.Data.DataColumn columnSAMPLE_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SortedFreightTableDataTable() {
                this.TableName = "SortedFreightTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SortedFreightTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SortedFreightTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LABEL_SEQ_NUMBERColumn {
                get {
                    return this.columnLABEL_SEQ_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CLIENT_NUMBERColumn {
                get {
                    return this.columnCLIENT_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CLIENT_DIV_NUMColumn {
                get {
                    return this.columnCLIENT_DIV_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AGENT_NUMBERColumn {
                get {
                    return this.columnAGENT_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VENDOR_NUMBERColumn {
                get {
                    return this.columnVENDOR_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SORTED_LOCATIONColumn {
                get {
                    return this.columnSORTED_LOCATION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DAMAGE_CODEColumn {
                get {
                    return this.columnDAMAGE_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PICKUP_DATEColumn {
                get {
                    return this.columnPICKUP_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PICKUP_NUMBERColumn {
                get {
                    return this.columnPICKUP_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOREColumn {
                get {
                    return this.columnSTORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZONE_CODEColumn {
                get {
                    return this.columnZONE_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRAILER_LOAD_NUMColumn {
                get {
                    return this.columnTRAILER_LOAD_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_TYPEColumn {
                get {
                    return this.columnITEM_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_WEIGHTColumn {
                get {
                    return this.columnITEM_WEIGHT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VENDOR_KEYColumn {
                get {
                    return this.columnVENDOR_KEY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VENDOR_ITEM_NUMBERColumn {
                get {
                    return this.columnVENDOR_ITEM_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETURN_FLAGColumn {
                get {
                    return this.columnRETURN_FLAG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETURN_NUMBERColumn {
                get {
                    return this.columnRETURN_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHIFT_NUMBERColumn {
                get {
                    return this.columnSHIFT_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHIFT_DATEColumn {
                get {
                    return this.columnSHIFT_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn END_TIMEColumn {
                get {
                    return this.columnEND_TIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ARC_DATEColumn {
                get {
                    return this.columnARC_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STATIONColumn {
                get {
                    return this.columnSTATION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_CUBEColumn {
                get {
                    return this.columnITEM_CUBE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SORT_DATEColumn {
                get {
                    return this.columnSORT_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SAN_NUMBERColumn {
                get {
                    return this.columnSAN_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ELAPSED_SECONDSColumn {
                get {
                    return this.columnELAPSED_SECONDS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOWN_SECONDSColumn {
                get {
                    return this.columnDOWN_SECONDS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_NUMBERColumn {
                get {
                    return this.columnPO_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OS_TRACKING_NUMBERColumn {
                get {
                    return this.columnOS_TRACKING_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHIPPING_METHODColumn {
                get {
                    return this.columnSHIPPING_METHOD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SAMPLE_DATEColumn {
                get {
                    return this.columnSAMPLE_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SortedFreightTableRow this[int index] {
                get {
                    return ((SortedFreightTableRow)(this.Rows[index]));
                }
            }
            
            public event SortedFreightTableRowChangeEventHandler SortedFreightTableRowChanging;
            
            public event SortedFreightTableRowChangeEventHandler SortedFreightTableRowChanged;
            
            public event SortedFreightTableRowChangeEventHandler SortedFreightTableRowDeleting;
            
            public event SortedFreightTableRowChangeEventHandler SortedFreightTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSortedFreightTableRow(SortedFreightTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SortedFreightTableRow AddSortedFreightTableRow(
                        string LABEL_SEQ_NUMBER, 
                        string CLIENT_NUMBER, 
                        string CLIENT_DIV_NUM, 
                        string AGENT_NUMBER, 
                        string VENDOR_NUMBER, 
                        string SORTED_LOCATION, 
                        string DAMAGE_CODE, 
                        System.DateTime PICKUP_DATE, 
                        int PICKUP_NUMBER, 
                        int STORE, 
                        string ZONE_CODE, 
                        string TRAILER_LOAD_NUM, 
                        string ITEM_TYPE, 
                        int ITEM_WEIGHT, 
                        string VENDOR_KEY, 
                        string VENDOR_ITEM_NUMBER, 
                        string RETURN_FLAG, 
                        string RETURN_NUMBER, 
                        string SHIFT_NUMBER, 
                        System.DateTime SHIFT_DATE, 
                        System.DateTime END_TIME, 
                        System.DateTime ARC_DATE, 
                        string STATION, 
                        int ITEM_CUBE, 
                        System.DateTime SORT_DATE, 
                        string SAN_NUMBER, 
                        int ELAPSED_SECONDS, 
                        int DOWN_SECONDS, 
                        string PO_NUMBER, 
                        string OS_TRACKING_NUMBER, 
                        string SHIPPING_METHOD, 
                        System.DateTime SAMPLE_DATE) {
                SortedFreightTableRow rowSortedFreightTableRow = ((SortedFreightTableRow)(this.NewRow()));
                rowSortedFreightTableRow.ItemArray = new object[] {
                        LABEL_SEQ_NUMBER,
                        CLIENT_NUMBER,
                        CLIENT_DIV_NUM,
                        AGENT_NUMBER,
                        VENDOR_NUMBER,
                        SORTED_LOCATION,
                        DAMAGE_CODE,
                        PICKUP_DATE,
                        PICKUP_NUMBER,
                        STORE,
                        ZONE_CODE,
                        TRAILER_LOAD_NUM,
                        ITEM_TYPE,
                        ITEM_WEIGHT,
                        VENDOR_KEY,
                        VENDOR_ITEM_NUMBER,
                        RETURN_FLAG,
                        RETURN_NUMBER,
                        SHIFT_NUMBER,
                        SHIFT_DATE,
                        END_TIME,
                        ARC_DATE,
                        STATION,
                        ITEM_CUBE,
                        SORT_DATE,
                        SAN_NUMBER,
                        ELAPSED_SECONDS,
                        DOWN_SECONDS,
                        PO_NUMBER,
                        OS_TRACKING_NUMBER,
                        SHIPPING_METHOD,
                        SAMPLE_DATE};
                this.Rows.Add(rowSortedFreightTableRow);
                return rowSortedFreightTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SortedFreightTableDataTable cln = ((SortedFreightTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SortedFreightTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLABEL_SEQ_NUMBER = base.Columns["LABEL_SEQ_NUMBER"];
                this.columnCLIENT_NUMBER = base.Columns["CLIENT_NUMBER"];
                this.columnCLIENT_DIV_NUM = base.Columns["CLIENT_DIV_NUM"];
                this.columnAGENT_NUMBER = base.Columns["AGENT_NUMBER"];
                this.columnVENDOR_NUMBER = base.Columns["VENDOR_NUMBER"];
                this.columnSORTED_LOCATION = base.Columns["SORTED_LOCATION"];
                this.columnDAMAGE_CODE = base.Columns["DAMAGE_CODE"];
                this.columnPICKUP_DATE = base.Columns["PICKUP_DATE"];
                this.columnPICKUP_NUMBER = base.Columns["PICKUP_NUMBER"];
                this.columnSTORE = base.Columns["STORE"];
                this.columnZONE_CODE = base.Columns["ZONE_CODE"];
                this.columnTRAILER_LOAD_NUM = base.Columns["TRAILER_LOAD_NUM"];
                this.columnITEM_TYPE = base.Columns["ITEM_TYPE"];
                this.columnITEM_WEIGHT = base.Columns["ITEM_WEIGHT"];
                this.columnVENDOR_KEY = base.Columns["VENDOR_KEY"];
                this.columnVENDOR_ITEM_NUMBER = base.Columns["VENDOR_ITEM_NUMBER"];
                this.columnRETURN_FLAG = base.Columns["RETURN_FLAG"];
                this.columnRETURN_NUMBER = base.Columns["RETURN_NUMBER"];
                this.columnSHIFT_NUMBER = base.Columns["SHIFT_NUMBER"];
                this.columnSHIFT_DATE = base.Columns["SHIFT_DATE"];
                this.columnEND_TIME = base.Columns["END_TIME"];
                this.columnARC_DATE = base.Columns["ARC_DATE"];
                this.columnSTATION = base.Columns["STATION"];
                this.columnITEM_CUBE = base.Columns["ITEM_CUBE"];
                this.columnSORT_DATE = base.Columns["SORT_DATE"];
                this.columnSAN_NUMBER = base.Columns["SAN_NUMBER"];
                this.columnELAPSED_SECONDS = base.Columns["ELAPSED_SECONDS"];
                this.columnDOWN_SECONDS = base.Columns["DOWN_SECONDS"];
                this.columnPO_NUMBER = base.Columns["PO_NUMBER"];
                this.columnOS_TRACKING_NUMBER = base.Columns["OS_TRACKING_NUMBER"];
                this.columnSHIPPING_METHOD = base.Columns["SHIPPING_METHOD"];
                this.columnSAMPLE_DATE = base.Columns["SAMPLE_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLABEL_SEQ_NUMBER = new System.Data.DataColumn("LABEL_SEQ_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLABEL_SEQ_NUMBER);
                this.columnCLIENT_NUMBER = new System.Data.DataColumn("CLIENT_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLIENT_NUMBER);
                this.columnCLIENT_DIV_NUM = new System.Data.DataColumn("CLIENT_DIV_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLIENT_DIV_NUM);
                this.columnAGENT_NUMBER = new System.Data.DataColumn("AGENT_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGENT_NUMBER);
                this.columnVENDOR_NUMBER = new System.Data.DataColumn("VENDOR_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENDOR_NUMBER);
                this.columnSORTED_LOCATION = new System.Data.DataColumn("SORTED_LOCATION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORTED_LOCATION);
                this.columnDAMAGE_CODE = new System.Data.DataColumn("DAMAGE_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAMAGE_CODE);
                this.columnPICKUP_DATE = new System.Data.DataColumn("PICKUP_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICKUP_DATE);
                this.columnPICKUP_NUMBER = new System.Data.DataColumn("PICKUP_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICKUP_NUMBER);
                this.columnSTORE = new System.Data.DataColumn("STORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE);
                this.columnZONE_CODE = new System.Data.DataColumn("ZONE_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZONE_CODE);
                this.columnTRAILER_LOAD_NUM = new System.Data.DataColumn("TRAILER_LOAD_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAILER_LOAD_NUM);
                this.columnITEM_TYPE = new System.Data.DataColumn("ITEM_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_TYPE);
                this.columnITEM_WEIGHT = new System.Data.DataColumn("ITEM_WEIGHT", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_WEIGHT);
                this.columnVENDOR_KEY = new System.Data.DataColumn("VENDOR_KEY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENDOR_KEY);
                this.columnVENDOR_ITEM_NUMBER = new System.Data.DataColumn("VENDOR_ITEM_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENDOR_ITEM_NUMBER);
                this.columnRETURN_FLAG = new System.Data.DataColumn("RETURN_FLAG", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_FLAG);
                this.columnRETURN_NUMBER = new System.Data.DataColumn("RETURN_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_NUMBER);
                this.columnSHIFT_NUMBER = new System.Data.DataColumn("SHIFT_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT_NUMBER);
                this.columnSHIFT_DATE = new System.Data.DataColumn("SHIFT_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT_DATE);
                this.columnEND_TIME = new System.Data.DataColumn("END_TIME", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEND_TIME);
                this.columnARC_DATE = new System.Data.DataColumn("ARC_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnARC_DATE);
                this.columnSTATION = new System.Data.DataColumn("STATION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATION);
                this.columnITEM_CUBE = new System.Data.DataColumn("ITEM_CUBE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_CUBE);
                this.columnSORT_DATE = new System.Data.DataColumn("SORT_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT_DATE);
                this.columnSAN_NUMBER = new System.Data.DataColumn("SAN_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAN_NUMBER);
                this.columnELAPSED_SECONDS = new System.Data.DataColumn("ELAPSED_SECONDS", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnELAPSED_SECONDS);
                this.columnDOWN_SECONDS = new System.Data.DataColumn("DOWN_SECONDS", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOWN_SECONDS);
                this.columnPO_NUMBER = new System.Data.DataColumn("PO_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_NUMBER);
                this.columnOS_TRACKING_NUMBER = new System.Data.DataColumn("OS_TRACKING_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOS_TRACKING_NUMBER);
                this.columnSHIPPING_METHOD = new System.Data.DataColumn("SHIPPING_METHOD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPPING_METHOD);
                this.columnSAMPLE_DATE = new System.Data.DataColumn("SAMPLE_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_DATE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SortedFreightTableRow NewSortedFreightTableRow() {
                return ((SortedFreightTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SortedFreightTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SortedFreightTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SortedFreightTableRowChanged != null)) {
                    this.SortedFreightTableRowChanged(this, new SortedFreightTableRowChangeEvent(((SortedFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SortedFreightTableRowChanging != null)) {
                    this.SortedFreightTableRowChanging(this, new SortedFreightTableRowChangeEvent(((SortedFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SortedFreightTableRowDeleted != null)) {
                    this.SortedFreightTableRowDeleted(this, new SortedFreightTableRowChangeEvent(((SortedFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SortedFreightTableRowDeleting != null)) {
                    this.SortedFreightTableRowDeleting(this, new SortedFreightTableRowChangeEvent(((SortedFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSortedFreightTableRow(SortedFreightTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FreightDS ds = new FreightDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SortedFreightTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StationFreightAssignmentTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWorkStationID;
            
            private System.Data.DataColumn columnFreightID;
            
            private System.Data.DataColumn columnSortTypeID;
            
            private System.Data.DataColumn columnTDSNumber;
            
            private System.Data.DataColumn columnClient;
            
            private System.Data.DataColumn columnStationNumber;
            
            private System.Data.DataColumn columnResult;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StationFreightAssignmentTableDataTable() {
                this.TableName = "StationFreightAssignmentTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StationFreightAssignmentTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StationFreightAssignmentTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkStationIDColumn {
                get {
                    return this.columnWorkStationID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FreightIDColumn {
                get {
                    return this.columnFreightID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SortTypeIDColumn {
                get {
                    return this.columnSortTypeID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TDSNumberColumn {
                get {
                    return this.columnTDSNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientColumn {
                get {
                    return this.columnClient;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StationNumberColumn {
                get {
                    return this.columnStationNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StationFreightAssignmentTableRow this[int index] {
                get {
                    return ((StationFreightAssignmentTableRow)(this.Rows[index]));
                }
            }
            
            public event StationFreightAssignmentTableRowChangeEventHandler StationFreightAssignmentTableRowChanging;
            
            public event StationFreightAssignmentTableRowChangeEventHandler StationFreightAssignmentTableRowChanged;
            
            public event StationFreightAssignmentTableRowChangeEventHandler StationFreightAssignmentTableRowDeleting;
            
            public event StationFreightAssignmentTableRowChangeEventHandler StationFreightAssignmentTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStationFreightAssignmentTableRow(StationFreightAssignmentTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StationFreightAssignmentTableRow AddStationFreightAssignmentTableRow(string WorkStationID, string FreightID, int SortTypeID, int TDSNumber, string Client, string StationNumber, string Result) {
                StationFreightAssignmentTableRow rowStationFreightAssignmentTableRow = ((StationFreightAssignmentTableRow)(this.NewRow()));
                rowStationFreightAssignmentTableRow.ItemArray = new object[] {
                        WorkStationID,
                        FreightID,
                        SortTypeID,
                        TDSNumber,
                        Client,
                        StationNumber,
                        Result};
                this.Rows.Add(rowStationFreightAssignmentTableRow);
                return rowStationFreightAssignmentTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                StationFreightAssignmentTableDataTable cln = ((StationFreightAssignmentTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new StationFreightAssignmentTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWorkStationID = base.Columns["WorkStationID"];
                this.columnFreightID = base.Columns["FreightID"];
                this.columnSortTypeID = base.Columns["SortTypeID"];
                this.columnTDSNumber = base.Columns["TDSNumber"];
                this.columnClient = base.Columns["Client"];
                this.columnStationNumber = base.Columns["StationNumber"];
                this.columnResult = base.Columns["Result"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWorkStationID = new System.Data.DataColumn("WorkStationID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkStationID);
                this.columnFreightID = new System.Data.DataColumn("FreightID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightID);
                this.columnSortTypeID = new System.Data.DataColumn("SortTypeID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortTypeID);
                this.columnTDSNumber = new System.Data.DataColumn("TDSNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSNumber);
                this.columnClient = new System.Data.DataColumn("Client", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient);
                this.columnStationNumber = new System.Data.DataColumn("StationNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationNumber);
                this.columnResult = new System.Data.DataColumn("Result", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StationFreightAssignmentTableRow NewStationFreightAssignmentTableRow() {
                return ((StationFreightAssignmentTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new StationFreightAssignmentTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(StationFreightAssignmentTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StationFreightAssignmentTableRowChanged != null)) {
                    this.StationFreightAssignmentTableRowChanged(this, new StationFreightAssignmentTableRowChangeEvent(((StationFreightAssignmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StationFreightAssignmentTableRowChanging != null)) {
                    this.StationFreightAssignmentTableRowChanging(this, new StationFreightAssignmentTableRowChangeEvent(((StationFreightAssignmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StationFreightAssignmentTableRowDeleted != null)) {
                    this.StationFreightAssignmentTableRowDeleted(this, new StationFreightAssignmentTableRowChangeEvent(((StationFreightAssignmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StationFreightAssignmentTableRowDeleting != null)) {
                    this.StationFreightAssignmentTableRowDeleting(this, new StationFreightAssignmentTableRowChangeEvent(((StationFreightAssignmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStationFreightAssignmentTableRow(StationFreightAssignmentTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FreightDS ds = new FreightDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StationFreightAssignmentTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InboundFreightTypeTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnFreightType;
            
            private System.Data.DataColumn columnIsActive;
            
            private System.Data.DataColumn columnLastUpdated;
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnRowVersionID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTypeTableDataTable() {
                this.TableName = "InboundFreightTypeTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InboundFreightTypeTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InboundFreightTypeTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FreightTypeColumn {
                get {
                    return this.columnFreightType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RowVersionIDColumn {
                get {
                    return this.columnRowVersionID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTypeTableRow this[int index] {
                get {
                    return ((InboundFreightTypeTableRow)(this.Rows[index]));
                }
            }
            
            public event InboundFreightTypeTableRowChangeEventHandler InboundFreightTypeTableRowChanging;
            
            public event InboundFreightTypeTableRowChangeEventHandler InboundFreightTypeTableRowChanged;
            
            public event InboundFreightTypeTableRowChangeEventHandler InboundFreightTypeTableRowDeleting;
            
            public event InboundFreightTypeTableRowChangeEventHandler InboundFreightTypeTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInboundFreightTypeTableRow(InboundFreightTypeTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTypeTableRow AddInboundFreightTypeTableRow(string FreightType, bool IsActive, System.DateTime LastUpdated, string UserID, byte[] RowVersionID) {
                InboundFreightTypeTableRow rowInboundFreightTypeTableRow = ((InboundFreightTypeTableRow)(this.NewRow()));
                rowInboundFreightTypeTableRow.ItemArray = new object[] {
                        FreightType,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersionID};
                this.Rows.Add(rowInboundFreightTypeTableRow);
                return rowInboundFreightTypeTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                InboundFreightTypeTableDataTable cln = ((InboundFreightTypeTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new InboundFreightTypeTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFreightType = base.Columns["FreightType"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnLastUpdated = base.Columns["LastUpdated"];
                this.columnUserID = base.Columns["UserID"];
                this.columnRowVersionID = base.Columns["RowVersionID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFreightType = new System.Data.DataColumn("FreightType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightType);
                this.columnIsActive = new System.Data.DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new System.Data.DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnRowVersionID = new System.Data.DataColumn("RowVersionID", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersionID);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTypeTableRow NewInboundFreightTypeTableRow() {
                return ((InboundFreightTypeTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new InboundFreightTypeTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(InboundFreightTypeTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InboundFreightTypeTableRowChanged != null)) {
                    this.InboundFreightTypeTableRowChanged(this, new InboundFreightTypeTableRowChangeEvent(((InboundFreightTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InboundFreightTypeTableRowChanging != null)) {
                    this.InboundFreightTypeTableRowChanging(this, new InboundFreightTypeTableRowChangeEvent(((InboundFreightTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InboundFreightTypeTableRowDeleted != null)) {
                    this.InboundFreightTypeTableRowDeleted(this, new InboundFreightTypeTableRowChangeEvent(((InboundFreightTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InboundFreightTypeTableRowDeleting != null)) {
                    this.InboundFreightTypeTableRowDeleting(this, new InboundFreightTypeTableRowChangeEvent(((InboundFreightTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInboundFreightTypeTableRow(InboundFreightTypeTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FreightDS ds = new FreightDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InboundFreightTypeTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InboundFreightSortTypeTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnInboundFreightType;
            
            private System.Data.DataColumn columnSortType;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightSortTypeTableDataTable() {
                this.TableName = "InboundFreightSortTypeTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InboundFreightSortTypeTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InboundFreightSortTypeTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InboundFreightTypeColumn {
                get {
                    return this.columnInboundFreightType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SortTypeColumn {
                get {
                    return this.columnSortType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightSortTypeTableRow this[int index] {
                get {
                    return ((InboundFreightSortTypeTableRow)(this.Rows[index]));
                }
            }
            
            public event InboundFreightSortTypeTableRowChangeEventHandler InboundFreightSortTypeTableRowChanging;
            
            public event InboundFreightSortTypeTableRowChangeEventHandler InboundFreightSortTypeTableRowChanged;
            
            public event InboundFreightSortTypeTableRowChangeEventHandler InboundFreightSortTypeTableRowDeleting;
            
            public event InboundFreightSortTypeTableRowChangeEventHandler InboundFreightSortTypeTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInboundFreightSortTypeTableRow(InboundFreightSortTypeTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightSortTypeTableRow AddInboundFreightSortTypeTableRow(int ID, string InboundFreightType, string SortType) {
                InboundFreightSortTypeTableRow rowInboundFreightSortTypeTableRow = ((InboundFreightSortTypeTableRow)(this.NewRow()));
                rowInboundFreightSortTypeTableRow.ItemArray = new object[] {
                        ID,
                        InboundFreightType,
                        SortType};
                this.Rows.Add(rowInboundFreightSortTypeTableRow);
                return rowInboundFreightSortTypeTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                InboundFreightSortTypeTableDataTable cln = ((InboundFreightSortTypeTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new InboundFreightSortTypeTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnInboundFreightType = base.Columns["InboundFreightType"];
                this.columnSortType = base.Columns["SortType"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnInboundFreightType = new System.Data.DataColumn("InboundFreightType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInboundFreightType);
                this.columnSortType = new System.Data.DataColumn("SortType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortType);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightSortTypeTableRow NewInboundFreightSortTypeTableRow() {
                return ((InboundFreightSortTypeTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new InboundFreightSortTypeTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(InboundFreightSortTypeTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InboundFreightSortTypeTableRowChanged != null)) {
                    this.InboundFreightSortTypeTableRowChanged(this, new InboundFreightSortTypeTableRowChangeEvent(((InboundFreightSortTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InboundFreightSortTypeTableRowChanging != null)) {
                    this.InboundFreightSortTypeTableRowChanging(this, new InboundFreightSortTypeTableRowChangeEvent(((InboundFreightSortTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InboundFreightSortTypeTableRowDeleted != null)) {
                    this.InboundFreightSortTypeTableRowDeleted(this, new InboundFreightSortTypeTableRowChangeEvent(((InboundFreightSortTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InboundFreightSortTypeTableRowDeleting != null)) {
                    this.InboundFreightSortTypeTableRowDeleting(this, new InboundFreightSortTypeTableRowChangeEvent(((InboundFreightSortTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInboundFreightSortTypeTableRow(InboundFreightSortTypeTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FreightDS ds = new FreightDS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InboundFreightSortTypeTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FreightTableRow : System.Data.DataRow {
            
            private FreightTableDataTable tableFreightTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FreightTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFreightTable = ((FreightTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDSNumber {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.TDSNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TDSNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.TDSNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.TerminalIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TerminalID\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.TerminalIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.ClientNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.ClientNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DivisionNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.DivisionNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DivisionNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.DivisionNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.VendorNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VendorNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.VendorNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.AgentNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AgentNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.AgentNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupDate {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.PickupDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.PickupDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PickupNumber {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.PickupNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.PickupNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiveDate {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.ReceiveDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReceiveDate\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.ReceiveDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.VendorKeyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.VendorKeyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cartons {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.CartonsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cartons\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.CartonsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pallets {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.PalletsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pallets\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.PalletsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CarrierNumber {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.CarrierNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CarrierNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.CarrierNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DriverNumber {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.DriverNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DriverNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.DriverNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.TrailerNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TrailerNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.TrailerNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageTrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.StorageTrailerNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StorageTrailerNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.StorageTrailerNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentLocation {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.CurrentLocationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CurrentLocation\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.CurrentLocationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FloorStatus {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.FloorStatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FloorStatus\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.FloorStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SealNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.SealNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SealNumber\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.SealNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnloadedStatus {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.UnloadedStatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UnloadedStatus\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.UnloadedStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartSortDate {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.StartSortDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StartSortDate\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.StartSortDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartSortTime {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.StartSortTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StartSortTime\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.StartSortTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StopSortDate {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.StopSortDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StopSortDate\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.StopSortDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StopSortTime {
                get {
                    try {
                        return ((string)(this[this.tableFreightTable.StopSortTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StopSortTime\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.StopSortTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LastUpdatedDate {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.LastUpdatedDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LastUpdatedDate\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.LastUpdatedDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LastUpdatedTime {
                get {
                    try {
                        return ((int)(this[this.tableFreightTable.LastUpdatedTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LastUpdatedTime\' in table \'FreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightTable.LastUpdatedTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableFreightTable.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableFreightTable.IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSNumberNull() {
                return this.IsNull(this.tableFreightTable.TDSNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSNumberNull() {
                this[this.tableFreightTable.TDSNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableFreightTable.TerminalIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalIDNull() {
                this[this.tableFreightTable.TerminalIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableFreightTable.ClientNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableFreightTable.ClientNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNumberNull() {
                return this.IsNull(this.tableFreightTable.DivisionNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNumberNull() {
                this[this.tableFreightTable.DivisionNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNumberNull() {
                return this.IsNull(this.tableFreightTable.VendorNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNumberNull() {
                this[this.tableFreightTable.VendorNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNumberNull() {
                return this.IsNull(this.tableFreightTable.AgentNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNumberNull() {
                this[this.tableFreightTable.AgentNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableFreightTable.PickupDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableFreightTable.PickupDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableFreightTable.PickupNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tableFreightTable.PickupNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveDateNull() {
                return this.IsNull(this.tableFreightTable.ReceiveDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveDateNull() {
                this[this.tableFreightTable.ReceiveDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableFreightTable.VendorKeyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tableFreightTable.VendorKeyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsNull() {
                return this.IsNull(this.tableFreightTable.CartonsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsNull() {
                this[this.tableFreightTable.CartonsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPalletsNull() {
                return this.IsNull(this.tableFreightTable.PalletsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPalletsNull() {
                this[this.tableFreightTable.PalletsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarrierNumberNull() {
                return this.IsNull(this.tableFreightTable.CarrierNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarrierNumberNull() {
                this[this.tableFreightTable.CarrierNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDriverNumberNull() {
                return this.IsNull(this.tableFreightTable.DriverNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDriverNumberNull() {
                this[this.tableFreightTable.DriverNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrailerNumberNull() {
                return this.IsNull(this.tableFreightTable.TrailerNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrailerNumberNull() {
                this[this.tableFreightTable.TrailerNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageTrailerNumberNull() {
                return this.IsNull(this.tableFreightTable.StorageTrailerNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageTrailerNumberNull() {
                this[this.tableFreightTable.StorageTrailerNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentLocationNull() {
                return this.IsNull(this.tableFreightTable.CurrentLocationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentLocationNull() {
                this[this.tableFreightTable.CurrentLocationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloorStatusNull() {
                return this.IsNull(this.tableFreightTable.FloorStatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloorStatusNull() {
                this[this.tableFreightTable.FloorStatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSealNumberNull() {
                return this.IsNull(this.tableFreightTable.SealNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSealNumberNull() {
                this[this.tableFreightTable.SealNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnloadedStatusNull() {
                return this.IsNull(this.tableFreightTable.UnloadedStatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnloadedStatusNull() {
                this[this.tableFreightTable.UnloadedStatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartSortDateNull() {
                return this.IsNull(this.tableFreightTable.StartSortDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartSortDateNull() {
                this[this.tableFreightTable.StartSortDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartSortTimeNull() {
                return this.IsNull(this.tableFreightTable.StartSortTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartSortTimeNull() {
                this[this.tableFreightTable.StartSortTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStopSortDateNull() {
                return this.IsNull(this.tableFreightTable.StopSortDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStopSortDateNull() {
                this[this.tableFreightTable.StopSortDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStopSortTimeNull() {
                return this.IsNull(this.tableFreightTable.StopSortTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStopSortTimeNull() {
                this[this.tableFreightTable.StopSortTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedDateNull() {
                return this.IsNull(this.tableFreightTable.LastUpdatedDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedDateNull() {
                this[this.tableFreightTable.LastUpdatedDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedTimeNull() {
                return this.IsNull(this.tableFreightTable.LastUpdatedTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedTimeNull() {
                this[this.tableFreightTable.LastUpdatedTimeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SortedFreightTableRow : System.Data.DataRow {
            
            private SortedFreightTableDataTable tableSortedFreightTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SortedFreightTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSortedFreightTable = ((SortedFreightTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LABEL_SEQ_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.LABEL_SEQ_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LABEL_SEQ_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.LABEL_SEQ_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLIENT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.CLIENT_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CLIENT_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.CLIENT_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLIENT_DIV_NUM {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.CLIENT_DIV_NUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CLIENT_DIV_NUM\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.CLIENT_DIV_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGENT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.AGENT_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AGENT_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.AGENT_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VENDOR_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.VENDOR_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VENDOR_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.VENDOR_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SORTED_LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.SORTED_LOCATIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SORTED_LOCATION\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SORTED_LOCATIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DAMAGE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.DAMAGE_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DAMAGE_CODE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.DAMAGE_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PICKUP_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortedFreightTable.PICKUP_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PICKUP_DATE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.PICKUP_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PICKUP_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableSortedFreightTable.PICKUP_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PICKUP_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.PICKUP_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STORE {
                get {
                    try {
                        return ((int)(this[this.tableSortedFreightTable.STOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STORE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.STOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZONE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.ZONE_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ZONE_CODE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.ZONE_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAILER_LOAD_NUM {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.TRAILER_LOAD_NUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRAILER_LOAD_NUM\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.TRAILER_LOAD_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.ITEM_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_TYPE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.ITEM_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITEM_WEIGHT {
                get {
                    try {
                        return ((int)(this[this.tableSortedFreightTable.ITEM_WEIGHTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_WEIGHT\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.ITEM_WEIGHTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VENDOR_KEY {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.VENDOR_KEYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VENDOR_KEY\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.VENDOR_KEYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VENDOR_ITEM_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.VENDOR_ITEM_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VENDOR_ITEM_NUMBER\' in table \'SortedFreightTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.VENDOR_ITEM_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.RETURN_FLAGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETURN_FLAG\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.RETURN_FLAGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.RETURN_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETURN_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.RETURN_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIFT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.SHIFT_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHIFT_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SHIFT_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SHIFT_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortedFreightTable.SHIFT_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHIFT_DATE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SHIFT_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime END_TIME {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortedFreightTable.END_TIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'END_TIME\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.END_TIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ARC_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortedFreightTable.ARC_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ARC_DATE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.ARC_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATION {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.STATIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STATION\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.STATIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITEM_CUBE {
                get {
                    try {
                        return ((int)(this[this.tableSortedFreightTable.ITEM_CUBEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_CUBE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.ITEM_CUBEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SORT_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortedFreightTable.SORT_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SORT_DATE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SORT_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAN_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.SAN_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SAN_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SAN_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ELAPSED_SECONDS {
                get {
                    try {
                        return ((int)(this[this.tableSortedFreightTable.ELAPSED_SECONDSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ELAPSED_SECONDS\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.ELAPSED_SECONDSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DOWN_SECONDS {
                get {
                    try {
                        return ((int)(this[this.tableSortedFreightTable.DOWN_SECONDSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOWN_SECONDS\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.DOWN_SECONDSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PO_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.PO_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PO_NUMBER\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.PO_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OS_TRACKING_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.OS_TRACKING_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OS_TRACKING_NUMBER\' in table \'SortedFreightTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.OS_TRACKING_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPPING_METHOD {
                get {
                    try {
                        return ((string)(this[this.tableSortedFreightTable.SHIPPING_METHODColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHIPPING_METHOD\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SHIPPING_METHODColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SAMPLE_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortedFreightTable.SAMPLE_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SAMPLE_DATE\' in table \'SortedFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortedFreightTable.SAMPLE_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLABEL_SEQ_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.LABEL_SEQ_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLABEL_SEQ_NUMBERNull() {
                this[this.tableSortedFreightTable.LABEL_SEQ_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLIENT_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.CLIENT_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLIENT_NUMBERNull() {
                this[this.tableSortedFreightTable.CLIENT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLIENT_DIV_NUMNull() {
                return this.IsNull(this.tableSortedFreightTable.CLIENT_DIV_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLIENT_DIV_NUMNull() {
                this[this.tableSortedFreightTable.CLIENT_DIV_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGENT_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.AGENT_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGENT_NUMBERNull() {
                this[this.tableSortedFreightTable.AGENT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVENDOR_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.VENDOR_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVENDOR_NUMBERNull() {
                this[this.tableSortedFreightTable.VENDOR_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSORTED_LOCATIONNull() {
                return this.IsNull(this.tableSortedFreightTable.SORTED_LOCATIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSORTED_LOCATIONNull() {
                this[this.tableSortedFreightTable.SORTED_LOCATIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAMAGE_CODENull() {
                return this.IsNull(this.tableSortedFreightTable.DAMAGE_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAMAGE_CODENull() {
                this[this.tableSortedFreightTable.DAMAGE_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICKUP_DATENull() {
                return this.IsNull(this.tableSortedFreightTable.PICKUP_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICKUP_DATENull() {
                this[this.tableSortedFreightTable.PICKUP_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICKUP_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.PICKUP_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICKUP_NUMBERNull() {
                this[this.tableSortedFreightTable.PICKUP_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORENull() {
                return this.IsNull(this.tableSortedFreightTable.STOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORENull() {
                this[this.tableSortedFreightTable.STOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZONE_CODENull() {
                return this.IsNull(this.tableSortedFreightTable.ZONE_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZONE_CODENull() {
                this[this.tableSortedFreightTable.ZONE_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRAILER_LOAD_NUMNull() {
                return this.IsNull(this.tableSortedFreightTable.TRAILER_LOAD_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRAILER_LOAD_NUMNull() {
                this[this.tableSortedFreightTable.TRAILER_LOAD_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_TYPENull() {
                return this.IsNull(this.tableSortedFreightTable.ITEM_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_TYPENull() {
                this[this.tableSortedFreightTable.ITEM_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_WEIGHTNull() {
                return this.IsNull(this.tableSortedFreightTable.ITEM_WEIGHTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_WEIGHTNull() {
                this[this.tableSortedFreightTable.ITEM_WEIGHTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVENDOR_KEYNull() {
                return this.IsNull(this.tableSortedFreightTable.VENDOR_KEYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVENDOR_KEYNull() {
                this[this.tableSortedFreightTable.VENDOR_KEYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVENDOR_ITEM_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.VENDOR_ITEM_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVENDOR_ITEM_NUMBERNull() {
                this[this.tableSortedFreightTable.VENDOR_ITEM_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETURN_FLAGNull() {
                return this.IsNull(this.tableSortedFreightTable.RETURN_FLAGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETURN_FLAGNull() {
                this[this.tableSortedFreightTable.RETURN_FLAGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETURN_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.RETURN_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETURN_NUMBERNull() {
                this[this.tableSortedFreightTable.RETURN_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIFT_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.SHIFT_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIFT_NUMBERNull() {
                this[this.tableSortedFreightTable.SHIFT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIFT_DATENull() {
                return this.IsNull(this.tableSortedFreightTable.SHIFT_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIFT_DATENull() {
                this[this.tableSortedFreightTable.SHIFT_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEND_TIMENull() {
                return this.IsNull(this.tableSortedFreightTable.END_TIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEND_TIMENull() {
                this[this.tableSortedFreightTable.END_TIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsARC_DATENull() {
                return this.IsNull(this.tableSortedFreightTable.ARC_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetARC_DATENull() {
                this[this.tableSortedFreightTable.ARC_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATIONNull() {
                return this.IsNull(this.tableSortedFreightTable.STATIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATIONNull() {
                this[this.tableSortedFreightTable.STATIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_CUBENull() {
                return this.IsNull(this.tableSortedFreightTable.ITEM_CUBEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_CUBENull() {
                this[this.tableSortedFreightTable.ITEM_CUBEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSORT_DATENull() {
                return this.IsNull(this.tableSortedFreightTable.SORT_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSORT_DATENull() {
                this[this.tableSortedFreightTable.SORT_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAN_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.SAN_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAN_NUMBERNull() {
                this[this.tableSortedFreightTable.SAN_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELAPSED_SECONDSNull() {
                return this.IsNull(this.tableSortedFreightTable.ELAPSED_SECONDSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELAPSED_SECONDSNull() {
                this[this.tableSortedFreightTable.ELAPSED_SECONDSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOWN_SECONDSNull() {
                return this.IsNull(this.tableSortedFreightTable.DOWN_SECONDSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOWN_SECONDSNull() {
                this[this.tableSortedFreightTable.DOWN_SECONDSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPO_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.PO_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPO_NUMBERNull() {
                this[this.tableSortedFreightTable.PO_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOS_TRACKING_NUMBERNull() {
                return this.IsNull(this.tableSortedFreightTable.OS_TRACKING_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOS_TRACKING_NUMBERNull() {
                this[this.tableSortedFreightTable.OS_TRACKING_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPPING_METHODNull() {
                return this.IsNull(this.tableSortedFreightTable.SHIPPING_METHODColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPPING_METHODNull() {
                this[this.tableSortedFreightTable.SHIPPING_METHODColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMPLE_DATENull() {
                return this.IsNull(this.tableSortedFreightTable.SAMPLE_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMPLE_DATENull() {
                this[this.tableSortedFreightTable.SAMPLE_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StationFreightAssignmentTableRow : System.Data.DataRow {
            
            private StationFreightAssignmentTableDataTable tableStationFreightAssignmentTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StationFreightAssignmentTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStationFreightAssignmentTable = ((StationFreightAssignmentTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkStationID {
                get {
                    try {
                        return ((string)(this[this.tableStationFreightAssignmentTable.WorkStationIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WorkStationID\' in table \'StationFreightAssignmentTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.WorkStationIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightID {
                get {
                    try {
                        return ((string)(this[this.tableStationFreightAssignmentTable.FreightIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FreightID\' in table \'StationFreightAssignmentTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.FreightIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortTypeID {
                get {
                    try {
                        return ((int)(this[this.tableStationFreightAssignmentTable.SortTypeIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SortTypeID\' in table \'StationFreightAssignmentTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.SortTypeIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDSNumber {
                get {
                    try {
                        return ((int)(this[this.tableStationFreightAssignmentTable.TDSNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TDSNumber\' in table \'StationFreightAssignmentTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.TDSNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Client {
                get {
                    try {
                        return ((string)(this[this.tableStationFreightAssignmentTable.ClientColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Client\' in table \'StationFreightAssignmentTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.ClientColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StationNumber {
                get {
                    try {
                        return ((string)(this[this.tableStationFreightAssignmentTable.StationNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StationNumber\' in table \'StationFreightAssignmentTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.StationNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableStationFreightAssignmentTable.ResultColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Result\' in table \'StationFreightAssignmentTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStationFreightAssignmentTable.ResultColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkStationIDNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.WorkStationIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkStationIDNull() {
                this[this.tableStationFreightAssignmentTable.WorkStationIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightIDNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.FreightIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightIDNull() {
                this[this.tableStationFreightAssignmentTable.FreightIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTypeIDNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.SortTypeIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTypeIDNull() {
                this[this.tableStationFreightAssignmentTable.SortTypeIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSNumberNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.TDSNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSNumberNull() {
                this[this.tableStationFreightAssignmentTable.TDSNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.ClientColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNull() {
                this[this.tableStationFreightAssignmentTable.ClientColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationNumberNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.StationNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationNumberNull() {
                this[this.tableStationFreightAssignmentTable.StationNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultNull() {
                return this.IsNull(this.tableStationFreightAssignmentTable.ResultColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultNull() {
                this[this.tableStationFreightAssignmentTable.ResultColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InboundFreightTypeTableRow : System.Data.DataRow {
            
            private InboundFreightTypeTableDataTable tableInboundFreightTypeTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InboundFreightTypeTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInboundFreightTypeTable = ((InboundFreightTypeTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightType {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTypeTable.FreightTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FreightType\' in table \'InboundFreightTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTypeTable.FreightTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableInboundFreightTypeTable.IsActiveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IsActive\' in table \'InboundFreightTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTypeTable.IsActiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableInboundFreightTypeTable.LastUpdatedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LastUpdated\' in table \'InboundFreightTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTypeTable.LastUpdatedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTypeTable.UserIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UserID\' in table \'InboundFreightTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTypeTable.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] RowVersionID {
                get {
                    try {
                        return ((byte[])(this[this.tableInboundFreightTypeTable.RowVersionIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RowVersionID\' in table \'InboundFreightTypeTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTypeTable.RowVersionIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightTypeNull() {
                return this.IsNull(this.tableInboundFreightTypeTable.FreightTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightTypeNull() {
                this[this.tableInboundFreightTypeTable.FreightTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableInboundFreightTypeTable.IsActiveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableInboundFreightTypeTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableInboundFreightTypeTable.LastUpdatedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedNull() {
                this[this.tableInboundFreightTypeTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableInboundFreightTypeTable.UserIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableInboundFreightTypeTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowVersionIDNull() {
                return this.IsNull(this.tableInboundFreightTypeTable.RowVersionIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowVersionIDNull() {
                this[this.tableInboundFreightTypeTable.RowVersionIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InboundFreightSortTypeTableRow : System.Data.DataRow {
            
            private InboundFreightSortTypeTableDataTable tableInboundFreightSortTypeTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InboundFreightSortTypeTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInboundFreightSortTypeTable = ((InboundFreightSortTypeTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightSortTypeTable.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID\' in table \'InboundFreightSortTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightSortTypeTable.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InboundFreightType {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightSortTypeTable.InboundFreightTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InboundFreightType\' in table \'InboundFreightSortTypeTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightSortTypeTable.InboundFreightTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SortType {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightSortTypeTable.SortTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SortType\' in table \'InboundFreightSortTypeTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInboundFreightSortTypeTable.SortTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableInboundFreightSortTypeTable.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableInboundFreightSortTypeTable.IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInboundFreightTypeNull() {
                return this.IsNull(this.tableInboundFreightSortTypeTable.InboundFreightTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInboundFreightTypeNull() {
                this[this.tableInboundFreightSortTypeTable.InboundFreightTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTypeNull() {
                return this.IsNull(this.tableInboundFreightSortTypeTable.SortTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTypeNull() {
                this[this.tableInboundFreightSortTypeTable.SortTypeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FreightTableRowChangeEvent : System.EventArgs {
            
            private FreightTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightTableRowChangeEvent(FreightTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SortedFreightTableRowChangeEvent : System.EventArgs {
            
            private SortedFreightTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SortedFreightTableRowChangeEvent(SortedFreightTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SortedFreightTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StationFreightAssignmentTableRowChangeEvent : System.EventArgs {
            
            private StationFreightAssignmentTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StationFreightAssignmentTableRowChangeEvent(StationFreightAssignmentTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StationFreightAssignmentTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InboundFreightTypeTableRowChangeEvent : System.EventArgs {
            
            private InboundFreightTypeTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTypeTableRowChangeEvent(InboundFreightTypeTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTypeTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InboundFreightSortTypeTableRowChangeEvent : System.EventArgs {
            
            private InboundFreightSortTypeTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightSortTypeTableRowChangeEvent(InboundFreightSortTypeTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightSortTypeTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591