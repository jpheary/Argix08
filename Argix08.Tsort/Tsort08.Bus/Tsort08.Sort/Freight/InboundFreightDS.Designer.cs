//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Tsort.Freight {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InboundFreightDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InboundFreightDS : global::System.Data.DataSet {
        
        private InboundFreightTableDataTable tableInboundFreightTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public InboundFreightDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected InboundFreightDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InboundFreightTable"] != null)) {
                    base.Tables.Add(new InboundFreightTableDataTable(ds.Tables["InboundFreightTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InboundFreightTableDataTable InboundFreightTable {
            get {
                return this.tableInboundFreightTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            InboundFreightDS cln = ((InboundFreightDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InboundFreightTable"] != null)) {
                    base.Tables.Add(new InboundFreightTableDataTable(ds.Tables["InboundFreightTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableInboundFreightTable = ((InboundFreightTableDataTable)(base.Tables["InboundFreightTable"]));
            if ((initTable == true)) {
                if ((this.tableInboundFreightTable != null)) {
                    this.tableInboundFreightTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "InboundFreightDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InboundFreightDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInboundFreightTable = new InboundFreightTableDataTable();
            base.Tables.Add(this.tableInboundFreightTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInboundFreightTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InboundFreightDS ds = new InboundFreightDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void InboundFreightTableRowChangeEventHandler(object sender, InboundFreightTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InboundFreightTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFreightID;
            
            private global::System.Data.DataColumn columnFreightType;
            
            private global::System.Data.DataColumn columnCurrentLocation;
            
            private global::System.Data.DataColumn columnTDSNumber;
            
            private global::System.Data.DataColumn columnTrailerNumber;
            
            private global::System.Data.DataColumn columnStorageTrailerNumber;
            
            private global::System.Data.DataColumn columnClientNumber;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnShipperNumber;
            
            private global::System.Data.DataColumn columnShipperName;
            
            private global::System.Data.DataColumn columnPickupID;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupNumber;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCartons;
            
            private global::System.Data.DataColumn columnPallets;
            
            private global::System.Data.DataColumn columnCarrierNumber;
            
            private global::System.Data.DataColumn columnDriverNumber;
            
            private global::System.Data.DataColumn columnFloorStatus;
            
            private global::System.Data.DataColumn columnSealNumber;
            
            private global::System.Data.DataColumn columnUnloadedStatus;
            
            private global::System.Data.DataColumn columnVendorKey;
            
            private global::System.Data.DataColumn columnReceiveDate;
            
            private global::System.Data.DataColumn columnTerminalID;
            
            private global::System.Data.DataColumn columnCubeRatio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTableDataTable() {
                this.TableName = "InboundFreightTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InboundFreightTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InboundFreightTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightIDColumn {
                get {
                    return this.columnFreightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightTypeColumn {
                get {
                    return this.columnFreightType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentLocationColumn {
                get {
                    return this.columnCurrentLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSNumberColumn {
                get {
                    return this.columnTDSNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrailerNumberColumn {
                get {
                    return this.columnTrailerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageTrailerNumberColumn {
                get {
                    return this.columnStorageTrailerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperNumberColumn {
                get {
                    return this.columnShipperNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperNameColumn {
                get {
                    return this.columnShipperName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupIDColumn {
                get {
                    return this.columnPickupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsColumn {
                get {
                    return this.columnCartons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PalletsColumn {
                get {
                    return this.columnPallets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarrierNumberColumn {
                get {
                    return this.columnCarrierNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DriverNumberColumn {
                get {
                    return this.columnDriverNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloorStatusColumn {
                get {
                    return this.columnFloorStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SealNumberColumn {
                get {
                    return this.columnSealNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnloadedStatusColumn {
                get {
                    return this.columnUnloadedStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveDateColumn {
                get {
                    return this.columnReceiveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CubeRatioColumn {
                get {
                    return this.columnCubeRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTableRow this[int index] {
                get {
                    return ((InboundFreightTableRow)(this.Rows[index]));
                }
            }
            
            public event InboundFreightTableRowChangeEventHandler InboundFreightTableRowChanging;
            
            public event InboundFreightTableRowChangeEventHandler InboundFreightTableRowChanged;
            
            public event InboundFreightTableRowChangeEventHandler InboundFreightTableRowDeleting;
            
            public event InboundFreightTableRowChangeEventHandler InboundFreightTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInboundFreightTableRow(InboundFreightTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTableRow AddInboundFreightTableRow(
                        string FreightID, 
                        string FreightType, 
                        string CurrentLocation, 
                        int TDSNumber, 
                        string TrailerNumber, 
                        string StorageTrailerNumber, 
                        string ClientNumber, 
                        string ClientName, 
                        string ShipperNumber, 
                        string ShipperName, 
                        string PickupID, 
                        string PickupDate, 
                        string PickupNumber, 
                        string Status, 
                        int Cartons, 
                        int Pallets, 
                        int CarrierNumber, 
                        int DriverNumber, 
                        string FloorStatus, 
                        string SealNumber, 
                        string UnloadedStatus, 
                        string VendorKey, 
                        string ReceiveDate, 
                        int TerminalID, 
                        decimal CubeRatio) {
                InboundFreightTableRow rowInboundFreightTableRow = ((InboundFreightTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FreightID,
                        FreightType,
                        CurrentLocation,
                        TDSNumber,
                        TrailerNumber,
                        StorageTrailerNumber,
                        ClientNumber,
                        ClientName,
                        ShipperNumber,
                        ShipperName,
                        PickupID,
                        PickupDate,
                        PickupNumber,
                        Status,
                        Cartons,
                        Pallets,
                        CarrierNumber,
                        DriverNumber,
                        FloorStatus,
                        SealNumber,
                        UnloadedStatus,
                        VendorKey,
                        ReceiveDate,
                        TerminalID,
                        CubeRatio};
                rowInboundFreightTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInboundFreightTableRow);
                return rowInboundFreightTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InboundFreightTableDataTable cln = ((InboundFreightTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InboundFreightTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFreightID = base.Columns["FreightID"];
                this.columnFreightType = base.Columns["FreightType"];
                this.columnCurrentLocation = base.Columns["CurrentLocation"];
                this.columnTDSNumber = base.Columns["TDSNumber"];
                this.columnTrailerNumber = base.Columns["TrailerNumber"];
                this.columnStorageTrailerNumber = base.Columns["StorageTrailerNumber"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnShipperNumber = base.Columns["ShipperNumber"];
                this.columnShipperName = base.Columns["ShipperName"];
                this.columnPickupID = base.Columns["PickupID"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnStatus = base.Columns["Status"];
                this.columnCartons = base.Columns["Cartons"];
                this.columnPallets = base.Columns["Pallets"];
                this.columnCarrierNumber = base.Columns["CarrierNumber"];
                this.columnDriverNumber = base.Columns["DriverNumber"];
                this.columnFloorStatus = base.Columns["FloorStatus"];
                this.columnSealNumber = base.Columns["SealNumber"];
                this.columnUnloadedStatus = base.Columns["UnloadedStatus"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnReceiveDate = base.Columns["ReceiveDate"];
                this.columnTerminalID = base.Columns["TerminalID"];
                this.columnCubeRatio = base.Columns["CubeRatio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFreightID = new global::System.Data.DataColumn("FreightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightID);
                this.columnFreightType = new global::System.Data.DataColumn("FreightType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightType);
                this.columnCurrentLocation = new global::System.Data.DataColumn("CurrentLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentLocation);
                this.columnTDSNumber = new global::System.Data.DataColumn("TDSNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSNumber);
                this.columnTrailerNumber = new global::System.Data.DataColumn("TrailerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrailerNumber);
                this.columnStorageTrailerNumber = new global::System.Data.DataColumn("StorageTrailerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageTrailerNumber);
                this.columnClientNumber = new global::System.Data.DataColumn("ClientNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnShipperNumber = new global::System.Data.DataColumn("ShipperNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperNumber);
                this.columnShipperName = new global::System.Data.DataColumn("ShipperName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperName);
                this.columnPickupID = new global::System.Data.DataColumn("PickupID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupID);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new global::System.Data.DataColumn("PickupNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCartons = new global::System.Data.DataColumn("Cartons", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartons);
                this.columnPallets = new global::System.Data.DataColumn("Pallets", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPallets);
                this.columnCarrierNumber = new global::System.Data.DataColumn("CarrierNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarrierNumber);
                this.columnDriverNumber = new global::System.Data.DataColumn("DriverNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverNumber);
                this.columnFloorStatus = new global::System.Data.DataColumn("FloorStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloorStatus);
                this.columnSealNumber = new global::System.Data.DataColumn("SealNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSealNumber);
                this.columnUnloadedStatus = new global::System.Data.DataColumn("UnloadedStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnloadedStatus);
                this.columnVendorKey = new global::System.Data.DataColumn("VendorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnReceiveDate = new global::System.Data.DataColumn("ReceiveDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDate);
                this.columnTerminalID = new global::System.Data.DataColumn("TerminalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminalID);
                this.columnCubeRatio = new global::System.Data.DataColumn("CubeRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCubeRatio);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTableRow NewInboundFreightTableRow() {
                return ((InboundFreightTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InboundFreightTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InboundFreightTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InboundFreightTableRowChanged != null)) {
                    this.InboundFreightTableRowChanged(this, new InboundFreightTableRowChangeEvent(((InboundFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InboundFreightTableRowChanging != null)) {
                    this.InboundFreightTableRowChanging(this, new InboundFreightTableRowChangeEvent(((InboundFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InboundFreightTableRowDeleted != null)) {
                    this.InboundFreightTableRowDeleted(this, new InboundFreightTableRowChangeEvent(((InboundFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InboundFreightTableRowDeleting != null)) {
                    this.InboundFreightTableRowDeleting(this, new InboundFreightTableRowChangeEvent(((InboundFreightTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInboundFreightTableRow(InboundFreightTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InboundFreightDS ds = new InboundFreightDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InboundFreightTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InboundFreightTableRow : global::System.Data.DataRow {
            
            private InboundFreightTableDataTable tableInboundFreightTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InboundFreightTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInboundFreightTable = ((InboundFreightTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightID {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.FreightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightID\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.FreightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightType {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.FreightTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightType\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.FreightTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentLocation {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.CurrentLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentLocation\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.CurrentLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDSNumber {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightTable.TDSNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.TDSNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.TrailerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrailerNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.TrailerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageTrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.StorageTrailerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StorageTrailerNumber\' in table \'InboundFreightTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.StorageTrailerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.ClientNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.ClientNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperNumber {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.ShipperNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.ShipperNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperName {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.ShipperNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperName\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.ShipperNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupID {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.PickupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupID\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.PickupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupDate {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupNumber {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.PickupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.PickupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cartons {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightTable.CartonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cartons\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.CartonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pallets {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightTable.PalletsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pallets\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.PalletsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CarrierNumber {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightTable.CarrierNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarrierNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.CarrierNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DriverNumber {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightTable.DriverNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.DriverNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FloorStatus {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.FloorStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FloorStatus\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.FloorStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SealNumber {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.SealNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SealNumber\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.SealNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnloadedStatus {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.UnloadedStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnloadedStatus\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.UnloadedStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.VendorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.VendorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiveDate {
                get {
                    try {
                        return ((string)(this[this.tableInboundFreightTable.ReceiveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiveDate\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.ReceiveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableInboundFreightTable.TerminalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerminalID\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.TerminalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CubeRatio {
                get {
                    try {
                        return ((decimal)(this[this.tableInboundFreightTable.CubeRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CubeRatio\' in table \'InboundFreightTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInboundFreightTable.CubeRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightIDNull() {
                return this.IsNull(this.tableInboundFreightTable.FreightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightIDNull() {
                this[this.tableInboundFreightTable.FreightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightTypeNull() {
                return this.IsNull(this.tableInboundFreightTable.FreightTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightTypeNull() {
                this[this.tableInboundFreightTable.FreightTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentLocationNull() {
                return this.IsNull(this.tableInboundFreightTable.CurrentLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentLocationNull() {
                this[this.tableInboundFreightTable.CurrentLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.TDSNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSNumberNull() {
                this[this.tableInboundFreightTable.TDSNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrailerNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.TrailerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrailerNumberNull() {
                this[this.tableInboundFreightTable.TrailerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageTrailerNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.StorageTrailerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageTrailerNumberNull() {
                this[this.tableInboundFreightTable.StorageTrailerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.ClientNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableInboundFreightTable.ClientNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableInboundFreightTable.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableInboundFreightTable.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.ShipperNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNumberNull() {
                this[this.tableInboundFreightTable.ShipperNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNameNull() {
                return this.IsNull(this.tableInboundFreightTable.ShipperNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNameNull() {
                this[this.tableInboundFreightTable.ShipperNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupIDNull() {
                return this.IsNull(this.tableInboundFreightTable.PickupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupIDNull() {
                this[this.tableInboundFreightTable.PickupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableInboundFreightTable.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableInboundFreightTable.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.PickupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tableInboundFreightTable.PickupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableInboundFreightTable.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableInboundFreightTable.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsNull() {
                return this.IsNull(this.tableInboundFreightTable.CartonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsNull() {
                this[this.tableInboundFreightTable.CartonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPalletsNull() {
                return this.IsNull(this.tableInboundFreightTable.PalletsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPalletsNull() {
                this[this.tableInboundFreightTable.PalletsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarrierNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.CarrierNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarrierNumberNull() {
                this[this.tableInboundFreightTable.CarrierNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDriverNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.DriverNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDriverNumberNull() {
                this[this.tableInboundFreightTable.DriverNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloorStatusNull() {
                return this.IsNull(this.tableInboundFreightTable.FloorStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloorStatusNull() {
                this[this.tableInboundFreightTable.FloorStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSealNumberNull() {
                return this.IsNull(this.tableInboundFreightTable.SealNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSealNumberNull() {
                this[this.tableInboundFreightTable.SealNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnloadedStatusNull() {
                return this.IsNull(this.tableInboundFreightTable.UnloadedStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnloadedStatusNull() {
                this[this.tableInboundFreightTable.UnloadedStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableInboundFreightTable.VendorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tableInboundFreightTable.VendorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveDateNull() {
                return this.IsNull(this.tableInboundFreightTable.ReceiveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveDateNull() {
                this[this.tableInboundFreightTable.ReceiveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableInboundFreightTable.TerminalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalIDNull() {
                this[this.tableInboundFreightTable.TerminalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCubeRatioNull() {
                return this.IsNull(this.tableInboundFreightTable.CubeRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCubeRatioNull() {
                this[this.tableInboundFreightTable.CubeRatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InboundFreightTableRowChangeEvent : global::System.EventArgs {
            
            private InboundFreightTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTableRowChangeEvent(InboundFreightTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InboundFreightTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591