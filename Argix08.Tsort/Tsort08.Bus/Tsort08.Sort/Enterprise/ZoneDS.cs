//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Enterprise {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ZoneDS : DataSet {
        
        private ZoneTableDataTable tableZoneTable;
        
        private ZoneChangeHistoryTableDataTable tableZoneChangeHistoryTable;
        
        public ZoneDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ZoneDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ZoneTable"] != null)) {
                    this.Tables.Add(new ZoneTableDataTable(ds.Tables["ZoneTable"]));
                }
                if ((ds.Tables["ZoneChangeHistoryTable"] != null)) {
                    this.Tables.Add(new ZoneChangeHistoryTableDataTable(ds.Tables["ZoneChangeHistoryTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZoneTableDataTable ZoneTable {
            get {
                return this.tableZoneTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZoneChangeHistoryTableDataTable ZoneChangeHistoryTable {
            get {
                return this.tableZoneChangeHistoryTable;
            }
        }
        
        public override DataSet Clone() {
            ZoneDS cln = ((ZoneDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ZoneTable"] != null)) {
                this.Tables.Add(new ZoneTableDataTable(ds.Tables["ZoneTable"]));
            }
            if ((ds.Tables["ZoneChangeHistoryTable"] != null)) {
                this.Tables.Add(new ZoneChangeHistoryTableDataTable(ds.Tables["ZoneChangeHistoryTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableZoneTable = ((ZoneTableDataTable)(this.Tables["ZoneTable"]));
            if ((this.tableZoneTable != null)) {
                this.tableZoneTable.InitVars();
            }
            this.tableZoneChangeHistoryTable = ((ZoneChangeHistoryTableDataTable)(this.Tables["ZoneChangeHistoryTable"]));
            if ((this.tableZoneChangeHistoryTable != null)) {
                this.tableZoneChangeHistoryTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ZoneDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ZoneDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableZoneTable = new ZoneTableDataTable();
            this.Tables.Add(this.tableZoneTable);
            this.tableZoneChangeHistoryTable = new ZoneChangeHistoryTableDataTable();
            this.Tables.Add(this.tableZoneChangeHistoryTable);
        }
        
        private bool ShouldSerializeZoneTable() {
            return false;
        }
        
        private bool ShouldSerializeZoneChangeHistoryTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ZoneTableRowChangeEventHandler(object sender, ZoneTableRowChangeEvent e);
        
        public delegate void ZoneChangeHistoryTableRowChangeEventHandler(object sender, ZoneChangeHistoryTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZoneTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCODE;
            
            private DataColumn columnTYPE;
            
            private DataColumn columnTRAILER_LOAD_NUM;
            
            private DataColumn columnLABEL_TYPE;
            
            private DataColumn columnLANE;
            
            private DataColumn columnSTATUS;
            
            private DataColumn columnRB_TL_NUMBER;
            
            private DataColumn columnAgentID;
            
            private DataColumn columnAGENT_NUMBER;
            
            private DataColumn columnDESCRIPTION;
            
            private DataColumn columnLOCATION;
            
            private DataColumn columnSortCenterID;
            
            private DataColumn columnSHIP_DATE;
            
            private DataColumn columnCAN_BE_CLOSED;
            
            private DataColumn columnOSDStatus;
            
            private DataColumn columnLABELTYPE;
            
            private DataColumn columnLANE_SMALL_SORT;
            
            private DataColumn columnIsMain;
            
            private DataColumn columnShipScdeToClose;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            internal ZoneTableDataTable() : 
                    base("ZoneTable") {
                this.InitClass();
            }
            
            internal ZoneTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            internal DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            internal DataColumn TRAILER_LOAD_NUMColumn {
                get {
                    return this.columnTRAILER_LOAD_NUM;
                }
            }
            
            internal DataColumn LABEL_TYPEColumn {
                get {
                    return this.columnLABEL_TYPE;
                }
            }
            
            internal DataColumn LANEColumn {
                get {
                    return this.columnLANE;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            internal DataColumn RB_TL_NUMBERColumn {
                get {
                    return this.columnRB_TL_NUMBER;
                }
            }
            
            internal DataColumn AgentIDColumn {
                get {
                    return this.columnAgentID;
                }
            }
            
            internal DataColumn AGENT_NUMBERColumn {
                get {
                    return this.columnAGENT_NUMBER;
                }
            }
            
            internal DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            internal DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            internal DataColumn SortCenterIDColumn {
                get {
                    return this.columnSortCenterID;
                }
            }
            
            internal DataColumn SHIP_DATEColumn {
                get {
                    return this.columnSHIP_DATE;
                }
            }
            
            internal DataColumn CAN_BE_CLOSEDColumn {
                get {
                    return this.columnCAN_BE_CLOSED;
                }
            }
            
            internal DataColumn OSDStatusColumn {
                get {
                    return this.columnOSDStatus;
                }
            }
            
            internal DataColumn LABELTYPEColumn {
                get {
                    return this.columnLABELTYPE;
                }
            }
            
            internal DataColumn LANE_SMALL_SORTColumn {
                get {
                    return this.columnLANE_SMALL_SORT;
                }
            }
            
            internal DataColumn IsMainColumn {
                get {
                    return this.columnIsMain;
                }
            }
            
            internal DataColumn ShipScdeToCloseColumn {
                get {
                    return this.columnShipScdeToClose;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            public ZoneTableRow this[int index] {
                get {
                    return ((ZoneTableRow)(this.Rows[index]));
                }
            }
            
            public event ZoneTableRowChangeEventHandler ZoneTableRowChanged;
            
            public event ZoneTableRowChangeEventHandler ZoneTableRowChanging;
            
            public event ZoneTableRowChangeEventHandler ZoneTableRowDeleted;
            
            public event ZoneTableRowChangeEventHandler ZoneTableRowDeleting;
            
            public void AddZoneTableRow(ZoneTableRow row) {
                this.Rows.Add(row);
            }
            
            public ZoneTableRow AddZoneTableRow(
                        string CODE, 
                        string TYPE, 
                        string TRAILER_LOAD_NUM, 
                        string LABEL_TYPE, 
                        string LANE, 
                        string STATUS, 
                        string RB_TL_NUMBER, 
                        int AgentID, 
                        string AGENT_NUMBER, 
                        string DESCRIPTION, 
                        string LOCATION, 
                        int SortCenterID, 
                        System.DateTime SHIP_DATE, 
                        string CAN_BE_CLOSED, 
                        string OSDStatus, 
                        string LABELTYPE, 
                        string LANE_SMALL_SORT, 
                        short IsMain, 
                        short ShipScdeToClose, 
                        System.DateTime LastUpdated, 
                        string UserID) {
                ZoneTableRow rowZoneTableRow = ((ZoneTableRow)(this.NewRow()));
                rowZoneTableRow.ItemArray = new object[] {
                        CODE,
                        TYPE,
                        TRAILER_LOAD_NUM,
                        LABEL_TYPE,
                        LANE,
                        STATUS,
                        RB_TL_NUMBER,
                        AgentID,
                        AGENT_NUMBER,
                        DESCRIPTION,
                        LOCATION,
                        SortCenterID,
                        SHIP_DATE,
                        CAN_BE_CLOSED,
                        OSDStatus,
                        LABELTYPE,
                        LANE_SMALL_SORT,
                        IsMain,
                        ShipScdeToClose,
                        LastUpdated,
                        UserID};
                this.Rows.Add(rowZoneTableRow);
                return rowZoneTableRow;
            }
            
            public ZoneTableRow FindByCODETYPE(string CODE, string TYPE) {
                return ((ZoneTableRow)(this.Rows.Find(new object[] {
                            CODE,
                            TYPE})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ZoneTableDataTable cln = ((ZoneTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ZoneTableDataTable();
            }
            
            internal void InitVars() {
                this.columnCODE = this.Columns["CODE"];
                this.columnTYPE = this.Columns["TYPE"];
                this.columnTRAILER_LOAD_NUM = this.Columns["TRAILER_LOAD_NUM"];
                this.columnLABEL_TYPE = this.Columns["LABEL_TYPE"];
                this.columnLANE = this.Columns["LANE"];
                this.columnSTATUS = this.Columns["STATUS"];
                this.columnRB_TL_NUMBER = this.Columns["RB_TL_NUMBER"];
                this.columnAgentID = this.Columns["AgentID"];
                this.columnAGENT_NUMBER = this.Columns["AGENT_NUMBER"];
                this.columnDESCRIPTION = this.Columns["DESCRIPTION"];
                this.columnLOCATION = this.Columns["LOCATION"];
                this.columnSortCenterID = this.Columns["SortCenterID"];
                this.columnSHIP_DATE = this.Columns["SHIP_DATE"];
                this.columnCAN_BE_CLOSED = this.Columns["CAN_BE_CLOSED"];
                this.columnOSDStatus = this.Columns["OSDStatus"];
                this.columnLABELTYPE = this.Columns["LABELTYPE"];
                this.columnLANE_SMALL_SORT = this.Columns["LANE_SMALL_SORT"];
                this.columnIsMain = this.Columns["IsMain"];
                this.columnShipScdeToClose = this.Columns["ShipScdeToClose"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
            }
            
            private void InitClass() {
                this.columnCODE = new DataColumn("CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODE);
                this.columnTYPE = new DataColumn("TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTYPE);
                this.columnTRAILER_LOAD_NUM = new DataColumn("TRAILER_LOAD_NUM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTRAILER_LOAD_NUM);
                this.columnLABEL_TYPE = new DataColumn("LABEL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLABEL_TYPE);
                this.columnLANE = new DataColumn("LANE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLANE);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
                this.columnRB_TL_NUMBER = new DataColumn("RB_TL_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRB_TL_NUMBER);
                this.columnAgentID = new DataColumn("AgentID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgentID);
                this.columnAGENT_NUMBER = new DataColumn("AGENT_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAGENT_NUMBER);
                this.columnDESCRIPTION = new DataColumn("DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIPTION);
                this.columnLOCATION = new DataColumn("LOCATION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLOCATION);
                this.columnSortCenterID = new DataColumn("SortCenterID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenterID);
                this.columnSHIP_DATE = new DataColumn("SHIP_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSHIP_DATE);
                this.columnCAN_BE_CLOSED = new DataColumn("CAN_BE_CLOSED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCAN_BE_CLOSED);
                this.columnOSDStatus = new DataColumn("OSDStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOSDStatus);
                this.columnLABELTYPE = new DataColumn("LABELTYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLABELTYPE);
                this.columnLANE_SMALL_SORT = new DataColumn("LANE_SMALL_SORT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLANE_SMALL_SORT);
                this.columnIsMain = new DataColumn("IsMain", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsMain);
                this.columnShipScdeToClose = new DataColumn("ShipScdeToClose", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipScdeToClose);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.Constraints.Add(new UniqueConstraint("ZoneDSKey1", new DataColumn[] {
                                this.columnCODE,
                                this.columnTYPE}, true));
                this.columnCODE.AllowDBNull = false;
                this.columnTYPE.AllowDBNull = false;
            }
            
            public ZoneTableRow NewZoneTableRow() {
                return ((ZoneTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ZoneTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ZoneTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZoneTableRowChanged != null)) {
                    this.ZoneTableRowChanged(this, new ZoneTableRowChangeEvent(((ZoneTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZoneTableRowChanging != null)) {
                    this.ZoneTableRowChanging(this, new ZoneTableRowChangeEvent(((ZoneTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZoneTableRowDeleted != null)) {
                    this.ZoneTableRowDeleted(this, new ZoneTableRowChangeEvent(((ZoneTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZoneTableRowDeleting != null)) {
                    this.ZoneTableRowDeleting(this, new ZoneTableRowChangeEvent(((ZoneTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveZoneTableRow(ZoneTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZoneTableRow : DataRow {
            
            private ZoneTableDataTable tableZoneTable;
            
            internal ZoneTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableZoneTable = ((ZoneTableDataTable)(this.Table));
            }
            
            public string CODE {
                get {
                    return ((string)(this[this.tableZoneTable.CODEColumn]));
                }
                set {
                    this[this.tableZoneTable.CODEColumn] = value;
                }
            }
            
            public string TYPE {
                get {
                    return ((string)(this[this.tableZoneTable.TYPEColumn]));
                }
                set {
                    this[this.tableZoneTable.TYPEColumn] = value;
                }
            }
            
            public string TRAILER_LOAD_NUM {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.TRAILER_LOAD_NUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.TRAILER_LOAD_NUMColumn] = value;
                }
            }
            
            public string LABEL_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.LABEL_TYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.LABEL_TYPEColumn] = value;
                }
            }
            
            public string LANE {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.LANEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.LANEColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.STATUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.STATUSColumn] = value;
                }
            }
            
            public string RB_TL_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.RB_TL_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.RB_TL_NUMBERColumn] = value;
                }
            }
            
            public int AgentID {
                get {
                    try {
                        return ((int)(this[this.tableZoneTable.AgentIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.AgentIDColumn] = value;
                }
            }
            
            public string AGENT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.AGENT_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.AGENT_NUMBERColumn] = value;
                }
            }
            
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.DESCRIPTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.DESCRIPTIONColumn] = value;
                }
            }
            
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.LOCATIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.LOCATIONColumn] = value;
                }
            }
            
            public int SortCenterID {
                get {
                    try {
                        return ((int)(this[this.tableZoneTable.SortCenterIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.SortCenterIDColumn] = value;
                }
            }
            
            public System.DateTime SHIP_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableZoneTable.SHIP_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.SHIP_DATEColumn] = value;
                }
            }
            
            public string CAN_BE_CLOSED {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.CAN_BE_CLOSEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.CAN_BE_CLOSEDColumn] = value;
                }
            }
            
            public string OSDStatus {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.OSDStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.OSDStatusColumn] = value;
                }
            }
            
            public string LABELTYPE {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.LABELTYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.LABELTYPEColumn] = value;
                }
            }
            
            public string LANE_SMALL_SORT {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.LANE_SMALL_SORTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.LANE_SMALL_SORTColumn] = value;
                }
            }
            
            public short IsMain {
                get {
                    try {
                        return ((short)(this[this.tableZoneTable.IsMainColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.IsMainColumn] = value;
                }
            }
            
            public short ShipScdeToClose {
                get {
                    try {
                        return ((short)(this[this.tableZoneTable.ShipScdeToCloseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.ShipScdeToCloseColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableZoneTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableZoneTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneTable.UserIDColumn] = value;
                }
            }
            
            public bool IsTRAILER_LOAD_NUMNull() {
                return this.IsNull(this.tableZoneTable.TRAILER_LOAD_NUMColumn);
            }
            
            public void SetTRAILER_LOAD_NUMNull() {
                this[this.tableZoneTable.TRAILER_LOAD_NUMColumn] = System.Convert.DBNull;
            }
            
            public bool IsLABEL_TYPENull() {
                return this.IsNull(this.tableZoneTable.LABEL_TYPEColumn);
            }
            
            public void SetLABEL_TYPENull() {
                this[this.tableZoneTable.LABEL_TYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsLANENull() {
                return this.IsNull(this.tableZoneTable.LANEColumn);
            }
            
            public void SetLANENull() {
                this[this.tableZoneTable.LANEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableZoneTable.STATUSColumn);
            }
            
            public void SetSTATUSNull() {
                this[this.tableZoneTable.STATUSColumn] = System.Convert.DBNull;
            }
            
            public bool IsRB_TL_NUMBERNull() {
                return this.IsNull(this.tableZoneTable.RB_TL_NUMBERColumn);
            }
            
            public void SetRB_TL_NUMBERNull() {
                this[this.tableZoneTable.RB_TL_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsAgentIDNull() {
                return this.IsNull(this.tableZoneTable.AgentIDColumn);
            }
            
            public void SetAgentIDNull() {
                this[this.tableZoneTable.AgentIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsAGENT_NUMBERNull() {
                return this.IsNull(this.tableZoneTable.AGENT_NUMBERColumn);
            }
            
            public void SetAGENT_NUMBERNull() {
                this[this.tableZoneTable.AGENT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableZoneTable.DESCRIPTIONColumn);
            }
            
            public void SetDESCRIPTIONNull() {
                this[this.tableZoneTable.DESCRIPTIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableZoneTable.LOCATIONColumn);
            }
            
            public void SetLOCATIONNull() {
                this[this.tableZoneTable.LOCATIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortCenterIDNull() {
                return this.IsNull(this.tableZoneTable.SortCenterIDColumn);
            }
            
            public void SetSortCenterIDNull() {
                this[this.tableZoneTable.SortCenterIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSHIP_DATENull() {
                return this.IsNull(this.tableZoneTable.SHIP_DATEColumn);
            }
            
            public void SetSHIP_DATENull() {
                this[this.tableZoneTable.SHIP_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCAN_BE_CLOSEDNull() {
                return this.IsNull(this.tableZoneTable.CAN_BE_CLOSEDColumn);
            }
            
            public void SetCAN_BE_CLOSEDNull() {
                this[this.tableZoneTable.CAN_BE_CLOSEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsOSDStatusNull() {
                return this.IsNull(this.tableZoneTable.OSDStatusColumn);
            }
            
            public void SetOSDStatusNull() {
                this[this.tableZoneTable.OSDStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsLABELTYPENull() {
                return this.IsNull(this.tableZoneTable.LABELTYPEColumn);
            }
            
            public void SetLABELTYPENull() {
                this[this.tableZoneTable.LABELTYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsLANE_SMALL_SORTNull() {
                return this.IsNull(this.tableZoneTable.LANE_SMALL_SORTColumn);
            }
            
            public void SetLANE_SMALL_SORTNull() {
                this[this.tableZoneTable.LANE_SMALL_SORTColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsMainNull() {
                return this.IsNull(this.tableZoneTable.IsMainColumn);
            }
            
            public void SetIsMainNull() {
                this[this.tableZoneTable.IsMainColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipScdeToCloseNull() {
                return this.IsNull(this.tableZoneTable.ShipScdeToCloseColumn);
            }
            
            public void SetShipScdeToCloseNull() {
                this[this.tableZoneTable.ShipScdeToCloseColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableZoneTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableZoneTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableZoneTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableZoneTable.UserIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZoneTableRowChangeEvent : EventArgs {
            
            private ZoneTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public ZoneTableRowChangeEvent(ZoneTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ZoneTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZoneChangeHistoryTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCODE;
            
            private DataColumn columnCHANGE_DATE;
            
            private DataColumn columnCHANGE_TIME;
            
            private DataColumn columnTYPE;
            
            private DataColumn columnTRAILER_LOAD_NUM;
            
            private DataColumn columnNEW_TR_LOAD_NUM;
            
            private DataColumn columnRB_TR_LOAD_NUM;
            
            private DataColumn columnLANE;
            
            private DataColumn columnNEW_LANE;
            
            private DataColumn columnRB_DATE;
            
            private DataColumn columnRB_TIME;
            
            private DataColumn columnLANE_SMALL_SORT;
            
            private DataColumn columnNEWLANE_SMALL_SORT;
            
            private DataColumn columnSTATUS;
            
            private DataColumn columnDESCRIPTION;
            
            internal ZoneChangeHistoryTableDataTable() : 
                    base("ZoneChangeHistoryTable") {
                this.InitClass();
            }
            
            internal ZoneChangeHistoryTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            internal DataColumn CHANGE_DATEColumn {
                get {
                    return this.columnCHANGE_DATE;
                }
            }
            
            internal DataColumn CHANGE_TIMEColumn {
                get {
                    return this.columnCHANGE_TIME;
                }
            }
            
            internal DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            internal DataColumn TRAILER_LOAD_NUMColumn {
                get {
                    return this.columnTRAILER_LOAD_NUM;
                }
            }
            
            internal DataColumn NEW_TR_LOAD_NUMColumn {
                get {
                    return this.columnNEW_TR_LOAD_NUM;
                }
            }
            
            internal DataColumn RB_TR_LOAD_NUMColumn {
                get {
                    return this.columnRB_TR_LOAD_NUM;
                }
            }
            
            internal DataColumn LANEColumn {
                get {
                    return this.columnLANE;
                }
            }
            
            internal DataColumn NEW_LANEColumn {
                get {
                    return this.columnNEW_LANE;
                }
            }
            
            internal DataColumn RB_DATEColumn {
                get {
                    return this.columnRB_DATE;
                }
            }
            
            internal DataColumn RB_TIMEColumn {
                get {
                    return this.columnRB_TIME;
                }
            }
            
            internal DataColumn LANE_SMALL_SORTColumn {
                get {
                    return this.columnLANE_SMALL_SORT;
                }
            }
            
            internal DataColumn NEWLANE_SMALL_SORTColumn {
                get {
                    return this.columnNEWLANE_SMALL_SORT;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            internal DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            public ZoneChangeHistoryTableRow this[int index] {
                get {
                    return ((ZoneChangeHistoryTableRow)(this.Rows[index]));
                }
            }
            
            public event ZoneChangeHistoryTableRowChangeEventHandler ZoneChangeHistoryTableRowChanged;
            
            public event ZoneChangeHistoryTableRowChangeEventHandler ZoneChangeHistoryTableRowChanging;
            
            public event ZoneChangeHistoryTableRowChangeEventHandler ZoneChangeHistoryTableRowDeleted;
            
            public event ZoneChangeHistoryTableRowChangeEventHandler ZoneChangeHistoryTableRowDeleting;
            
            public void AddZoneChangeHistoryTableRow(ZoneChangeHistoryTableRow row) {
                this.Rows.Add(row);
            }
            
            public ZoneChangeHistoryTableRow AddZoneChangeHistoryTableRow(string CODE, System.DateTime CHANGE_DATE, System.DateTime CHANGE_TIME, string TYPE, string TRAILER_LOAD_NUM, string NEW_TR_LOAD_NUM, string RB_TR_LOAD_NUM, string LANE, string NEW_LANE, System.DateTime RB_DATE, System.DateTime RB_TIME, string LANE_SMALL_SORT, string NEWLANE_SMALL_SORT, string STATUS, string DESCRIPTION) {
                ZoneChangeHistoryTableRow rowZoneChangeHistoryTableRow = ((ZoneChangeHistoryTableRow)(this.NewRow()));
                rowZoneChangeHistoryTableRow.ItemArray = new object[] {
                        CODE,
                        CHANGE_DATE,
                        CHANGE_TIME,
                        TYPE,
                        TRAILER_LOAD_NUM,
                        NEW_TR_LOAD_NUM,
                        RB_TR_LOAD_NUM,
                        LANE,
                        NEW_LANE,
                        RB_DATE,
                        RB_TIME,
                        LANE_SMALL_SORT,
                        NEWLANE_SMALL_SORT,
                        STATUS,
                        DESCRIPTION};
                this.Rows.Add(rowZoneChangeHistoryTableRow);
                return rowZoneChangeHistoryTableRow;
            }
            
            public ZoneChangeHistoryTableRow FindByCODECHANGE_DATECHANGE_TIME(string CODE, System.DateTime CHANGE_DATE, System.DateTime CHANGE_TIME) {
                return ((ZoneChangeHistoryTableRow)(this.Rows.Find(new object[] {
                            CODE,
                            CHANGE_DATE,
                            CHANGE_TIME})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ZoneChangeHistoryTableDataTable cln = ((ZoneChangeHistoryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ZoneChangeHistoryTableDataTable();
            }
            
            internal void InitVars() {
                this.columnCODE = this.Columns["CODE"];
                this.columnCHANGE_DATE = this.Columns["CHANGE_DATE"];
                this.columnCHANGE_TIME = this.Columns["CHANGE_TIME"];
                this.columnTYPE = this.Columns["TYPE"];
                this.columnTRAILER_LOAD_NUM = this.Columns["TRAILER_LOAD_NUM"];
                this.columnNEW_TR_LOAD_NUM = this.Columns["NEW_TR_LOAD_NUM"];
                this.columnRB_TR_LOAD_NUM = this.Columns["RB_TR_LOAD_NUM"];
                this.columnLANE = this.Columns["LANE"];
                this.columnNEW_LANE = this.Columns["NEW_LANE"];
                this.columnRB_DATE = this.Columns["RB_DATE"];
                this.columnRB_TIME = this.Columns["RB_TIME"];
                this.columnLANE_SMALL_SORT = this.Columns["LANE_SMALL_SORT"];
                this.columnNEWLANE_SMALL_SORT = this.Columns["NEWLANE_SMALL_SORT"];
                this.columnSTATUS = this.Columns["STATUS"];
                this.columnDESCRIPTION = this.Columns["DESCRIPTION"];
            }
            
            private void InitClass() {
                this.columnCODE = new DataColumn("CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODE);
                this.columnCHANGE_DATE = new DataColumn("CHANGE_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCHANGE_DATE);
                this.columnCHANGE_TIME = new DataColumn("CHANGE_TIME", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCHANGE_TIME);
                this.columnTYPE = new DataColumn("TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTYPE);
                this.columnTRAILER_LOAD_NUM = new DataColumn("TRAILER_LOAD_NUM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTRAILER_LOAD_NUM);
                this.columnNEW_TR_LOAD_NUM = new DataColumn("NEW_TR_LOAD_NUM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNEW_TR_LOAD_NUM);
                this.columnRB_TR_LOAD_NUM = new DataColumn("RB_TR_LOAD_NUM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRB_TR_LOAD_NUM);
                this.columnLANE = new DataColumn("LANE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLANE);
                this.columnNEW_LANE = new DataColumn("NEW_LANE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNEW_LANE);
                this.columnRB_DATE = new DataColumn("RB_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRB_DATE);
                this.columnRB_TIME = new DataColumn("RB_TIME", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRB_TIME);
                this.columnLANE_SMALL_SORT = new DataColumn("LANE_SMALL_SORT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLANE_SMALL_SORT);
                this.columnNEWLANE_SMALL_SORT = new DataColumn("NEWLANE_SMALL_SORT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNEWLANE_SMALL_SORT);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
                this.columnDESCRIPTION = new DataColumn("DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIPTION);
                this.Constraints.Add(new UniqueConstraint("ZoneDSKey2", new DataColumn[] {
                                this.columnCODE,
                                this.columnCHANGE_DATE,
                                this.columnCHANGE_TIME}, true));
                this.columnCODE.AllowDBNull = false;
                this.columnCHANGE_DATE.AllowDBNull = false;
                this.columnCHANGE_TIME.AllowDBNull = false;
            }
            
            public ZoneChangeHistoryTableRow NewZoneChangeHistoryTableRow() {
                return ((ZoneChangeHistoryTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ZoneChangeHistoryTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ZoneChangeHistoryTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZoneChangeHistoryTableRowChanged != null)) {
                    this.ZoneChangeHistoryTableRowChanged(this, new ZoneChangeHistoryTableRowChangeEvent(((ZoneChangeHistoryTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZoneChangeHistoryTableRowChanging != null)) {
                    this.ZoneChangeHistoryTableRowChanging(this, new ZoneChangeHistoryTableRowChangeEvent(((ZoneChangeHistoryTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZoneChangeHistoryTableRowDeleted != null)) {
                    this.ZoneChangeHistoryTableRowDeleted(this, new ZoneChangeHistoryTableRowChangeEvent(((ZoneChangeHistoryTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZoneChangeHistoryTableRowDeleting != null)) {
                    this.ZoneChangeHistoryTableRowDeleting(this, new ZoneChangeHistoryTableRowChangeEvent(((ZoneChangeHistoryTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveZoneChangeHistoryTableRow(ZoneChangeHistoryTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZoneChangeHistoryTableRow : DataRow {
            
            private ZoneChangeHistoryTableDataTable tableZoneChangeHistoryTable;
            
            internal ZoneChangeHistoryTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableZoneChangeHistoryTable = ((ZoneChangeHistoryTableDataTable)(this.Table));
            }
            
            public string CODE {
                get {
                    return ((string)(this[this.tableZoneChangeHistoryTable.CODEColumn]));
                }
                set {
                    this[this.tableZoneChangeHistoryTable.CODEColumn] = value;
                }
            }
            
            public System.DateTime CHANGE_DATE {
                get {
                    return ((System.DateTime)(this[this.tableZoneChangeHistoryTable.CHANGE_DATEColumn]));
                }
                set {
                    this[this.tableZoneChangeHistoryTable.CHANGE_DATEColumn] = value;
                }
            }
            
            public System.DateTime CHANGE_TIME {
                get {
                    return ((System.DateTime)(this[this.tableZoneChangeHistoryTable.CHANGE_TIMEColumn]));
                }
                set {
                    this[this.tableZoneChangeHistoryTable.CHANGE_TIMEColumn] = value;
                }
            }
            
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.TYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.TYPEColumn] = value;
                }
            }
            
            public string TRAILER_LOAD_NUM {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.TRAILER_LOAD_NUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.TRAILER_LOAD_NUMColumn] = value;
                }
            }
            
            public string NEW_TR_LOAD_NUM {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.NEW_TR_LOAD_NUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.NEW_TR_LOAD_NUMColumn] = value;
                }
            }
            
            public string RB_TR_LOAD_NUM {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.RB_TR_LOAD_NUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.RB_TR_LOAD_NUMColumn] = value;
                }
            }
            
            public string LANE {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.LANEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.LANEColumn] = value;
                }
            }
            
            public string NEW_LANE {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.NEW_LANEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.NEW_LANEColumn] = value;
                }
            }
            
            public System.DateTime RB_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableZoneChangeHistoryTable.RB_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.RB_DATEColumn] = value;
                }
            }
            
            public System.DateTime RB_TIME {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableZoneChangeHistoryTable.RB_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.RB_TIMEColumn] = value;
                }
            }
            
            public string LANE_SMALL_SORT {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.LANE_SMALL_SORTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.LANE_SMALL_SORTColumn] = value;
                }
            }
            
            public string NEWLANE_SMALL_SORT {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.NEWLANE_SMALL_SORTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.NEWLANE_SMALL_SORTColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.STATUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.STATUSColumn] = value;
                }
            }
            
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableZoneChangeHistoryTable.DESCRIPTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneChangeHistoryTable.DESCRIPTIONColumn] = value;
                }
            }
            
            public bool IsTYPENull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.TYPEColumn);
            }
            
            public void SetTYPENull() {
                this[this.tableZoneChangeHistoryTable.TYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTRAILER_LOAD_NUMNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.TRAILER_LOAD_NUMColumn);
            }
            
            public void SetTRAILER_LOAD_NUMNull() {
                this[this.tableZoneChangeHistoryTable.TRAILER_LOAD_NUMColumn] = System.Convert.DBNull;
            }
            
            public bool IsNEW_TR_LOAD_NUMNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.NEW_TR_LOAD_NUMColumn);
            }
            
            public void SetNEW_TR_LOAD_NUMNull() {
                this[this.tableZoneChangeHistoryTable.NEW_TR_LOAD_NUMColumn] = System.Convert.DBNull;
            }
            
            public bool IsRB_TR_LOAD_NUMNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.RB_TR_LOAD_NUMColumn);
            }
            
            public void SetRB_TR_LOAD_NUMNull() {
                this[this.tableZoneChangeHistoryTable.RB_TR_LOAD_NUMColumn] = System.Convert.DBNull;
            }
            
            public bool IsLANENull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.LANEColumn);
            }
            
            public void SetLANENull() {
                this[this.tableZoneChangeHistoryTable.LANEColumn] = System.Convert.DBNull;
            }
            
            public bool IsNEW_LANENull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.NEW_LANEColumn);
            }
            
            public void SetNEW_LANENull() {
                this[this.tableZoneChangeHistoryTable.NEW_LANEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRB_DATENull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.RB_DATEColumn);
            }
            
            public void SetRB_DATENull() {
                this[this.tableZoneChangeHistoryTable.RB_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRB_TIMENull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.RB_TIMEColumn);
            }
            
            public void SetRB_TIMENull() {
                this[this.tableZoneChangeHistoryTable.RB_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsLANE_SMALL_SORTNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.LANE_SMALL_SORTColumn);
            }
            
            public void SetLANE_SMALL_SORTNull() {
                this[this.tableZoneChangeHistoryTable.LANE_SMALL_SORTColumn] = System.Convert.DBNull;
            }
            
            public bool IsNEWLANE_SMALL_SORTNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.NEWLANE_SMALL_SORTColumn);
            }
            
            public void SetNEWLANE_SMALL_SORTNull() {
                this[this.tableZoneChangeHistoryTable.NEWLANE_SMALL_SORTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.STATUSColumn);
            }
            
            public void SetSTATUSNull() {
                this[this.tableZoneChangeHistoryTable.STATUSColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableZoneChangeHistoryTable.DESCRIPTIONColumn);
            }
            
            public void SetDESCRIPTIONNull() {
                this[this.tableZoneChangeHistoryTable.DESCRIPTIONColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZoneChangeHistoryTableRowChangeEvent : EventArgs {
            
            private ZoneChangeHistoryTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public ZoneChangeHistoryTableRowChangeEvent(ZoneChangeHistoryTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ZoneChangeHistoryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
