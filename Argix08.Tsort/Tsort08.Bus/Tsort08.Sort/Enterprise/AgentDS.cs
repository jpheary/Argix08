//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Enterprise {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class AgentDS : DataSet {
        
        private AgentDetailTableDataTable tableAgentDetailTable;
        
        public AgentDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected AgentDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AgentDetailTable"] != null)) {
                    this.Tables.Add(new AgentDetailTableDataTable(ds.Tables["AgentDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgentDetailTableDataTable AgentDetailTable {
            get {
                return this.tableAgentDetailTable;
            }
        }
        
        public override DataSet Clone() {
            AgentDS cln = ((AgentDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["AgentDetailTable"] != null)) {
                this.Tables.Add(new AgentDetailTableDataTable(ds.Tables["AgentDetailTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableAgentDetailTable = ((AgentDetailTableDataTable)(this.Tables["AgentDetailTable"]));
            if ((this.tableAgentDetailTable != null)) {
                this.tableAgentDetailTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "AgentDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AgentDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableAgentDetailTable = new AgentDetailTableDataTable();
            this.Tables.Add(this.tableAgentDetailTable);
        }
        
        private bool ShouldSerializeAgentDetailTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void AgentDetailTableRowChangeEventHandler(object sender, AgentDetailTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgentDetailTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnAgentID;
            
            private DataColumn columnNUMBER;
            
            private DataColumn columnNAME;
            
            private DataColumn columnSTATUS;
            
            private DataColumn columnADDRESS_LINE1;
            
            private DataColumn columnADDRESS_LINE2;
            
            private DataColumn columnCITY;
            
            private DataColumn columnSTATE;
            
            private DataColumn columnZIP;
            
            private DataColumn columnZIP4;
            
            private DataColumn columnContactName;
            
            private DataColumn columnPhone;
            
            private DataColumn columnFax;
            
            private DataColumn columnMnemonic;
            
            private DataColumn columnAPNumber;
            
            private DataColumn columnTransmitEBOL;
            
            private DataColumn columnDeliveryScanStatus;
            
            private DataColumn columnParentID;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            internal AgentDetailTableDataTable() : 
                    base("AgentDetailTable") {
                this.InitClass();
            }
            
            internal AgentDetailTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn AgentIDColumn {
                get {
                    return this.columnAgentID;
                }
            }
            
            internal DataColumn NUMBERColumn {
                get {
                    return this.columnNUMBER;
                }
            }
            
            internal DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            internal DataColumn ADDRESS_LINE1Column {
                get {
                    return this.columnADDRESS_LINE1;
                }
            }
            
            internal DataColumn ADDRESS_LINE2Column {
                get {
                    return this.columnADDRESS_LINE2;
                }
            }
            
            internal DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            internal DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            internal DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            
            internal DataColumn ZIP4Column {
                get {
                    return this.columnZIP4;
                }
            }
            
            internal DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            internal DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            internal DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            internal DataColumn MnemonicColumn {
                get {
                    return this.columnMnemonic;
                }
            }
            
            internal DataColumn APNumberColumn {
                get {
                    return this.columnAPNumber;
                }
            }
            
            internal DataColumn TransmitEBOLColumn {
                get {
                    return this.columnTransmitEBOL;
                }
            }
            
            internal DataColumn DeliveryScanStatusColumn {
                get {
                    return this.columnDeliveryScanStatus;
                }
            }
            
            internal DataColumn ParentIDColumn {
                get {
                    return this.columnParentID;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            public AgentDetailTableRow this[int index] {
                get {
                    return ((AgentDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event AgentDetailTableRowChangeEventHandler AgentDetailTableRowChanged;
            
            public event AgentDetailTableRowChangeEventHandler AgentDetailTableRowChanging;
            
            public event AgentDetailTableRowChangeEventHandler AgentDetailTableRowDeleted;
            
            public event AgentDetailTableRowChangeEventHandler AgentDetailTableRowDeleting;
            
            public void AddAgentDetailTableRow(AgentDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            public AgentDetailTableRow AddAgentDetailTableRow(
                        int AgentID, 
                        string NUMBER, 
                        string NAME, 
                        string STATUS, 
                        string ADDRESS_LINE1, 
                        string ADDRESS_LINE2, 
                        string CITY, 
                        string STATE, 
                        string ZIP, 
                        string ZIP4, 
                        string ContactName, 
                        string Phone, 
                        string Fax, 
                        string Mnemonic, 
                        string APNumber, 
                        string TransmitEBOL, 
                        System.Byte DeliveryScanStatus, 
                        int ParentID, 
                        System.DateTime LastUpdated, 
                        string UserID) {
                AgentDetailTableRow rowAgentDetailTableRow = ((AgentDetailTableRow)(this.NewRow()));
                rowAgentDetailTableRow.ItemArray = new object[] {
                        AgentID,
                        NUMBER,
                        NAME,
                        STATUS,
                        ADDRESS_LINE1,
                        ADDRESS_LINE2,
                        CITY,
                        STATE,
                        ZIP,
                        ZIP4,
                        ContactName,
                        Phone,
                        Fax,
                        Mnemonic,
                        APNumber,
                        TransmitEBOL,
                        DeliveryScanStatus,
                        ParentID,
                        LastUpdated,
                        UserID};
                this.Rows.Add(rowAgentDetailTableRow);
                return rowAgentDetailTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AgentDetailTableDataTable cln = ((AgentDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AgentDetailTableDataTable();
            }
            
            internal void InitVars() {
                this.columnAgentID = this.Columns["AgentID"];
                this.columnNUMBER = this.Columns["NUMBER"];
                this.columnNAME = this.Columns["NAME"];
                this.columnSTATUS = this.Columns["STATUS"];
                this.columnADDRESS_LINE1 = this.Columns["ADDRESS_LINE1"];
                this.columnADDRESS_LINE2 = this.Columns["ADDRESS_LINE2"];
                this.columnCITY = this.Columns["CITY"];
                this.columnSTATE = this.Columns["STATE"];
                this.columnZIP = this.Columns["ZIP"];
                this.columnZIP4 = this.Columns["ZIP4"];
                this.columnContactName = this.Columns["ContactName"];
                this.columnPhone = this.Columns["Phone"];
                this.columnFax = this.Columns["Fax"];
                this.columnMnemonic = this.Columns["Mnemonic"];
                this.columnAPNumber = this.Columns["APNumber"];
                this.columnTransmitEBOL = this.Columns["TransmitEBOL"];
                this.columnDeliveryScanStatus = this.Columns["DeliveryScanStatus"];
                this.columnParentID = this.Columns["ParentID"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
            }
            
            private void InitClass() {
                this.columnAgentID = new DataColumn("AgentID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgentID);
                this.columnNUMBER = new DataColumn("NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUMBER);
                this.columnNAME = new DataColumn("NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
                this.columnADDRESS_LINE1 = new DataColumn("ADDRESS_LINE1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDRESS_LINE1);
                this.columnADDRESS_LINE2 = new DataColumn("ADDRESS_LINE2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDRESS_LINE2);
                this.columnCITY = new DataColumn("CITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCITY);
                this.columnSTATE = new DataColumn("STATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATE);
                this.columnZIP = new DataColumn("ZIP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZIP);
                this.columnZIP4 = new DataColumn("ZIP4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZIP4);
                this.columnContactName = new DataColumn("ContactName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactName);
                this.columnPhone = new DataColumn("Phone", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhone);
                this.columnFax = new DataColumn("Fax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFax);
                this.columnMnemonic = new DataColumn("Mnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMnemonic);
                this.columnAPNumber = new DataColumn("APNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAPNumber);
                this.columnTransmitEBOL = new DataColumn("TransmitEBOL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTransmitEBOL);
                this.columnDeliveryScanStatus = new DataColumn("DeliveryScanStatus", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeliveryScanStatus);
                this.columnParentID = new DataColumn("ParentID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnParentID);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnNUMBER.AllowDBNull = false;
            }
            
            public AgentDetailTableRow NewAgentDetailTableRow() {
                return ((AgentDetailTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AgentDetailTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AgentDetailTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgentDetailTableRowChanged != null)) {
                    this.AgentDetailTableRowChanged(this, new AgentDetailTableRowChangeEvent(((AgentDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgentDetailTableRowChanging != null)) {
                    this.AgentDetailTableRowChanging(this, new AgentDetailTableRowChangeEvent(((AgentDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgentDetailTableRowDeleted != null)) {
                    this.AgentDetailTableRowDeleted(this, new AgentDetailTableRowChangeEvent(((AgentDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgentDetailTableRowDeleting != null)) {
                    this.AgentDetailTableRowDeleting(this, new AgentDetailTableRowChangeEvent(((AgentDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAgentDetailTableRow(AgentDetailTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgentDetailTableRow : DataRow {
            
            private AgentDetailTableDataTable tableAgentDetailTable;
            
            internal AgentDetailTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgentDetailTable = ((AgentDetailTableDataTable)(this.Table));
            }
            
            public int AgentID {
                get {
                    try {
                        return ((int)(this[this.tableAgentDetailTable.AgentIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.AgentIDColumn] = value;
                }
            }
            
            public string NUMBER {
                get {
                    return ((string)(this[this.tableAgentDetailTable.NUMBERColumn]));
                }
                set {
                    this[this.tableAgentDetailTable.NUMBERColumn] = value;
                }
            }
            
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.NAMEColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.STATUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.STATUSColumn] = value;
                }
            }
            
            public string ADDRESS_LINE1 {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.ADDRESS_LINE1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.ADDRESS_LINE1Column] = value;
                }
            }
            
            public string ADDRESS_LINE2 {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.ADDRESS_LINE2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.ADDRESS_LINE2Column] = value;
                }
            }
            
            public string CITY {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.CITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.CITYColumn] = value;
                }
            }
            
            public string STATE {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.STATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.STATEColumn] = value;
                }
            }
            
            public string ZIP {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.ZIPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.ZIPColumn] = value;
                }
            }
            
            public string ZIP4 {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.ZIP4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.ZIP4Column] = value;
                }
            }
            
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.ContactNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.ContactNameColumn] = value;
                }
            }
            
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.PhoneColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.PhoneColumn] = value;
                }
            }
            
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.FaxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.FaxColumn] = value;
                }
            }
            
            public string Mnemonic {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.MnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.MnemonicColumn] = value;
                }
            }
            
            public string APNumber {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.APNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.APNumberColumn] = value;
                }
            }
            
            public string TransmitEBOL {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.TransmitEBOLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.TransmitEBOLColumn] = value;
                }
            }
            
            public System.Byte DeliveryScanStatus {
                get {
                    try {
                        return ((System.Byte)(this[this.tableAgentDetailTable.DeliveryScanStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.DeliveryScanStatusColumn] = value;
                }
            }
            
            public int ParentID {
                get {
                    try {
                        return ((int)(this[this.tableAgentDetailTable.ParentIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.ParentIDColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAgentDetailTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableAgentDetailTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentDetailTable.UserIDColumn] = value;
                }
            }
            
            public bool IsAgentIDNull() {
                return this.IsNull(this.tableAgentDetailTable.AgentIDColumn);
            }
            
            public void SetAgentIDNull() {
                this[this.tableAgentDetailTable.AgentIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNAMENull() {
                return this.IsNull(this.tableAgentDetailTable.NAMEColumn);
            }
            
            public void SetNAMENull() {
                this[this.tableAgentDetailTable.NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableAgentDetailTable.STATUSColumn);
            }
            
            public void SetSTATUSNull() {
                this[this.tableAgentDetailTable.STATUSColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDRESS_LINE1Null() {
                return this.IsNull(this.tableAgentDetailTable.ADDRESS_LINE1Column);
            }
            
            public void SetADDRESS_LINE1Null() {
                this[this.tableAgentDetailTable.ADDRESS_LINE1Column] = System.Convert.DBNull;
            }
            
            public bool IsADDRESS_LINE2Null() {
                return this.IsNull(this.tableAgentDetailTable.ADDRESS_LINE2Column);
            }
            
            public void SetADDRESS_LINE2Null() {
                this[this.tableAgentDetailTable.ADDRESS_LINE2Column] = System.Convert.DBNull;
            }
            
            public bool IsCITYNull() {
                return this.IsNull(this.tableAgentDetailTable.CITYColumn);
            }
            
            public void SetCITYNull() {
                this[this.tableAgentDetailTable.CITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATENull() {
                return this.IsNull(this.tableAgentDetailTable.STATEColumn);
            }
            
            public void SetSTATENull() {
                this[this.tableAgentDetailTable.STATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsZIPNull() {
                return this.IsNull(this.tableAgentDetailTable.ZIPColumn);
            }
            
            public void SetZIPNull() {
                this[this.tableAgentDetailTable.ZIPColumn] = System.Convert.DBNull;
            }
            
            public bool IsZIP4Null() {
                return this.IsNull(this.tableAgentDetailTable.ZIP4Column);
            }
            
            public void SetZIP4Null() {
                this[this.tableAgentDetailTable.ZIP4Column] = System.Convert.DBNull;
            }
            
            public bool IsContactNameNull() {
                return this.IsNull(this.tableAgentDetailTable.ContactNameColumn);
            }
            
            public void SetContactNameNull() {
                this[this.tableAgentDetailTable.ContactNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhoneNull() {
                return this.IsNull(this.tableAgentDetailTable.PhoneColumn);
            }
            
            public void SetPhoneNull() {
                this[this.tableAgentDetailTable.PhoneColumn] = System.Convert.DBNull;
            }
            
            public bool IsFaxNull() {
                return this.IsNull(this.tableAgentDetailTable.FaxColumn);
            }
            
            public void SetFaxNull() {
                this[this.tableAgentDetailTable.FaxColumn] = System.Convert.DBNull;
            }
            
            public bool IsMnemonicNull() {
                return this.IsNull(this.tableAgentDetailTable.MnemonicColumn);
            }
            
            public void SetMnemonicNull() {
                this[this.tableAgentDetailTable.MnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsAPNumberNull() {
                return this.IsNull(this.tableAgentDetailTable.APNumberColumn);
            }
            
            public void SetAPNumberNull() {
                this[this.tableAgentDetailTable.APNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsTransmitEBOLNull() {
                return this.IsNull(this.tableAgentDetailTable.TransmitEBOLColumn);
            }
            
            public void SetTransmitEBOLNull() {
                this[this.tableAgentDetailTable.TransmitEBOLColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeliveryScanStatusNull() {
                return this.IsNull(this.tableAgentDetailTable.DeliveryScanStatusColumn);
            }
            
            public void SetDeliveryScanStatusNull() {
                this[this.tableAgentDetailTable.DeliveryScanStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsParentIDNull() {
                return this.IsNull(this.tableAgentDetailTable.ParentIDColumn);
            }
            
            public void SetParentIDNull() {
                this[this.tableAgentDetailTable.ParentIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableAgentDetailTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableAgentDetailTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableAgentDetailTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableAgentDetailTable.UserIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgentDetailTableRowChangeEvent : EventArgs {
            
            private AgentDetailTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public AgentDetailTableRowChangeEvent(AgentDetailTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AgentDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
