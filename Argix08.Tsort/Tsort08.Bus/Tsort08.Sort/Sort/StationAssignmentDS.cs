//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Sort {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class StationAssignmentDS : DataSet {
        
        private FreightClientShipperTableDataTable tableFreightClientShipperTable;
        
        public StationAssignmentDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected StationAssignmentDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["FreightClientShipperTable"] != null)) {
                    this.Tables.Add(new FreightClientShipperTableDataTable(ds.Tables["FreightClientShipperTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FreightClientShipperTableDataTable FreightClientShipperTable {
            get {
                return this.tableFreightClientShipperTable;
            }
        }
        
        public override DataSet Clone() {
            StationAssignmentDS cln = ((StationAssignmentDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["FreightClientShipperTable"] != null)) {
                this.Tables.Add(new FreightClientShipperTableDataTable(ds.Tables["FreightClientShipperTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableFreightClientShipperTable = ((FreightClientShipperTableDataTable)(this.Tables["FreightClientShipperTable"]));
            if ((this.tableFreightClientShipperTable != null)) {
                this.tableFreightClientShipperTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "StationAssignmentDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/StationAssignmentDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableFreightClientShipperTable = new FreightClientShipperTableDataTable();
            this.Tables.Add(this.tableFreightClientShipperTable);
        }
        
        private bool ShouldSerializeFreightClientShipperTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void FreightClientShipperTableRowChangeEventHandler(object sender, FreightClientShipperTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FreightClientShipperTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnStationNumber;
            
            private DataColumn columnWorkStationID;
            
            private DataColumn columnSortTypeID;
            
            private DataColumn columnFreightID;
            
            private DataColumn columnSortType;
            
            private DataColumn columnFreightType;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnTDSNumber;
            
            private DataColumn columnTrailerNumber;
            
            private DataColumn columnVendorKey;
            
            private DataColumn columnClientNumber;
            
            private DataColumn columnClientDivision;
            
            private DataColumn columnPickupDate;
            
            private DataColumn columnPickupNumber;
            
            private DataColumn columnClient;
            
            private DataColumn columnClientAddressLine1;
            
            private DataColumn columnClientAddressLine2;
            
            private DataColumn columnClientAddressCity;
            
            private DataColumn columnClientAddressState;
            
            private DataColumn columnClientAddressZip;
            
            private DataColumn columnCubeRatio;
            
            private DataColumn columnShipperNumber;
            
            private DataColumn columnShipper;
            
            private DataColumn columnShipperAddressLine1;
            
            private DataColumn columnShipperAddressLine2;
            
            private DataColumn columnShipperAddressCity;
            
            private DataColumn columnShipperAddressZip;
            
            private DataColumn columnShipperAddressState;
            
            private DataColumn columnShipperUserData;
            
            private DataColumn columnLabelID;
            
            private DataColumn columnExcLocation;
            
            internal FreightClientShipperTableDataTable() : 
                    base("FreightClientShipperTable") {
                this.InitClass();
            }
            
            internal FreightClientShipperTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn StationNumberColumn {
                get {
                    return this.columnStationNumber;
                }
            }
            
            internal DataColumn WorkStationIDColumn {
                get {
                    return this.columnWorkStationID;
                }
            }
            
            internal DataColumn SortTypeIDColumn {
                get {
                    return this.columnSortTypeID;
                }
            }
            
            internal DataColumn FreightIDColumn {
                get {
                    return this.columnFreightID;
                }
            }
            
            internal DataColumn SortTypeColumn {
                get {
                    return this.columnSortType;
                }
            }
            
            internal DataColumn FreightTypeColumn {
                get {
                    return this.columnFreightType;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn TDSNumberColumn {
                get {
                    return this.columnTDSNumber;
                }
            }
            
            internal DataColumn TrailerNumberColumn {
                get {
                    return this.columnTrailerNumber;
                }
            }
            
            internal DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            internal DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            internal DataColumn ClientDivisionColumn {
                get {
                    return this.columnClientDivision;
                }
            }
            
            internal DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            internal DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            internal DataColumn ClientColumn {
                get {
                    return this.columnClient;
                }
            }
            
            internal DataColumn ClientAddressLine1Column {
                get {
                    return this.columnClientAddressLine1;
                }
            }
            
            internal DataColumn ClientAddressLine2Column {
                get {
                    return this.columnClientAddressLine2;
                }
            }
            
            internal DataColumn ClientAddressCityColumn {
                get {
                    return this.columnClientAddressCity;
                }
            }
            
            internal DataColumn ClientAddressStateColumn {
                get {
                    return this.columnClientAddressState;
                }
            }
            
            internal DataColumn ClientAddressZipColumn {
                get {
                    return this.columnClientAddressZip;
                }
            }
            
            internal DataColumn CubeRatioColumn {
                get {
                    return this.columnCubeRatio;
                }
            }
            
            internal DataColumn ShipperNumberColumn {
                get {
                    return this.columnShipperNumber;
                }
            }
            
            internal DataColumn ShipperColumn {
                get {
                    return this.columnShipper;
                }
            }
            
            internal DataColumn ShipperAddressLine1Column {
                get {
                    return this.columnShipperAddressLine1;
                }
            }
            
            internal DataColumn ShipperAddressLine2Column {
                get {
                    return this.columnShipperAddressLine2;
                }
            }
            
            internal DataColumn ShipperAddressCityColumn {
                get {
                    return this.columnShipperAddressCity;
                }
            }
            
            internal DataColumn ShipperAddressZipColumn {
                get {
                    return this.columnShipperAddressZip;
                }
            }
            
            internal DataColumn ShipperAddressStateColumn {
                get {
                    return this.columnShipperAddressState;
                }
            }
            
            internal DataColumn ShipperUserDataColumn {
                get {
                    return this.columnShipperUserData;
                }
            }
            
            internal DataColumn LabelIDColumn {
                get {
                    return this.columnLabelID;
                }
            }
            
            internal DataColumn ExcLocationColumn {
                get {
                    return this.columnExcLocation;
                }
            }
            
            public FreightClientShipperTableRow this[int index] {
                get {
                    return ((FreightClientShipperTableRow)(this.Rows[index]));
                }
            }
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowChanged;
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowChanging;
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowDeleted;
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowDeleting;
            
            public void AddFreightClientShipperTableRow(FreightClientShipperTableRow row) {
                this.Rows.Add(row);
            }
            
            public FreightClientShipperTableRow AddFreightClientShipperTableRow(
                        string StationNumber, 
                        string WorkStationID, 
                        int SortTypeID, 
                        string FreightID, 
                        string SortType, 
                        string FreightType, 
                        int TerminalID, 
                        int TDSNumber, 
                        string TrailerNumber, 
                        string VendorKey, 
                        string ClientNumber, 
                        string ClientDivision, 
                        string PickupDate, 
                        string PickupNumber, 
                        string Client, 
                        string ClientAddressLine1, 
                        string ClientAddressLine2, 
                        string ClientAddressCity, 
                        string ClientAddressState, 
                        string ClientAddressZip, 
                        System.Decimal CubeRatio, 
                        string ShipperNumber, 
                        string Shipper, 
                        string ShipperAddressLine1, 
                        string ShipperAddressLine2, 
                        string ShipperAddressCity, 
                        string ShipperAddressZip, 
                        string ShipperAddressState, 
                        string ShipperUserData, 
                        int LabelID, 
                        int ExcLocation) {
                FreightClientShipperTableRow rowFreightClientShipperTableRow = ((FreightClientShipperTableRow)(this.NewRow()));
                rowFreightClientShipperTableRow.ItemArray = new object[] {
                        StationNumber,
                        WorkStationID,
                        SortTypeID,
                        FreightID,
                        SortType,
                        FreightType,
                        TerminalID,
                        TDSNumber,
                        TrailerNumber,
                        VendorKey,
                        ClientNumber,
                        ClientDivision,
                        PickupDate,
                        PickupNumber,
                        Client,
                        ClientAddressLine1,
                        ClientAddressLine2,
                        ClientAddressCity,
                        ClientAddressState,
                        ClientAddressZip,
                        CubeRatio,
                        ShipperNumber,
                        Shipper,
                        ShipperAddressLine1,
                        ShipperAddressLine2,
                        ShipperAddressCity,
                        ShipperAddressZip,
                        ShipperAddressState,
                        ShipperUserData,
                        LabelID,
                        ExcLocation};
                this.Rows.Add(rowFreightClientShipperTableRow);
                return rowFreightClientShipperTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                FreightClientShipperTableDataTable cln = ((FreightClientShipperTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new FreightClientShipperTableDataTable();
            }
            
            internal void InitVars() {
                this.columnStationNumber = this.Columns["StationNumber"];
                this.columnWorkStationID = this.Columns["WorkStationID"];
                this.columnSortTypeID = this.Columns["SortTypeID"];
                this.columnFreightID = this.Columns["FreightID"];
                this.columnSortType = this.Columns["SortType"];
                this.columnFreightType = this.Columns["FreightType"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnTDSNumber = this.Columns["TDSNumber"];
                this.columnTrailerNumber = this.Columns["TrailerNumber"];
                this.columnVendorKey = this.Columns["VendorKey"];
                this.columnClientNumber = this.Columns["ClientNumber"];
                this.columnClientDivision = this.Columns["ClientDivision"];
                this.columnPickupDate = this.Columns["PickupDate"];
                this.columnPickupNumber = this.Columns["PickupNumber"];
                this.columnClient = this.Columns["Client"];
                this.columnClientAddressLine1 = this.Columns["ClientAddressLine1"];
                this.columnClientAddressLine2 = this.Columns["ClientAddressLine2"];
                this.columnClientAddressCity = this.Columns["ClientAddressCity"];
                this.columnClientAddressState = this.Columns["ClientAddressState"];
                this.columnClientAddressZip = this.Columns["ClientAddressZip"];
                this.columnCubeRatio = this.Columns["CubeRatio"];
                this.columnShipperNumber = this.Columns["ShipperNumber"];
                this.columnShipper = this.Columns["Shipper"];
                this.columnShipperAddressLine1 = this.Columns["ShipperAddressLine1"];
                this.columnShipperAddressLine2 = this.Columns["ShipperAddressLine2"];
                this.columnShipperAddressCity = this.Columns["ShipperAddressCity"];
                this.columnShipperAddressZip = this.Columns["ShipperAddressZip"];
                this.columnShipperAddressState = this.Columns["ShipperAddressState"];
                this.columnShipperUserData = this.Columns["ShipperUserData"];
                this.columnLabelID = this.Columns["LabelID"];
                this.columnExcLocation = this.Columns["ExcLocation"];
            }
            
            private void InitClass() {
                this.columnStationNumber = new DataColumn("StationNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStationNumber);
                this.columnWorkStationID = new DataColumn("WorkStationID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkStationID);
                this.columnSortTypeID = new DataColumn("SortTypeID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortTypeID);
                this.columnFreightID = new DataColumn("FreightID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFreightID);
                this.columnSortType = new DataColumn("SortType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortType);
                this.columnFreightType = new DataColumn("FreightType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFreightType);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnTDSNumber = new DataColumn("TDSNumber", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTDSNumber);
                this.columnTrailerNumber = new DataColumn("TrailerNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrailerNumber);
                this.columnVendorKey = new DataColumn("VendorKey", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVendorKey);
                this.columnClientNumber = new DataColumn("ClientNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientNumber);
                this.columnClientDivision = new DataColumn("ClientDivision", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientDivision);
                this.columnPickupDate = new DataColumn("PickupDate", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new DataColumn("PickupNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPickupNumber);
                this.columnClient = new DataColumn("Client", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClient);
                this.columnClientAddressLine1 = new DataColumn("ClientAddressLine1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientAddressLine1);
                this.columnClientAddressLine2 = new DataColumn("ClientAddressLine2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientAddressLine2);
                this.columnClientAddressCity = new DataColumn("ClientAddressCity", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientAddressCity);
                this.columnClientAddressState = new DataColumn("ClientAddressState", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientAddressState);
                this.columnClientAddressZip = new DataColumn("ClientAddressZip", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientAddressZip);
                this.columnCubeRatio = new DataColumn("CubeRatio", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCubeRatio);
                this.columnShipperNumber = new DataColumn("ShipperNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperNumber);
                this.columnShipper = new DataColumn("Shipper", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipper);
                this.columnShipperAddressLine1 = new DataColumn("ShipperAddressLine1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperAddressLine1);
                this.columnShipperAddressLine2 = new DataColumn("ShipperAddressLine2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperAddressLine2);
                this.columnShipperAddressCity = new DataColumn("ShipperAddressCity", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperAddressCity);
                this.columnShipperAddressZip = new DataColumn("ShipperAddressZip", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperAddressZip);
                this.columnShipperAddressState = new DataColumn("ShipperAddressState", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperAddressState);
                this.columnShipperUserData = new DataColumn("ShipperUserData", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShipperUserData);
                this.columnLabelID = new DataColumn("LabelID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLabelID);
                this.columnExcLocation = new DataColumn("ExcLocation", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExcLocation);
            }
            
            public FreightClientShipperTableRow NewFreightClientShipperTableRow() {
                return ((FreightClientShipperTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new FreightClientShipperTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(FreightClientShipperTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FreightClientShipperTableRowChanged != null)) {
                    this.FreightClientShipperTableRowChanged(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FreightClientShipperTableRowChanging != null)) {
                    this.FreightClientShipperTableRowChanging(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FreightClientShipperTableRowDeleted != null)) {
                    this.FreightClientShipperTableRowDeleted(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FreightClientShipperTableRowDeleting != null)) {
                    this.FreightClientShipperTableRowDeleting(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveFreightClientShipperTableRow(FreightClientShipperTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FreightClientShipperTableRow : DataRow {
            
            private FreightClientShipperTableDataTable tableFreightClientShipperTable;
            
            internal FreightClientShipperTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableFreightClientShipperTable = ((FreightClientShipperTableDataTable)(this.Table));
            }
            
            public string StationNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.StationNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.StationNumberColumn] = value;
                }
            }
            
            public string WorkStationID {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.WorkStationIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.WorkStationIDColumn] = value;
                }
            }
            
            public int SortTypeID {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.SortTypeIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.SortTypeIDColumn] = value;
                }
            }
            
            public string FreightID {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.FreightIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.FreightIDColumn] = value;
                }
            }
            
            public string SortType {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.SortTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.SortTypeColumn] = value;
                }
            }
            
            public string FreightType {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.FreightTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.FreightTypeColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.TerminalIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.TerminalIDColumn] = value;
                }
            }
            
            public int TDSNumber {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.TDSNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.TDSNumberColumn] = value;
                }
            }
            
            public string TrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.TrailerNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.TrailerNumberColumn] = value;
                }
            }
            
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.VendorKeyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.VendorKeyColumn] = value;
                }
            }
            
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientNumberColumn] = value;
                }
            }
            
            public string ClientDivision {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientDivisionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientDivisionColumn] = value;
                }
            }
            
            public string PickupDate {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.PickupDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.PickupDateColumn] = value;
                }
            }
            
            public string PickupNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.PickupNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.PickupNumberColumn] = value;
                }
            }
            
            public string Client {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientColumn] = value;
                }
            }
            
            public string ClientAddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressLine1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressLine1Column] = value;
                }
            }
            
            public string ClientAddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressLine2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressLine2Column] = value;
                }
            }
            
            public string ClientAddressCity {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressCityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressCityColumn] = value;
                }
            }
            
            public string ClientAddressState {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressStateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressStateColumn] = value;
                }
            }
            
            public string ClientAddressZip {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressZipColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressZipColumn] = value;
                }
            }
            
            public System.Decimal CubeRatio {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableFreightClientShipperTable.CubeRatioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.CubeRatioColumn] = value;
                }
            }
            
            public string ShipperNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperNumberColumn] = value;
                }
            }
            
            public string Shipper {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperColumn] = value;
                }
            }
            
            public string ShipperAddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressLine1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressLine1Column] = value;
                }
            }
            
            public string ShipperAddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressLine2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressLine2Column] = value;
                }
            }
            
            public string ShipperAddressCity {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressCityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressCityColumn] = value;
                }
            }
            
            public string ShipperAddressZip {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressZipColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressZipColumn] = value;
                }
            }
            
            public string ShipperAddressState {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressStateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressStateColumn] = value;
                }
            }
            
            public string ShipperUserData {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperUserDataColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperUserDataColumn] = value;
                }
            }
            
            public int LabelID {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.LabelIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.LabelIDColumn] = value;
                }
            }
            
            public int ExcLocation {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.ExcLocationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ExcLocationColumn] = value;
                }
            }
            
            public bool IsStationNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.StationNumberColumn);
            }
            
            public void SetStationNumberNull() {
                this[this.tableFreightClientShipperTable.StationNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsWorkStationIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.WorkStationIDColumn);
            }
            
            public void SetWorkStationIDNull() {
                this[this.tableFreightClientShipperTable.WorkStationIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortTypeIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.SortTypeIDColumn);
            }
            
            public void SetSortTypeIDNull() {
                this[this.tableFreightClientShipperTable.SortTypeIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFreightIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.FreightIDColumn);
            }
            
            public void SetFreightIDNull() {
                this[this.tableFreightClientShipperTable.FreightIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortTypeNull() {
                return this.IsNull(this.tableFreightClientShipperTable.SortTypeColumn);
            }
            
            public void SetSortTypeNull() {
                this[this.tableFreightClientShipperTable.SortTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsFreightTypeNull() {
                return this.IsNull(this.tableFreightClientShipperTable.FreightTypeColumn);
            }
            
            public void SetFreightTypeNull() {
                this[this.tableFreightClientShipperTable.FreightTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.TerminalIDColumn);
            }
            
            public void SetTerminalIDNull() {
                this[this.tableFreightClientShipperTable.TerminalIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTDSNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.TDSNumberColumn);
            }
            
            public void SetTDSNumberNull() {
                this[this.tableFreightClientShipperTable.TDSNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsTrailerNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.TrailerNumberColumn);
            }
            
            public void SetTrailerNumberNull() {
                this[this.tableFreightClientShipperTable.TrailerNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableFreightClientShipperTable.VendorKeyColumn);
            }
            
            public void SetVendorKeyNull() {
                this[this.tableFreightClientShipperTable.VendorKeyColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientNumberColumn);
            }
            
            public void SetClientNumberNull() {
                this[this.tableFreightClientShipperTable.ClientNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientDivisionNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientDivisionColumn);
            }
            
            public void SetClientDivisionNull() {
                this[this.tableFreightClientShipperTable.ClientDivisionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableFreightClientShipperTable.PickupDateColumn);
            }
            
            public void SetPickupDateNull() {
                this[this.tableFreightClientShipperTable.PickupDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.PickupNumberColumn);
            }
            
            public void SetPickupNumberNull() {
                this[this.tableFreightClientShipperTable.PickupNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientColumn);
            }
            
            public void SetClientNull() {
                this[this.tableFreightClientShipperTable.ClientColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientAddressLine1Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressLine1Column);
            }
            
            public void SetClientAddressLine1Null() {
                this[this.tableFreightClientShipperTable.ClientAddressLine1Column] = System.Convert.DBNull;
            }
            
            public bool IsClientAddressLine2Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressLine2Column);
            }
            
            public void SetClientAddressLine2Null() {
                this[this.tableFreightClientShipperTable.ClientAddressLine2Column] = System.Convert.DBNull;
            }
            
            public bool IsClientAddressCityNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressCityColumn);
            }
            
            public void SetClientAddressCityNull() {
                this[this.tableFreightClientShipperTable.ClientAddressCityColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientAddressStateNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressStateColumn);
            }
            
            public void SetClientAddressStateNull() {
                this[this.tableFreightClientShipperTable.ClientAddressStateColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientAddressZipNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressZipColumn);
            }
            
            public void SetClientAddressZipNull() {
                this[this.tableFreightClientShipperTable.ClientAddressZipColumn] = System.Convert.DBNull;
            }
            
            public bool IsCubeRatioNull() {
                return this.IsNull(this.tableFreightClientShipperTable.CubeRatioColumn);
            }
            
            public void SetCubeRatioNull() {
                this[this.tableFreightClientShipperTable.CubeRatioColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipperNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperNumberColumn);
            }
            
            public void SetShipperNumberNull() {
                this[this.tableFreightClientShipperTable.ShipperNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipperNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperColumn);
            }
            
            public void SetShipperNull() {
                this[this.tableFreightClientShipperTable.ShipperColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipperAddressLine1Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressLine1Column);
            }
            
            public void SetShipperAddressLine1Null() {
                this[this.tableFreightClientShipperTable.ShipperAddressLine1Column] = System.Convert.DBNull;
            }
            
            public bool IsShipperAddressLine2Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressLine2Column);
            }
            
            public void SetShipperAddressLine2Null() {
                this[this.tableFreightClientShipperTable.ShipperAddressLine2Column] = System.Convert.DBNull;
            }
            
            public bool IsShipperAddressCityNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressCityColumn);
            }
            
            public void SetShipperAddressCityNull() {
                this[this.tableFreightClientShipperTable.ShipperAddressCityColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipperAddressZipNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressZipColumn);
            }
            
            public void SetShipperAddressZipNull() {
                this[this.tableFreightClientShipperTable.ShipperAddressZipColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipperAddressStateNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressStateColumn);
            }
            
            public void SetShipperAddressStateNull() {
                this[this.tableFreightClientShipperTable.ShipperAddressStateColumn] = System.Convert.DBNull;
            }
            
            public bool IsShipperUserDataNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperUserDataColumn);
            }
            
            public void SetShipperUserDataNull() {
                this[this.tableFreightClientShipperTable.ShipperUserDataColumn] = System.Convert.DBNull;
            }
            
            public bool IsLabelIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.LabelIDColumn);
            }
            
            public void SetLabelIDNull() {
                this[this.tableFreightClientShipperTable.LabelIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsExcLocationNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ExcLocationColumn);
            }
            
            public void SetExcLocationNull() {
                this[this.tableFreightClientShipperTable.ExcLocationColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FreightClientShipperTableRowChangeEvent : EventArgs {
            
            private FreightClientShipperTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public FreightClientShipperTableRowChangeEvent(FreightClientShipperTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public FreightClientShipperTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
