//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Tsort.Sort {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StationAssignmentDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StationAssignmentDS : global::System.Data.DataSet {
        
        private FreightClientShipperTableDataTable tableFreightClientShipperTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StationAssignmentDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StationAssignmentDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FreightClientShipperTable"] != null)) {
                    base.Tables.Add(new FreightClientShipperTableDataTable(ds.Tables["FreightClientShipperTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FreightClientShipperTableDataTable FreightClientShipperTable {
            get {
                return this.tableFreightClientShipperTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StationAssignmentDS cln = ((StationAssignmentDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FreightClientShipperTable"] != null)) {
                    base.Tables.Add(new FreightClientShipperTableDataTable(ds.Tables["FreightClientShipperTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFreightClientShipperTable = ((FreightClientShipperTableDataTable)(base.Tables["FreightClientShipperTable"]));
            if ((initTable == true)) {
                if ((this.tableFreightClientShipperTable != null)) {
                    this.tableFreightClientShipperTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StationAssignmentDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/StationAssignmentDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFreightClientShipperTable = new FreightClientShipperTableDataTable();
            base.Tables.Add(this.tableFreightClientShipperTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFreightClientShipperTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StationAssignmentDS ds = new StationAssignmentDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FreightClientShipperTableRowChangeEventHandler(object sender, FreightClientShipperTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FreightClientShipperTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStationNumber;
            
            private global::System.Data.DataColumn columnWorkStationID;
            
            private global::System.Data.DataColumn columnSortTypeID;
            
            private global::System.Data.DataColumn columnFreightID;
            
            private global::System.Data.DataColumn columnSortType;
            
            private global::System.Data.DataColumn columnFreightType;
            
            private global::System.Data.DataColumn columnTerminalID;
            
            private global::System.Data.DataColumn columnTDSNumber;
            
            private global::System.Data.DataColumn columnTrailerNumber;
            
            private global::System.Data.DataColumn columnVendorKey;
            
            private global::System.Data.DataColumn columnClientNumber;
            
            private global::System.Data.DataColumn columnClientDivision;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupNumber;
            
            private global::System.Data.DataColumn columnClient;
            
            private global::System.Data.DataColumn columnClientAddressLine1;
            
            private global::System.Data.DataColumn columnClientAddressLine2;
            
            private global::System.Data.DataColumn columnClientAddressCity;
            
            private global::System.Data.DataColumn columnClientAddressState;
            
            private global::System.Data.DataColumn columnClientAddressZip;
            
            private global::System.Data.DataColumn columnCubeRatio;
            
            private global::System.Data.DataColumn columnShipperNumber;
            
            private global::System.Data.DataColumn columnShipper;
            
            private global::System.Data.DataColumn columnShipperAddressLine1;
            
            private global::System.Data.DataColumn columnShipperAddressLine2;
            
            private global::System.Data.DataColumn columnShipperAddressCity;
            
            private global::System.Data.DataColumn columnShipperAddressZip;
            
            private global::System.Data.DataColumn columnShipperAddressState;
            
            private global::System.Data.DataColumn columnShipperUserData;
            
            private global::System.Data.DataColumn columnLabelID;
            
            private global::System.Data.DataColumn columnExcLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightClientShipperTableDataTable() {
                this.TableName = "FreightClientShipperTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FreightClientShipperTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FreightClientShipperTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationNumberColumn {
                get {
                    return this.columnStationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkStationIDColumn {
                get {
                    return this.columnWorkStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortTypeIDColumn {
                get {
                    return this.columnSortTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightIDColumn {
                get {
                    return this.columnFreightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortTypeColumn {
                get {
                    return this.columnSortType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightTypeColumn {
                get {
                    return this.columnFreightType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSNumberColumn {
                get {
                    return this.columnTDSNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrailerNumberColumn {
                get {
                    return this.columnTrailerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientDivisionColumn {
                get {
                    return this.columnClientDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientColumn {
                get {
                    return this.columnClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAddressLine1Column {
                get {
                    return this.columnClientAddressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAddressLine2Column {
                get {
                    return this.columnClientAddressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAddressCityColumn {
                get {
                    return this.columnClientAddressCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAddressStateColumn {
                get {
                    return this.columnClientAddressState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAddressZipColumn {
                get {
                    return this.columnClientAddressZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CubeRatioColumn {
                get {
                    return this.columnCubeRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperNumberColumn {
                get {
                    return this.columnShipperNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperColumn {
                get {
                    return this.columnShipper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperAddressLine1Column {
                get {
                    return this.columnShipperAddressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperAddressLine2Column {
                get {
                    return this.columnShipperAddressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperAddressCityColumn {
                get {
                    return this.columnShipperAddressCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperAddressZipColumn {
                get {
                    return this.columnShipperAddressZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperAddressStateColumn {
                get {
                    return this.columnShipperAddressState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperUserDataColumn {
                get {
                    return this.columnShipperUserData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelIDColumn {
                get {
                    return this.columnLabelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcLocationColumn {
                get {
                    return this.columnExcLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightClientShipperTableRow this[int index] {
                get {
                    return ((FreightClientShipperTableRow)(this.Rows[index]));
                }
            }
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowChanging;
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowChanged;
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowDeleting;
            
            public event FreightClientShipperTableRowChangeEventHandler FreightClientShipperTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFreightClientShipperTableRow(FreightClientShipperTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightClientShipperTableRow AddFreightClientShipperTableRow(
                        string StationNumber, 
                        string WorkStationID, 
                        int SortTypeID, 
                        string FreightID, 
                        string SortType, 
                        string FreightType, 
                        int TerminalID, 
                        int TDSNumber, 
                        string TrailerNumber, 
                        string VendorKey, 
                        string ClientNumber, 
                        string ClientDivision, 
                        string PickupDate, 
                        string PickupNumber, 
                        string Client, 
                        string ClientAddressLine1, 
                        string ClientAddressLine2, 
                        string ClientAddressCity, 
                        string ClientAddressState, 
                        string ClientAddressZip, 
                        decimal CubeRatio, 
                        string ShipperNumber, 
                        string Shipper, 
                        string ShipperAddressLine1, 
                        string ShipperAddressLine2, 
                        string ShipperAddressCity, 
                        string ShipperAddressZip, 
                        string ShipperAddressState, 
                        string ShipperUserData, 
                        int LabelID, 
                        int ExcLocation) {
                FreightClientShipperTableRow rowFreightClientShipperTableRow = ((FreightClientShipperTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StationNumber,
                        WorkStationID,
                        SortTypeID,
                        FreightID,
                        SortType,
                        FreightType,
                        TerminalID,
                        TDSNumber,
                        TrailerNumber,
                        VendorKey,
                        ClientNumber,
                        ClientDivision,
                        PickupDate,
                        PickupNumber,
                        Client,
                        ClientAddressLine1,
                        ClientAddressLine2,
                        ClientAddressCity,
                        ClientAddressState,
                        ClientAddressZip,
                        CubeRatio,
                        ShipperNumber,
                        Shipper,
                        ShipperAddressLine1,
                        ShipperAddressLine2,
                        ShipperAddressCity,
                        ShipperAddressZip,
                        ShipperAddressState,
                        ShipperUserData,
                        LabelID,
                        ExcLocation};
                rowFreightClientShipperTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFreightClientShipperTableRow);
                return rowFreightClientShipperTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FreightClientShipperTableDataTable cln = ((FreightClientShipperTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FreightClientShipperTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStationNumber = base.Columns["StationNumber"];
                this.columnWorkStationID = base.Columns["WorkStationID"];
                this.columnSortTypeID = base.Columns["SortTypeID"];
                this.columnFreightID = base.Columns["FreightID"];
                this.columnSortType = base.Columns["SortType"];
                this.columnFreightType = base.Columns["FreightType"];
                this.columnTerminalID = base.Columns["TerminalID"];
                this.columnTDSNumber = base.Columns["TDSNumber"];
                this.columnTrailerNumber = base.Columns["TrailerNumber"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnClientDivision = base.Columns["ClientDivision"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnClient = base.Columns["Client"];
                this.columnClientAddressLine1 = base.Columns["ClientAddressLine1"];
                this.columnClientAddressLine2 = base.Columns["ClientAddressLine2"];
                this.columnClientAddressCity = base.Columns["ClientAddressCity"];
                this.columnClientAddressState = base.Columns["ClientAddressState"];
                this.columnClientAddressZip = base.Columns["ClientAddressZip"];
                this.columnCubeRatio = base.Columns["CubeRatio"];
                this.columnShipperNumber = base.Columns["ShipperNumber"];
                this.columnShipper = base.Columns["Shipper"];
                this.columnShipperAddressLine1 = base.Columns["ShipperAddressLine1"];
                this.columnShipperAddressLine2 = base.Columns["ShipperAddressLine2"];
                this.columnShipperAddressCity = base.Columns["ShipperAddressCity"];
                this.columnShipperAddressZip = base.Columns["ShipperAddressZip"];
                this.columnShipperAddressState = base.Columns["ShipperAddressState"];
                this.columnShipperUserData = base.Columns["ShipperUserData"];
                this.columnLabelID = base.Columns["LabelID"];
                this.columnExcLocation = base.Columns["ExcLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStationNumber = new global::System.Data.DataColumn("StationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationNumber);
                this.columnWorkStationID = new global::System.Data.DataColumn("WorkStationID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkStationID);
                this.columnSortTypeID = new global::System.Data.DataColumn("SortTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortTypeID);
                this.columnFreightID = new global::System.Data.DataColumn("FreightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightID);
                this.columnSortType = new global::System.Data.DataColumn("SortType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortType);
                this.columnFreightType = new global::System.Data.DataColumn("FreightType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightType);
                this.columnTerminalID = new global::System.Data.DataColumn("TerminalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminalID);
                this.columnTDSNumber = new global::System.Data.DataColumn("TDSNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSNumber);
                this.columnTrailerNumber = new global::System.Data.DataColumn("TrailerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrailerNumber);
                this.columnVendorKey = new global::System.Data.DataColumn("VendorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnClientNumber = new global::System.Data.DataColumn("ClientNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnClientDivision = new global::System.Data.DataColumn("ClientDivision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientDivision);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new global::System.Data.DataColumn("PickupNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnClient = new global::System.Data.DataColumn("Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient);
                this.columnClientAddressLine1 = new global::System.Data.DataColumn("ClientAddressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddressLine1);
                this.columnClientAddressLine2 = new global::System.Data.DataColumn("ClientAddressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddressLine2);
                this.columnClientAddressCity = new global::System.Data.DataColumn("ClientAddressCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddressCity);
                this.columnClientAddressState = new global::System.Data.DataColumn("ClientAddressState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddressState);
                this.columnClientAddressZip = new global::System.Data.DataColumn("ClientAddressZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddressZip);
                this.columnCubeRatio = new global::System.Data.DataColumn("CubeRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCubeRatio);
                this.columnShipperNumber = new global::System.Data.DataColumn("ShipperNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperNumber);
                this.columnShipper = new global::System.Data.DataColumn("Shipper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipper);
                this.columnShipperAddressLine1 = new global::System.Data.DataColumn("ShipperAddressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperAddressLine1);
                this.columnShipperAddressLine2 = new global::System.Data.DataColumn("ShipperAddressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperAddressLine2);
                this.columnShipperAddressCity = new global::System.Data.DataColumn("ShipperAddressCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperAddressCity);
                this.columnShipperAddressZip = new global::System.Data.DataColumn("ShipperAddressZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperAddressZip);
                this.columnShipperAddressState = new global::System.Data.DataColumn("ShipperAddressState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperAddressState);
                this.columnShipperUserData = new global::System.Data.DataColumn("ShipperUserData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperUserData);
                this.columnLabelID = new global::System.Data.DataColumn("LabelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelID);
                this.columnExcLocation = new global::System.Data.DataColumn("ExcLocation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightClientShipperTableRow NewFreightClientShipperTableRow() {
                return ((FreightClientShipperTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FreightClientShipperTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FreightClientShipperTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FreightClientShipperTableRowChanged != null)) {
                    this.FreightClientShipperTableRowChanged(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FreightClientShipperTableRowChanging != null)) {
                    this.FreightClientShipperTableRowChanging(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FreightClientShipperTableRowDeleted != null)) {
                    this.FreightClientShipperTableRowDeleted(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FreightClientShipperTableRowDeleting != null)) {
                    this.FreightClientShipperTableRowDeleting(this, new FreightClientShipperTableRowChangeEvent(((FreightClientShipperTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFreightClientShipperTableRow(FreightClientShipperTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StationAssignmentDS ds = new StationAssignmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FreightClientShipperTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FreightClientShipperTableRow : global::System.Data.DataRow {
            
            private FreightClientShipperTableDataTable tableFreightClientShipperTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FreightClientShipperTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFreightClientShipperTable = ((FreightClientShipperTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StationNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.StationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StationNumber\' in table \'FreightClientShipperTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.StationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkStationID {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.WorkStationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkStationID\' in table \'FreightClientShipperTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.WorkStationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortTypeID {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.SortTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortTypeID\' in table \'FreightClientShipperTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.SortTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightID {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.FreightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightID\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.FreightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SortType {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.SortTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortType\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.SortTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightType {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.FreightTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightType\' in table \'FreightClientShipperTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.FreightTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.TerminalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerminalID\' in table \'FreightClientShipperTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.TerminalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDSNumber {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.TDSNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSNumber\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.TDSNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.TrailerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrailerNumber\' in table \'FreightClientShipperTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.TrailerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.VendorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.VendorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'FreightClientShipperTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientDivision {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientDivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientDivision\' in table \'FreightClientShipperTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientDivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupDate {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'FreightClientShipperTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.PickupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'FreightClientShipperTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.PickupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Client {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Client\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressLine1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAddressLine1\' in table \'FreightClientShipperTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressLine2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAddressLine2\' in table \'FreightClientShipperTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAddressCity {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAddressCity\' in table \'FreightClientShipperTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAddressState {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAddressState\' in table \'FreightClientShipperTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAddressZip {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ClientAddressZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAddressZip\' in table \'FreightClientShipperTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ClientAddressZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CubeRatio {
                get {
                    try {
                        return ((decimal)(this[this.tableFreightClientShipperTable.CubeRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CubeRatio\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.CubeRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperNumber {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperNumber\' in table \'FreightClientShipperTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shipper {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipper\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperAddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressLine1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperAddressLine1\' in table \'FreightClientShipperTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperAddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressLine2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperAddressLine2\' in table \'FreightClientShipperTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperAddressCity {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperAddressCity\' in table \'FreightClientShipperTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperAddressZip {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperAddressZip\' in table \'FreightClientShipperTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperAddressState {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperAddressStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperAddressState\' in table \'FreightClientShipperTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperAddressStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperUserData {
                get {
                    try {
                        return ((string)(this[this.tableFreightClientShipperTable.ShipperUserDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperUserData\' in table \'FreightClientShipperTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ShipperUserDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LabelID {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.LabelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelID\' in table \'FreightClientShipperTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.LabelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExcLocation {
                get {
                    try {
                        return ((int)(this[this.tableFreightClientShipperTable.ExcLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExcLocation\' in table \'FreightClientShipperTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFreightClientShipperTable.ExcLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.StationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationNumberNull() {
                this[this.tableFreightClientShipperTable.StationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkStationIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.WorkStationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkStationIDNull() {
                this[this.tableFreightClientShipperTable.WorkStationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTypeIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.SortTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTypeIDNull() {
                this[this.tableFreightClientShipperTable.SortTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.FreightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightIDNull() {
                this[this.tableFreightClientShipperTable.FreightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTypeNull() {
                return this.IsNull(this.tableFreightClientShipperTable.SortTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTypeNull() {
                this[this.tableFreightClientShipperTable.SortTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightTypeNull() {
                return this.IsNull(this.tableFreightClientShipperTable.FreightTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightTypeNull() {
                this[this.tableFreightClientShipperTable.FreightTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.TerminalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalIDNull() {
                this[this.tableFreightClientShipperTable.TerminalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.TDSNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSNumberNull() {
                this[this.tableFreightClientShipperTable.TDSNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrailerNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.TrailerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrailerNumberNull() {
                this[this.tableFreightClientShipperTable.TrailerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableFreightClientShipperTable.VendorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tableFreightClientShipperTable.VendorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableFreightClientShipperTable.ClientNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientDivisionNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientDivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientDivisionNull() {
                this[this.tableFreightClientShipperTable.ClientDivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableFreightClientShipperTable.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableFreightClientShipperTable.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.PickupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tableFreightClientShipperTable.PickupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNull() {
                this[this.tableFreightClientShipperTable.ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAddressLine1Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressLine1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAddressLine1Null() {
                this[this.tableFreightClientShipperTable.ClientAddressLine1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAddressLine2Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressLine2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAddressLine2Null() {
                this[this.tableFreightClientShipperTable.ClientAddressLine2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAddressCityNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAddressCityNull() {
                this[this.tableFreightClientShipperTable.ClientAddressCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAddressStateNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAddressStateNull() {
                this[this.tableFreightClientShipperTable.ClientAddressStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAddressZipNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ClientAddressZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAddressZipNull() {
                this[this.tableFreightClientShipperTable.ClientAddressZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCubeRatioNull() {
                return this.IsNull(this.tableFreightClientShipperTable.CubeRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCubeRatioNull() {
                this[this.tableFreightClientShipperTable.CubeRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNumberNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNumberNull() {
                this[this.tableFreightClientShipperTable.ShipperNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNull() {
                this[this.tableFreightClientShipperTable.ShipperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperAddressLine1Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressLine1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperAddressLine1Null() {
                this[this.tableFreightClientShipperTable.ShipperAddressLine1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperAddressLine2Null() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressLine2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperAddressLine2Null() {
                this[this.tableFreightClientShipperTable.ShipperAddressLine2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperAddressCityNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperAddressCityNull() {
                this[this.tableFreightClientShipperTable.ShipperAddressCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperAddressZipNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperAddressZipNull() {
                this[this.tableFreightClientShipperTable.ShipperAddressZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperAddressStateNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperAddressStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperAddressStateNull() {
                this[this.tableFreightClientShipperTable.ShipperAddressStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperUserDataNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ShipperUserDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperUserDataNull() {
                this[this.tableFreightClientShipperTable.ShipperUserDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelIDNull() {
                return this.IsNull(this.tableFreightClientShipperTable.LabelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelIDNull() {
                this[this.tableFreightClientShipperTable.LabelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExcLocationNull() {
                return this.IsNull(this.tableFreightClientShipperTable.ExcLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExcLocationNull() {
                this[this.tableFreightClientShipperTable.ExcLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FreightClientShipperTableRowChangeEvent : global::System.EventArgs {
            
            private FreightClientShipperTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightClientShipperTableRowChangeEvent(FreightClientShipperTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FreightClientShipperTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591