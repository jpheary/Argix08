//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Sort {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DestinationRoutingDS : DataSet {
        
        private DestinationRoutingTableDataTable tableDestinationRoutingTable;
        
        public DestinationRoutingDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DestinationRoutingDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["DestinationRoutingTable"] != null)) {
                    this.Tables.Add(new DestinationRoutingTableDataTable(ds.Tables["DestinationRoutingTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DestinationRoutingTableDataTable DestinationRoutingTable {
            get {
                return this.tableDestinationRoutingTable;
            }
        }
        
        public override DataSet Clone() {
            DestinationRoutingDS cln = ((DestinationRoutingDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["DestinationRoutingTable"] != null)) {
                this.Tables.Add(new DestinationRoutingTableDataTable(ds.Tables["DestinationRoutingTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableDestinationRoutingTable = ((DestinationRoutingTableDataTable)(this.Tables["DestinationRoutingTable"]));
            if ((this.tableDestinationRoutingTable != null)) {
                this.tableDestinationRoutingTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DestinationRoutingDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DestinationRoutingDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableDestinationRoutingTable = new DestinationRoutingTableDataTable();
            this.Tables.Add(this.tableDestinationRoutingTable);
        }
        
        private bool ShouldSerializeDestinationRoutingTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void DestinationRoutingTableRowChangeEventHandler(object sender, DestinationRoutingTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DestinationRoutingTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnclientNumber;
            
            private DataColumn columndestinationName;
            
            private DataColumn columndestinationNumber;
            
            private DataColumn columndestinationPhone;
            
            private DataColumn columndestinationAddressLine1;
            
            private DataColumn columndestinationAddressLine2;
            
            private DataColumn columndestinationAddressCity;
            
            private DataColumn columndestinationAddressState;
            
            private DataColumn columndestinationAddressZip;
            
            private DataColumn columndestinationAltRoute;
            
            private DataColumn columndestinationRoute;
            
            private DataColumn columndestinationUserLabelData;
            
            private DataColumn columndestinationStatus;
            
            private DataColumn columndestinationOpenDate;
            
            private DataColumn columnlocalLane;
            
            private DataColumn columnosURSACode;
            
            private DataColumn columnOSSequence;
            
            private DataColumn columnzoneCode;
            
            private DataColumn columnZoneType;
            
            private DataColumn columnoutboundLabelType;
            
            private DataColumn columnzoneLane;
            
            private DataColumn columnzoneLaneSmallSort;
            
            private DataColumn columnzoneTL;
            
            private DataColumn columnShiftDate;
            
            private DataColumn columnShiftNumber;
            
            private DataColumn columnTLDate;
            
            private DataColumn columnCloseNumber;
            
            private DataColumn columnManifestCartonNumber;
            
            private DataColumn columnManifestTrackingNumber;
            
            private DataColumn columnManifestPONumber;
            
            private DataColumn columnManifestWeight;
            
            internal DestinationRoutingTableDataTable() : 
                    base("DestinationRoutingTable") {
                this.InitClass();
            }
            
            internal DestinationRoutingTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn clientNumberColumn {
                get {
                    return this.columnclientNumber;
                }
            }
            
            internal DataColumn destinationNameColumn {
                get {
                    return this.columndestinationName;
                }
            }
            
            internal DataColumn destinationNumberColumn {
                get {
                    return this.columndestinationNumber;
                }
            }
            
            internal DataColumn destinationPhoneColumn {
                get {
                    return this.columndestinationPhone;
                }
            }
            
            internal DataColumn destinationAddressLine1Column {
                get {
                    return this.columndestinationAddressLine1;
                }
            }
            
            internal DataColumn destinationAddressLine2Column {
                get {
                    return this.columndestinationAddressLine2;
                }
            }
            
            internal DataColumn destinationAddressCityColumn {
                get {
                    return this.columndestinationAddressCity;
                }
            }
            
            internal DataColumn destinationAddressStateColumn {
                get {
                    return this.columndestinationAddressState;
                }
            }
            
            internal DataColumn destinationAddressZipColumn {
                get {
                    return this.columndestinationAddressZip;
                }
            }
            
            internal DataColumn destinationAltRouteColumn {
                get {
                    return this.columndestinationAltRoute;
                }
            }
            
            internal DataColumn destinationRouteColumn {
                get {
                    return this.columndestinationRoute;
                }
            }
            
            internal DataColumn destinationUserLabelDataColumn {
                get {
                    return this.columndestinationUserLabelData;
                }
            }
            
            internal DataColumn destinationStatusColumn {
                get {
                    return this.columndestinationStatus;
                }
            }
            
            internal DataColumn destinationOpenDateColumn {
                get {
                    return this.columndestinationOpenDate;
                }
            }
            
            internal DataColumn localLaneColumn {
                get {
                    return this.columnlocalLane;
                }
            }
            
            internal DataColumn osURSACodeColumn {
                get {
                    return this.columnosURSACode;
                }
            }
            
            internal DataColumn OSSequenceColumn {
                get {
                    return this.columnOSSequence;
                }
            }
            
            internal DataColumn zoneCodeColumn {
                get {
                    return this.columnzoneCode;
                }
            }
            
            internal DataColumn ZoneTypeColumn {
                get {
                    return this.columnZoneType;
                }
            }
            
            internal DataColumn outboundLabelTypeColumn {
                get {
                    return this.columnoutboundLabelType;
                }
            }
            
            internal DataColumn zoneLaneColumn {
                get {
                    return this.columnzoneLane;
                }
            }
            
            internal DataColumn zoneLaneSmallSortColumn {
                get {
                    return this.columnzoneLaneSmallSort;
                }
            }
            
            internal DataColumn zoneTLColumn {
                get {
                    return this.columnzoneTL;
                }
            }
            
            internal DataColumn ShiftDateColumn {
                get {
                    return this.columnShiftDate;
                }
            }
            
            internal DataColumn ShiftNumberColumn {
                get {
                    return this.columnShiftNumber;
                }
            }
            
            internal DataColumn TLDateColumn {
                get {
                    return this.columnTLDate;
                }
            }
            
            internal DataColumn CloseNumberColumn {
                get {
                    return this.columnCloseNumber;
                }
            }
            
            internal DataColumn ManifestCartonNumberColumn {
                get {
                    return this.columnManifestCartonNumber;
                }
            }
            
            internal DataColumn ManifestTrackingNumberColumn {
                get {
                    return this.columnManifestTrackingNumber;
                }
            }
            
            internal DataColumn ManifestPONumberColumn {
                get {
                    return this.columnManifestPONumber;
                }
            }
            
            internal DataColumn ManifestWeightColumn {
                get {
                    return this.columnManifestWeight;
                }
            }
            
            public DestinationRoutingTableRow this[int index] {
                get {
                    return ((DestinationRoutingTableRow)(this.Rows[index]));
                }
            }
            
            public event DestinationRoutingTableRowChangeEventHandler DestinationRoutingTableRowChanged;
            
            public event DestinationRoutingTableRowChangeEventHandler DestinationRoutingTableRowChanging;
            
            public event DestinationRoutingTableRowChangeEventHandler DestinationRoutingTableRowDeleted;
            
            public event DestinationRoutingTableRowChangeEventHandler DestinationRoutingTableRowDeleting;
            
            public void AddDestinationRoutingTableRow(DestinationRoutingTableRow row) {
                this.Rows.Add(row);
            }
            
            public DestinationRoutingTableRow AddDestinationRoutingTableRow(
                        string clientNumber, 
                        string destinationName, 
                        int destinationNumber, 
                        string destinationPhone, 
                        string destinationAddressLine1, 
                        string destinationAddressLine2, 
                        string destinationAddressCity, 
                        string destinationAddressState, 
                        string destinationAddressZip, 
                        string destinationAltRoute, 
                        string destinationRoute, 
                        string destinationUserLabelData, 
                        string destinationStatus, 
                        System.DateTime destinationOpenDate, 
                        string localLane, 
                        string osURSACode, 
                        int OSSequence, 
                        string zoneCode, 
                        string ZoneType, 
                        string outboundLabelType, 
                        string zoneLane, 
                        string zoneLaneSmallSort, 
                        string zoneTL, 
                        System.DateTime ShiftDate, 
                        string ShiftNumber, 
                        System.DateTime TLDate, 
                        string CloseNumber, 
                        string ManifestCartonNumber, 
                        string ManifestTrackingNumber, 
                        string ManifestPONumber, 
                        int ManifestWeight) {
                DestinationRoutingTableRow rowDestinationRoutingTableRow = ((DestinationRoutingTableRow)(this.NewRow()));
                rowDestinationRoutingTableRow.ItemArray = new object[] {
                        clientNumber,
                        destinationName,
                        destinationNumber,
                        destinationPhone,
                        destinationAddressLine1,
                        destinationAddressLine2,
                        destinationAddressCity,
                        destinationAddressState,
                        destinationAddressZip,
                        destinationAltRoute,
                        destinationRoute,
                        destinationUserLabelData,
                        destinationStatus,
                        destinationOpenDate,
                        localLane,
                        osURSACode,
                        OSSequence,
                        zoneCode,
                        ZoneType,
                        outboundLabelType,
                        zoneLane,
                        zoneLaneSmallSort,
                        zoneTL,
                        ShiftDate,
                        ShiftNumber,
                        TLDate,
                        CloseNumber,
                        ManifestCartonNumber,
                        ManifestTrackingNumber,
                        ManifestPONumber,
                        ManifestWeight};
                this.Rows.Add(rowDestinationRoutingTableRow);
                return rowDestinationRoutingTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DestinationRoutingTableDataTable cln = ((DestinationRoutingTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DestinationRoutingTableDataTable();
            }
            
            internal void InitVars() {
                this.columnclientNumber = this.Columns["clientNumber"];
                this.columndestinationName = this.Columns["destinationName"];
                this.columndestinationNumber = this.Columns["destinationNumber"];
                this.columndestinationPhone = this.Columns["destinationPhone"];
                this.columndestinationAddressLine1 = this.Columns["destinationAddressLine1"];
                this.columndestinationAddressLine2 = this.Columns["destinationAddressLine2"];
                this.columndestinationAddressCity = this.Columns["destinationAddressCity"];
                this.columndestinationAddressState = this.Columns["destinationAddressState"];
                this.columndestinationAddressZip = this.Columns["destinationAddressZip"];
                this.columndestinationAltRoute = this.Columns["destinationAltRoute"];
                this.columndestinationRoute = this.Columns["destinationRoute"];
                this.columndestinationUserLabelData = this.Columns["destinationUserLabelData"];
                this.columndestinationStatus = this.Columns["destinationStatus"];
                this.columndestinationOpenDate = this.Columns["destinationOpenDate"];
                this.columnlocalLane = this.Columns["localLane"];
                this.columnosURSACode = this.Columns["osURSACode"];
                this.columnOSSequence = this.Columns["OSSequence"];
                this.columnzoneCode = this.Columns["zoneCode"];
                this.columnZoneType = this.Columns["ZoneType"];
                this.columnoutboundLabelType = this.Columns["outboundLabelType"];
                this.columnzoneLane = this.Columns["zoneLane"];
                this.columnzoneLaneSmallSort = this.Columns["zoneLaneSmallSort"];
                this.columnzoneTL = this.Columns["zoneTL"];
                this.columnShiftDate = this.Columns["ShiftDate"];
                this.columnShiftNumber = this.Columns["ShiftNumber"];
                this.columnTLDate = this.Columns["TLDate"];
                this.columnCloseNumber = this.Columns["CloseNumber"];
                this.columnManifestCartonNumber = this.Columns["ManifestCartonNumber"];
                this.columnManifestTrackingNumber = this.Columns["ManifestTrackingNumber"];
                this.columnManifestPONumber = this.Columns["ManifestPONumber"];
                this.columnManifestWeight = this.Columns["ManifestWeight"];
            }
            
            private void InitClass() {
                this.columnclientNumber = new DataColumn("clientNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnclientNumber);
                this.columndestinationName = new DataColumn("destinationName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationName);
                this.columndestinationNumber = new DataColumn("destinationNumber", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationNumber);
                this.columndestinationPhone = new DataColumn("destinationPhone", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationPhone);
                this.columndestinationAddressLine1 = new DataColumn("destinationAddressLine1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationAddressLine1);
                this.columndestinationAddressLine2 = new DataColumn("destinationAddressLine2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationAddressLine2);
                this.columndestinationAddressCity = new DataColumn("destinationAddressCity", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationAddressCity);
                this.columndestinationAddressState = new DataColumn("destinationAddressState", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationAddressState);
                this.columndestinationAddressZip = new DataColumn("destinationAddressZip", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationAddressZip);
                this.columndestinationAltRoute = new DataColumn("destinationAltRoute", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationAltRoute);
                this.columndestinationRoute = new DataColumn("destinationRoute", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationRoute);
                this.columndestinationUserLabelData = new DataColumn("destinationUserLabelData", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationUserLabelData);
                this.columndestinationStatus = new DataColumn("destinationStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationStatus);
                this.columndestinationOpenDate = new DataColumn("destinationOpenDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestinationOpenDate);
                this.columnlocalLane = new DataColumn("localLane", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlocalLane);
                this.columnosURSACode = new DataColumn("osURSACode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnosURSACode);
                this.columnOSSequence = new DataColumn("OSSequence", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOSSequence);
                this.columnzoneCode = new DataColumn("zoneCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnzoneCode);
                this.columnZoneType = new DataColumn("ZoneType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZoneType);
                this.columnoutboundLabelType = new DataColumn("outboundLabelType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnoutboundLabelType);
                this.columnzoneLane = new DataColumn("zoneLane", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnzoneLane);
                this.columnzoneLaneSmallSort = new DataColumn("zoneLaneSmallSort", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnzoneLaneSmallSort);
                this.columnzoneTL = new DataColumn("zoneTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnzoneTL);
                this.columnShiftDate = new DataColumn("ShiftDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShiftDate);
                this.columnShiftNumber = new DataColumn("ShiftNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShiftNumber);
                this.columnTLDate = new DataColumn("TLDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTLDate);
                this.columnCloseNumber = new DataColumn("CloseNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCloseNumber);
                this.columnManifestCartonNumber = new DataColumn("ManifestCartonNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManifestCartonNumber);
                this.columnManifestTrackingNumber = new DataColumn("ManifestTrackingNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManifestTrackingNumber);
                this.columnManifestPONumber = new DataColumn("ManifestPONumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManifestPONumber);
                this.columnManifestWeight = new DataColumn("ManifestWeight", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManifestWeight);
                this.columnzoneLane.AllowDBNull = false;
                this.columnzoneLaneSmallSort.AllowDBNull = false;
                this.columnShiftNumber.AllowDBNull = false;
            }
            
            public DestinationRoutingTableRow NewDestinationRoutingTableRow() {
                return ((DestinationRoutingTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DestinationRoutingTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DestinationRoutingTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DestinationRoutingTableRowChanged != null)) {
                    this.DestinationRoutingTableRowChanged(this, new DestinationRoutingTableRowChangeEvent(((DestinationRoutingTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DestinationRoutingTableRowChanging != null)) {
                    this.DestinationRoutingTableRowChanging(this, new DestinationRoutingTableRowChangeEvent(((DestinationRoutingTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DestinationRoutingTableRowDeleted != null)) {
                    this.DestinationRoutingTableRowDeleted(this, new DestinationRoutingTableRowChangeEvent(((DestinationRoutingTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DestinationRoutingTableRowDeleting != null)) {
                    this.DestinationRoutingTableRowDeleting(this, new DestinationRoutingTableRowChangeEvent(((DestinationRoutingTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDestinationRoutingTableRow(DestinationRoutingTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DestinationRoutingTableRow : DataRow {
            
            private DestinationRoutingTableDataTable tableDestinationRoutingTable;
            
            internal DestinationRoutingTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDestinationRoutingTable = ((DestinationRoutingTableDataTable)(this.Table));
            }
            
            public string clientNumber {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.clientNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.clientNumberColumn] = value;
                }
            }
            
            public string destinationName {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationNameColumn] = value;
                }
            }
            
            public int destinationNumber {
                get {
                    try {
                        return ((int)(this[this.tableDestinationRoutingTable.destinationNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationNumberColumn] = value;
                }
            }
            
            public string destinationPhone {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationPhoneColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationPhoneColumn] = value;
                }
            }
            
            public string destinationAddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationAddressLine1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationAddressLine1Column] = value;
                }
            }
            
            public string destinationAddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationAddressLine2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationAddressLine2Column] = value;
                }
            }
            
            public string destinationAddressCity {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationAddressCityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationAddressCityColumn] = value;
                }
            }
            
            public string destinationAddressState {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationAddressStateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationAddressStateColumn] = value;
                }
            }
            
            public string destinationAddressZip {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationAddressZipColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationAddressZipColumn] = value;
                }
            }
            
            public string destinationAltRoute {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationAltRouteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationAltRouteColumn] = value;
                }
            }
            
            public string destinationRoute {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationRouteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationRouteColumn] = value;
                }
            }
            
            public string destinationUserLabelData {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationUserLabelDataColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationUserLabelDataColumn] = value;
                }
            }
            
            public string destinationStatus {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.destinationStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationStatusColumn] = value;
                }
            }
            
            public System.DateTime destinationOpenDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDestinationRoutingTable.destinationOpenDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.destinationOpenDateColumn] = value;
                }
            }
            
            public string localLane {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.localLaneColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.localLaneColumn] = value;
                }
            }
            
            public string osURSACode {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.osURSACodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.osURSACodeColumn] = value;
                }
            }
            
            public int OSSequence {
                get {
                    try {
                        return ((int)(this[this.tableDestinationRoutingTable.OSSequenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.OSSequenceColumn] = value;
                }
            }
            
            public string zoneCode {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.zoneCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.zoneCodeColumn] = value;
                }
            }
            
            public string ZoneType {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.ZoneTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.ZoneTypeColumn] = value;
                }
            }
            
            public string outboundLabelType {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.outboundLabelTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.outboundLabelTypeColumn] = value;
                }
            }
            
            public string zoneLane {
                get {
                    return ((string)(this[this.tableDestinationRoutingTable.zoneLaneColumn]));
                }
                set {
                    this[this.tableDestinationRoutingTable.zoneLaneColumn] = value;
                }
            }
            
            public string zoneLaneSmallSort {
                get {
                    return ((string)(this[this.tableDestinationRoutingTable.zoneLaneSmallSortColumn]));
                }
                set {
                    this[this.tableDestinationRoutingTable.zoneLaneSmallSortColumn] = value;
                }
            }
            
            public string zoneTL {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.zoneTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.zoneTLColumn] = value;
                }
            }
            
            public System.DateTime ShiftDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDestinationRoutingTable.ShiftDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.ShiftDateColumn] = value;
                }
            }
            
            public string ShiftNumber {
                get {
                    return ((string)(this[this.tableDestinationRoutingTable.ShiftNumberColumn]));
                }
                set {
                    this[this.tableDestinationRoutingTable.ShiftNumberColumn] = value;
                }
            }
            
            public System.DateTime TLDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDestinationRoutingTable.TLDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.TLDateColumn] = value;
                }
            }
            
            public string CloseNumber {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.CloseNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.CloseNumberColumn] = value;
                }
            }
            
            public string ManifestCartonNumber {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.ManifestCartonNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.ManifestCartonNumberColumn] = value;
                }
            }
            
            public string ManifestTrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.ManifestTrackingNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.ManifestTrackingNumberColumn] = value;
                }
            }
            
            public string ManifestPONumber {
                get {
                    try {
                        return ((string)(this[this.tableDestinationRoutingTable.ManifestPONumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.ManifestPONumberColumn] = value;
                }
            }
            
            public int ManifestWeight {
                get {
                    try {
                        return ((int)(this[this.tableDestinationRoutingTable.ManifestWeightColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestinationRoutingTable.ManifestWeightColumn] = value;
                }
            }
            
            public bool IsclientNumberNull() {
                return this.IsNull(this.tableDestinationRoutingTable.clientNumberColumn);
            }
            
            public void SetclientNumberNull() {
                this[this.tableDestinationRoutingTable.clientNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationNameNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationNameColumn);
            }
            
            public void SetdestinationNameNull() {
                this[this.tableDestinationRoutingTable.destinationNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationNumberNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationNumberColumn);
            }
            
            public void SetdestinationNumberNull() {
                this[this.tableDestinationRoutingTable.destinationNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationPhoneNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationPhoneColumn);
            }
            
            public void SetdestinationPhoneNull() {
                this[this.tableDestinationRoutingTable.destinationPhoneColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationAddressLine1Null() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationAddressLine1Column);
            }
            
            public void SetdestinationAddressLine1Null() {
                this[this.tableDestinationRoutingTable.destinationAddressLine1Column] = System.Convert.DBNull;
            }
            
            public bool IsdestinationAddressLine2Null() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationAddressLine2Column);
            }
            
            public void SetdestinationAddressLine2Null() {
                this[this.tableDestinationRoutingTable.destinationAddressLine2Column] = System.Convert.DBNull;
            }
            
            public bool IsdestinationAddressCityNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationAddressCityColumn);
            }
            
            public void SetdestinationAddressCityNull() {
                this[this.tableDestinationRoutingTable.destinationAddressCityColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationAddressStateNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationAddressStateColumn);
            }
            
            public void SetdestinationAddressStateNull() {
                this[this.tableDestinationRoutingTable.destinationAddressStateColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationAddressZipNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationAddressZipColumn);
            }
            
            public void SetdestinationAddressZipNull() {
                this[this.tableDestinationRoutingTable.destinationAddressZipColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationAltRouteNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationAltRouteColumn);
            }
            
            public void SetdestinationAltRouteNull() {
                this[this.tableDestinationRoutingTable.destinationAltRouteColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationRouteNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationRouteColumn);
            }
            
            public void SetdestinationRouteNull() {
                this[this.tableDestinationRoutingTable.destinationRouteColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationUserLabelDataNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationUserLabelDataColumn);
            }
            
            public void SetdestinationUserLabelDataNull() {
                this[this.tableDestinationRoutingTable.destinationUserLabelDataColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationStatusNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationStatusColumn);
            }
            
            public void SetdestinationStatusNull() {
                this[this.tableDestinationRoutingTable.destinationStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestinationOpenDateNull() {
                return this.IsNull(this.tableDestinationRoutingTable.destinationOpenDateColumn);
            }
            
            public void SetdestinationOpenDateNull() {
                this[this.tableDestinationRoutingTable.destinationOpenDateColumn] = System.Convert.DBNull;
            }
            
            public bool IslocalLaneNull() {
                return this.IsNull(this.tableDestinationRoutingTable.localLaneColumn);
            }
            
            public void SetlocalLaneNull() {
                this[this.tableDestinationRoutingTable.localLaneColumn] = System.Convert.DBNull;
            }
            
            public bool IsosURSACodeNull() {
                return this.IsNull(this.tableDestinationRoutingTable.osURSACodeColumn);
            }
            
            public void SetosURSACodeNull() {
                this[this.tableDestinationRoutingTable.osURSACodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsOSSequenceNull() {
                return this.IsNull(this.tableDestinationRoutingTable.OSSequenceColumn);
            }
            
            public void SetOSSequenceNull() {
                this[this.tableDestinationRoutingTable.OSSequenceColumn] = System.Convert.DBNull;
            }
            
            public bool IszoneCodeNull() {
                return this.IsNull(this.tableDestinationRoutingTable.zoneCodeColumn);
            }
            
            public void SetzoneCodeNull() {
                this[this.tableDestinationRoutingTable.zoneCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsZoneTypeNull() {
                return this.IsNull(this.tableDestinationRoutingTable.ZoneTypeColumn);
            }
            
            public void SetZoneTypeNull() {
                this[this.tableDestinationRoutingTable.ZoneTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsoutboundLabelTypeNull() {
                return this.IsNull(this.tableDestinationRoutingTable.outboundLabelTypeColumn);
            }
            
            public void SetoutboundLabelTypeNull() {
                this[this.tableDestinationRoutingTable.outboundLabelTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IszoneTLNull() {
                return this.IsNull(this.tableDestinationRoutingTable.zoneTLColumn);
            }
            
            public void SetzoneTLNull() {
                this[this.tableDestinationRoutingTable.zoneTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsShiftDateNull() {
                return this.IsNull(this.tableDestinationRoutingTable.ShiftDateColumn);
            }
            
            public void SetShiftDateNull() {
                this[this.tableDestinationRoutingTable.ShiftDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsTLDateNull() {
                return this.IsNull(this.tableDestinationRoutingTable.TLDateColumn);
            }
            
            public void SetTLDateNull() {
                this[this.tableDestinationRoutingTable.TLDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsCloseNumberNull() {
                return this.IsNull(this.tableDestinationRoutingTable.CloseNumberColumn);
            }
            
            public void SetCloseNumberNull() {
                this[this.tableDestinationRoutingTable.CloseNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsManifestCartonNumberNull() {
                return this.IsNull(this.tableDestinationRoutingTable.ManifestCartonNumberColumn);
            }
            
            public void SetManifestCartonNumberNull() {
                this[this.tableDestinationRoutingTable.ManifestCartonNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsManifestTrackingNumberNull() {
                return this.IsNull(this.tableDestinationRoutingTable.ManifestTrackingNumberColumn);
            }
            
            public void SetManifestTrackingNumberNull() {
                this[this.tableDestinationRoutingTable.ManifestTrackingNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsManifestPONumberNull() {
                return this.IsNull(this.tableDestinationRoutingTable.ManifestPONumberColumn);
            }
            
            public void SetManifestPONumberNull() {
                this[this.tableDestinationRoutingTable.ManifestPONumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsManifestWeightNull() {
                return this.IsNull(this.tableDestinationRoutingTable.ManifestWeightColumn);
            }
            
            public void SetManifestWeightNull() {
                this[this.tableDestinationRoutingTable.ManifestWeightColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DestinationRoutingTableRowChangeEvent : EventArgs {
            
            private DestinationRoutingTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public DestinationRoutingTableRowChangeEvent(DestinationRoutingTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DestinationRoutingTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
