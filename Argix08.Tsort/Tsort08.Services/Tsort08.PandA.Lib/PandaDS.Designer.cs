//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Tsort {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PandaDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PandaDS : global::System.Data.DataSet {
        
        private PandaTableDataTable tablePandaTable;
        
        private PacketTableDataTable tablePacketTable;
        
        private CartonTableDataTable tableCartonTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PandaDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PandaDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PandaTable"] != null)) {
                    base.Tables.Add(new PandaTableDataTable(ds.Tables["PandaTable"]));
                }
                if ((ds.Tables["PacketTable"] != null)) {
                    base.Tables.Add(new PacketTableDataTable(ds.Tables["PacketTable"]));
                }
                if ((ds.Tables["CartonTable"] != null)) {
                    base.Tables.Add(new CartonTableDataTable(ds.Tables["CartonTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PandaTableDataTable PandaTable {
            get {
                return this.tablePandaTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PacketTableDataTable PacketTable {
            get {
                return this.tablePacketTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CartonTableDataTable CartonTable {
            get {
                return this.tableCartonTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PandaDS cln = ((PandaDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PandaTable"] != null)) {
                    base.Tables.Add(new PandaTableDataTable(ds.Tables["PandaTable"]));
                }
                if ((ds.Tables["PacketTable"] != null)) {
                    base.Tables.Add(new PacketTableDataTable(ds.Tables["PacketTable"]));
                }
                if ((ds.Tables["CartonTable"] != null)) {
                    base.Tables.Add(new CartonTableDataTable(ds.Tables["CartonTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePandaTable = ((PandaTableDataTable)(base.Tables["PandaTable"]));
            if ((initTable == true)) {
                if ((this.tablePandaTable != null)) {
                    this.tablePandaTable.InitVars();
                }
            }
            this.tablePacketTable = ((PacketTableDataTable)(base.Tables["PacketTable"]));
            if ((initTable == true)) {
                if ((this.tablePacketTable != null)) {
                    this.tablePacketTable.InitVars();
                }
            }
            this.tableCartonTable = ((CartonTableDataTable)(base.Tables["CartonTable"]));
            if ((initTable == true)) {
                if ((this.tableCartonTable != null)) {
                    this.tableCartonTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PandaDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PandaDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePandaTable = new PandaTableDataTable();
            base.Tables.Add(this.tablePandaTable);
            this.tablePacketTable = new PacketTableDataTable();
            base.Tables.Add(this.tablePacketTable);
            this.tableCartonTable = new CartonTableDataTable();
            base.Tables.Add(this.tableCartonTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePandaTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePacketTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCartonTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PandaDS ds = new PandaDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PandaTableRowChangeEventHandler(object sender, PandaTableRowChangeEvent e);
        
        public delegate void PacketTableRowChangeEventHandler(object sender, PacketTableRowChangeEvent e);
        
        public delegate void CartonTableRowChangeEventHandler(object sender, CartonTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PandaTableDataTable : global::System.Data.TypedTableBase<PandaTableRow> {
            
            private global::System.Data.DataColumn columnCartonID;
            
            private global::System.Data.DataColumn columnStatusCode;
            
            private global::System.Data.DataColumn columnLabelData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PandaTableDataTable() {
                this.TableName = "PandaTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PandaTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PandaTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonIDColumn {
                get {
                    return this.columnCartonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusCodeColumn {
                get {
                    return this.columnStatusCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelDataColumn {
                get {
                    return this.columnLabelData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PandaTableRow this[int index] {
                get {
                    return ((PandaTableRow)(this.Rows[index]));
                }
            }
            
            public event PandaTableRowChangeEventHandler PandaTableRowChanging;
            
            public event PandaTableRowChangeEventHandler PandaTableRowChanged;
            
            public event PandaTableRowChangeEventHandler PandaTableRowDeleting;
            
            public event PandaTableRowChangeEventHandler PandaTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPandaTableRow(PandaTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PandaTableRow AddPandaTableRow(string CartonID, int StatusCode, string LabelData) {
                PandaTableRow rowPandaTableRow = ((PandaTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CartonID,
                        StatusCode,
                        LabelData};
                rowPandaTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPandaTableRow);
                return rowPandaTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PandaTableDataTable cln = ((PandaTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PandaTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCartonID = base.Columns["CartonID"];
                this.columnStatusCode = base.Columns["StatusCode"];
                this.columnLabelData = base.Columns["LabelData"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCartonID = new global::System.Data.DataColumn("CartonID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonID);
                this.columnStatusCode = new global::System.Data.DataColumn("StatusCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusCode);
                this.columnLabelData = new global::System.Data.DataColumn("LabelData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelData);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PandaTableRow NewPandaTableRow() {
                return ((PandaTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PandaTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PandaTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PandaTableRowChanged != null)) {
                    this.PandaTableRowChanged(this, new PandaTableRowChangeEvent(((PandaTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PandaTableRowChanging != null)) {
                    this.PandaTableRowChanging(this, new PandaTableRowChangeEvent(((PandaTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PandaTableRowDeleted != null)) {
                    this.PandaTableRowDeleted(this, new PandaTableRowChangeEvent(((PandaTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PandaTableRowDeleting != null)) {
                    this.PandaTableRowDeleting(this, new PandaTableRowChangeEvent(((PandaTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePandaTableRow(PandaTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PandaDS ds = new PandaDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PandaTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PacketTableDataTable : global::System.Data.TypedTableBase<PacketTableRow> {
            
            private global::System.Data.DataColumn columnReceived;
            
            private global::System.Data.DataColumn columnMessageLength;
            
            private global::System.Data.DataColumn columnMessageCode;
            
            private global::System.Data.DataColumn columnMessageNumber;
            
            private global::System.Data.DataColumn columnOriginalMessageCode;
            
            private global::System.Data.DataColumn columnMessageFlags;
            
            private global::System.Data.DataColumn columnRecordIterator;
            
            private global::System.Data.DataColumn columnMessageBody;
            
            private global::System.Data.DataColumn columnValid;
            
            private global::System.Data.DataColumn columnException;
            
            private global::System.Data.DataColumn columnProcessingTime;
            
            private global::System.Data.DataColumn columnClientID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketTableDataTable() {
                this.TableName = "PacketTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PacketTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PacketTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedColumn {
                get {
                    return this.columnReceived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageLengthColumn {
                get {
                    return this.columnMessageLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageCodeColumn {
                get {
                    return this.columnMessageCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageNumberColumn {
                get {
                    return this.columnMessageNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalMessageCodeColumn {
                get {
                    return this.columnOriginalMessageCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageFlagsColumn {
                get {
                    return this.columnMessageFlags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordIteratorColumn {
                get {
                    return this.columnRecordIterator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageBodyColumn {
                get {
                    return this.columnMessageBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidColumn {
                get {
                    return this.columnValid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExceptionColumn {
                get {
                    return this.columnException;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProcessingTimeColumn {
                get {
                    return this.columnProcessingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketTableRow this[int index] {
                get {
                    return ((PacketTableRow)(this.Rows[index]));
                }
            }
            
            public event PacketTableRowChangeEventHandler PacketTableRowChanging;
            
            public event PacketTableRowChangeEventHandler PacketTableRowChanged;
            
            public event PacketTableRowChangeEventHandler PacketTableRowDeleting;
            
            public event PacketTableRowChangeEventHandler PacketTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPacketTableRow(PacketTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketTableRow AddPacketTableRow(System.DateTime Received, int MessageLength, int MessageCode, int MessageNumber, int OriginalMessageCode, int MessageFlags, int RecordIterator, string MessageBody, bool Valid, string Exception, float ProcessingTime, string ClientID) {
                PacketTableRow rowPacketTableRow = ((PacketTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Received,
                        MessageLength,
                        MessageCode,
                        MessageNumber,
                        OriginalMessageCode,
                        MessageFlags,
                        RecordIterator,
                        MessageBody,
                        Valid,
                        Exception,
                        ProcessingTime,
                        ClientID};
                rowPacketTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPacketTableRow);
                return rowPacketTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PacketTableDataTable cln = ((PacketTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PacketTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceived = base.Columns["Received"];
                this.columnMessageLength = base.Columns["MessageLength"];
                this.columnMessageCode = base.Columns["MessageCode"];
                this.columnMessageNumber = base.Columns["MessageNumber"];
                this.columnOriginalMessageCode = base.Columns["OriginalMessageCode"];
                this.columnMessageFlags = base.Columns["MessageFlags"];
                this.columnRecordIterator = base.Columns["RecordIterator"];
                this.columnMessageBody = base.Columns["MessageBody"];
                this.columnValid = base.Columns["Valid"];
                this.columnException = base.Columns["Exception"];
                this.columnProcessingTime = base.Columns["ProcessingTime"];
                this.columnClientID = base.Columns["ClientID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceived = new global::System.Data.DataColumn("Received", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived);
                this.columnMessageLength = new global::System.Data.DataColumn("MessageLength", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageLength);
                this.columnMessageCode = new global::System.Data.DataColumn("MessageCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageCode);
                this.columnMessageNumber = new global::System.Data.DataColumn("MessageNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageNumber);
                this.columnOriginalMessageCode = new global::System.Data.DataColumn("OriginalMessageCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalMessageCode);
                this.columnMessageFlags = new global::System.Data.DataColumn("MessageFlags", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageFlags);
                this.columnRecordIterator = new global::System.Data.DataColumn("RecordIterator", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordIterator);
                this.columnMessageBody = new global::System.Data.DataColumn("MessageBody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageBody);
                this.columnValid = new global::System.Data.DataColumn("Valid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValid);
                this.columnException = new global::System.Data.DataColumn("Exception", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnException);
                this.columnProcessingTime = new global::System.Data.DataColumn("ProcessingTime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessingTime);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnReceived.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketTableRow NewPacketTableRow() {
                return ((PacketTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PacketTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PacketTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PacketTableRowChanged != null)) {
                    this.PacketTableRowChanged(this, new PacketTableRowChangeEvent(((PacketTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PacketTableRowChanging != null)) {
                    this.PacketTableRowChanging(this, new PacketTableRowChangeEvent(((PacketTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PacketTableRowDeleted != null)) {
                    this.PacketTableRowDeleted(this, new PacketTableRowChangeEvent(((PacketTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PacketTableRowDeleting != null)) {
                    this.PacketTableRowDeleting(this, new PacketTableRowChangeEvent(((PacketTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePacketTableRow(PacketTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PandaDS ds = new PandaDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PacketTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CartonTableDataTable : global::System.Data.TypedTableBase<CartonTableRow> {
            
            private global::System.Data.DataColumn columnCartonID;
            
            private global::System.Data.DataColumn columnBarcode1;
            
            private global::System.Data.DataColumn columnBarcode2;
            
            private global::System.Data.DataColumn columnBarcode3;
            
            private global::System.Data.DataColumn columnBarcode4;
            
            private global::System.Data.DataColumn columnBarcode5;
            
            private global::System.Data.DataColumn columnBarcode6;
            
            private global::System.Data.DataColumn columnItemWeight;
            
            private global::System.Data.DataColumn columnStatusCode;
            
            private global::System.Data.DataColumn columnLabelFormat;
            
            private global::System.Data.DataColumn columnVerify;
            
            private global::System.Data.DataColumn columnLabelException;
            
            private global::System.Data.DataColumn columnSaveException;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CartonTableDataTable() {
                this.TableName = "CartonTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CartonTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CartonTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonIDColumn {
                get {
                    return this.columnCartonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Barcode1Column {
                get {
                    return this.columnBarcode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Barcode2Column {
                get {
                    return this.columnBarcode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Barcode3Column {
                get {
                    return this.columnBarcode3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Barcode4Column {
                get {
                    return this.columnBarcode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Barcode5Column {
                get {
                    return this.columnBarcode5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Barcode6Column {
                get {
                    return this.columnBarcode6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemWeightColumn {
                get {
                    return this.columnItemWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusCodeColumn {
                get {
                    return this.columnStatusCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelFormatColumn {
                get {
                    return this.columnLabelFormat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerifyColumn {
                get {
                    return this.columnVerify;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelExceptionColumn {
                get {
                    return this.columnLabelException;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaveExceptionColumn {
                get {
                    return this.columnSaveException;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CartonTableRow this[int index] {
                get {
                    return ((CartonTableRow)(this.Rows[index]));
                }
            }
            
            public event CartonTableRowChangeEventHandler CartonTableRowChanging;
            
            public event CartonTableRowChangeEventHandler CartonTableRowChanged;
            
            public event CartonTableRowChangeEventHandler CartonTableRowDeleting;
            
            public event CartonTableRowChangeEventHandler CartonTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCartonTableRow(CartonTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CartonTableRow AddCartonTableRow(string CartonID, string Barcode1, string Barcode2, string Barcode3, string Barcode4, string Barcode5, string Barcode6, decimal ItemWeight, int StatusCode, string LabelFormat, string Verify, string LabelException, string SaveException) {
                CartonTableRow rowCartonTableRow = ((CartonTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CartonID,
                        Barcode1,
                        Barcode2,
                        Barcode3,
                        Barcode4,
                        Barcode5,
                        Barcode6,
                        ItemWeight,
                        StatusCode,
                        LabelFormat,
                        Verify,
                        LabelException,
                        SaveException};
                rowCartonTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCartonTableRow);
                return rowCartonTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CartonTableDataTable cln = ((CartonTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CartonTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCartonID = base.Columns["CartonID"];
                this.columnBarcode1 = base.Columns["Barcode1"];
                this.columnBarcode2 = base.Columns["Barcode2"];
                this.columnBarcode3 = base.Columns["Barcode3"];
                this.columnBarcode4 = base.Columns["Barcode4"];
                this.columnBarcode5 = base.Columns["Barcode5"];
                this.columnBarcode6 = base.Columns["Barcode6"];
                this.columnItemWeight = base.Columns["ItemWeight"];
                this.columnStatusCode = base.Columns["StatusCode"];
                this.columnLabelFormat = base.Columns["LabelFormat"];
                this.columnVerify = base.Columns["Verify"];
                this.columnLabelException = base.Columns["LabelException"];
                this.columnSaveException = base.Columns["SaveException"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCartonID = new global::System.Data.DataColumn("CartonID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonID);
                this.columnBarcode1 = new global::System.Data.DataColumn("Barcode1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode1);
                this.columnBarcode2 = new global::System.Data.DataColumn("Barcode2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode2);
                this.columnBarcode3 = new global::System.Data.DataColumn("Barcode3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode3);
                this.columnBarcode4 = new global::System.Data.DataColumn("Barcode4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode4);
                this.columnBarcode5 = new global::System.Data.DataColumn("Barcode5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode5);
                this.columnBarcode6 = new global::System.Data.DataColumn("Barcode6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode6);
                this.columnItemWeight = new global::System.Data.DataColumn("ItemWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemWeight);
                this.columnStatusCode = new global::System.Data.DataColumn("StatusCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusCode);
                this.columnLabelFormat = new global::System.Data.DataColumn("LabelFormat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelFormat);
                this.columnVerify = new global::System.Data.DataColumn("Verify", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerify);
                this.columnLabelException = new global::System.Data.DataColumn("LabelException", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelException);
                this.columnSaveException = new global::System.Data.DataColumn("SaveException", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaveException);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CartonTableRow NewCartonTableRow() {
                return ((CartonTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CartonTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CartonTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CartonTableRowChanged != null)) {
                    this.CartonTableRowChanged(this, new CartonTableRowChangeEvent(((CartonTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CartonTableRowChanging != null)) {
                    this.CartonTableRowChanging(this, new CartonTableRowChangeEvent(((CartonTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CartonTableRowDeleted != null)) {
                    this.CartonTableRowDeleted(this, new CartonTableRowChangeEvent(((CartonTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CartonTableRowDeleting != null)) {
                    this.CartonTableRowDeleting(this, new CartonTableRowChangeEvent(((CartonTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCartonTableRow(CartonTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PandaDS ds = new PandaDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CartonTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PandaTableRow : global::System.Data.DataRow {
            
            private PandaTableDataTable tablePandaTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PandaTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePandaTable = ((PandaTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CartonID {
                get {
                    try {
                        return ((string)(this[this.tablePandaTable.CartonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonID\' in table \'PandaTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePandaTable.CartonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatusCode {
                get {
                    try {
                        return ((int)(this[this.tablePandaTable.StatusCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusCode\' in table \'PandaTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePandaTable.StatusCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabelData {
                get {
                    try {
                        return ((string)(this[this.tablePandaTable.LabelDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelData\' in table \'PandaTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePandaTable.LabelDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonIDNull() {
                return this.IsNull(this.tablePandaTable.CartonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonIDNull() {
                this[this.tablePandaTable.CartonIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusCodeNull() {
                return this.IsNull(this.tablePandaTable.StatusCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusCodeNull() {
                this[this.tablePandaTable.StatusCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelDataNull() {
                return this.IsNull(this.tablePandaTable.LabelDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelDataNull() {
                this[this.tablePandaTable.LabelDataColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PacketTableRow : global::System.Data.DataRow {
            
            private PacketTableDataTable tablePacketTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PacketTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePacketTable = ((PacketTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Received {
                get {
                    return ((global::System.DateTime)(this[this.tablePacketTable.ReceivedColumn]));
                }
                set {
                    this[this.tablePacketTable.ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MessageLength {
                get {
                    try {
                        return ((int)(this[this.tablePacketTable.MessageLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageLength\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.MessageLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MessageCode {
                get {
                    try {
                        return ((int)(this[this.tablePacketTable.MessageCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageCode\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.MessageCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MessageNumber {
                get {
                    try {
                        return ((int)(this[this.tablePacketTable.MessageNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageNumber\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.MessageNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OriginalMessageCode {
                get {
                    try {
                        return ((int)(this[this.tablePacketTable.OriginalMessageCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalMessageCode\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.OriginalMessageCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MessageFlags {
                get {
                    try {
                        return ((int)(this[this.tablePacketTable.MessageFlagsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageFlags\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.MessageFlagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecordIterator {
                get {
                    try {
                        return ((int)(this[this.tablePacketTable.RecordIteratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordIterator\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.RecordIteratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MessageBody {
                get {
                    try {
                        return ((string)(this[this.tablePacketTable.MessageBodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageBody\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.MessageBodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Valid {
                get {
                    try {
                        return ((bool)(this[this.tablePacketTable.ValidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valid\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.ValidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exception {
                get {
                    try {
                        return ((string)(this[this.tablePacketTable.ExceptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exception\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.ExceptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ProcessingTime {
                get {
                    try {
                        return ((float)(this[this.tablePacketTable.ProcessingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessingTime\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.ProcessingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientID {
                get {
                    try {
                        return ((string)(this[this.tablePacketTable.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'PacketTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacketTable.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageLengthNull() {
                return this.IsNull(this.tablePacketTable.MessageLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageLengthNull() {
                this[this.tablePacketTable.MessageLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageCodeNull() {
                return this.IsNull(this.tablePacketTable.MessageCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageCodeNull() {
                this[this.tablePacketTable.MessageCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageNumberNull() {
                return this.IsNull(this.tablePacketTable.MessageNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageNumberNull() {
                this[this.tablePacketTable.MessageNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalMessageCodeNull() {
                return this.IsNull(this.tablePacketTable.OriginalMessageCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalMessageCodeNull() {
                this[this.tablePacketTable.OriginalMessageCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageFlagsNull() {
                return this.IsNull(this.tablePacketTable.MessageFlagsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageFlagsNull() {
                this[this.tablePacketTable.MessageFlagsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordIteratorNull() {
                return this.IsNull(this.tablePacketTable.RecordIteratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordIteratorNull() {
                this[this.tablePacketTable.RecordIteratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageBodyNull() {
                return this.IsNull(this.tablePacketTable.MessageBodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageBodyNull() {
                this[this.tablePacketTable.MessageBodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidNull() {
                return this.IsNull(this.tablePacketTable.ValidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidNull() {
                this[this.tablePacketTable.ValidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExceptionNull() {
                return this.IsNull(this.tablePacketTable.ExceptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExceptionNull() {
                this[this.tablePacketTable.ExceptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcessingTimeNull() {
                return this.IsNull(this.tablePacketTable.ProcessingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProcessingTimeNull() {
                this[this.tablePacketTable.ProcessingTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIDNull() {
                return this.IsNull(this.tablePacketTable.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIDNull() {
                this[this.tablePacketTable.ClientIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CartonTableRow : global::System.Data.DataRow {
            
            private CartonTableDataTable tableCartonTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CartonTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCartonTable = ((CartonTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CartonID {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.CartonIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonID\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.CartonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode1 {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.Barcode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode1\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.Barcode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode2 {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.Barcode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode2\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.Barcode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode3 {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.Barcode3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode3\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.Barcode3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode4 {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.Barcode4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode4\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.Barcode4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode5 {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.Barcode5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode5\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.Barcode5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode6 {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.Barcode6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode6\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.Barcode6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ItemWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableCartonTable.ItemWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemWeight\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.ItemWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatusCode {
                get {
                    try {
                        return ((int)(this[this.tableCartonTable.StatusCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusCode\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.StatusCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabelFormat {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.LabelFormatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelFormat\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.LabelFormatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Verify {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.VerifyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Verify\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.VerifyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabelException {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.LabelExceptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelException\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.LabelExceptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaveException {
                get {
                    try {
                        return ((string)(this[this.tableCartonTable.SaveExceptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaveException\' in table \'CartonTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCartonTable.SaveExceptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonIDNull() {
                return this.IsNull(this.tableCartonTable.CartonIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonIDNull() {
                this[this.tableCartonTable.CartonIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcode1Null() {
                return this.IsNull(this.tableCartonTable.Barcode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcode1Null() {
                this[this.tableCartonTable.Barcode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcode2Null() {
                return this.IsNull(this.tableCartonTable.Barcode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcode2Null() {
                this[this.tableCartonTable.Barcode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcode3Null() {
                return this.IsNull(this.tableCartonTable.Barcode3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcode3Null() {
                this[this.tableCartonTable.Barcode3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcode4Null() {
                return this.IsNull(this.tableCartonTable.Barcode4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcode4Null() {
                this[this.tableCartonTable.Barcode4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcode5Null() {
                return this.IsNull(this.tableCartonTable.Barcode5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcode5Null() {
                this[this.tableCartonTable.Barcode5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcode6Null() {
                return this.IsNull(this.tableCartonTable.Barcode6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcode6Null() {
                this[this.tableCartonTable.Barcode6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemWeightNull() {
                return this.IsNull(this.tableCartonTable.ItemWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemWeightNull() {
                this[this.tableCartonTable.ItemWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusCodeNull() {
                return this.IsNull(this.tableCartonTable.StatusCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusCodeNull() {
                this[this.tableCartonTable.StatusCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelFormatNull() {
                return this.IsNull(this.tableCartonTable.LabelFormatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelFormatNull() {
                this[this.tableCartonTable.LabelFormatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerifyNull() {
                return this.IsNull(this.tableCartonTable.VerifyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerifyNull() {
                this[this.tableCartonTable.VerifyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelExceptionNull() {
                return this.IsNull(this.tableCartonTable.LabelExceptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelExceptionNull() {
                this[this.tableCartonTable.LabelExceptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaveExceptionNull() {
                return this.IsNull(this.tableCartonTable.SaveExceptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaveExceptionNull() {
                this[this.tableCartonTable.SaveExceptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PandaTableRowChangeEvent : global::System.EventArgs {
            
            private PandaTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PandaTableRowChangeEvent(PandaTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PandaTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PacketTableRowChangeEvent : global::System.EventArgs {
            
            private PacketTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketTableRowChangeEvent(PacketTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PacketTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CartonTableRowChangeEvent : global::System.EventArgs {
            
            private CartonTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CartonTableRowChangeEvent(CartonTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CartonTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591