//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace WebSvcClient.Tracking {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TrackerSoap", Namespace="http://ddu.argixdirect.com")]
    public partial class Tracker : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SoapCredential soapCredentialValueField;
        
        private System.Threading.SendOrPostCallback TrackCartonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Tracker() {
            this.Url = global::WebSvcClient.Properties.Settings.Default.WebSvcClient_Tracker_Tracker;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SoapCredential SoapCredentialValue {
            get {
                return this.soapCredentialValueField;
            }
            set {
                this.soapCredentialValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TrackCartonCompletedEventHandler TrackCartonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapCredentialValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ddu.argixdirect.com/TrackCarton", RequestNamespace="http://ddu.argixdirect.com", ResponseNamespace="http://ddu.argixdirect.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrackDS TrackCarton(string cartonNumber) {
            object[] results = this.Invoke("TrackCarton", new object[] {
                        cartonNumber});
            return ((TrackDS)(results[0]));
        }
        
        /// <remarks/>
        public void TrackCartonAsync(string cartonNumber) {
            this.TrackCartonAsync(cartonNumber, null);
        }
        
        /// <remarks/>
        public void TrackCartonAsync(string cartonNumber, object userState) {
            if ((this.TrackCartonOperationCompleted == null)) {
                this.TrackCartonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrackCartonOperationCompleted);
            }
            this.InvokeAsync("TrackCarton", new object[] {
                        cartonNumber}, this.TrackCartonOperationCompleted, userState);
        }
        
        private void OnTrackCartonOperationCompleted(object arg) {
            if ((this.TrackCartonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrackCartonCompleted(this, new TrackCartonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ddu.argixdirect.com")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://ddu.argixdirect.com", IsNullable=false)]
    public partial class SoapCredential : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TrackDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TrackDS : global::System.Data.DataSet {
        
        private TrackingSummaryTableDataTable tableTrackingSummaryTable;
        
        private TrackingDetailTableDataTable tableTrackingDetailTable;
        
        private global::System.Data.DataRelation relationTrackingSummaryTable_TrackingDetailTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TrackDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TrackDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TrackingSummaryTable"] != null)) {
                    base.Tables.Add(new TrackingSummaryTableDataTable(ds.Tables["TrackingSummaryTable"]));
                }
                if ((ds.Tables["TrackingDetailTable"] != null)) {
                    base.Tables.Add(new TrackingDetailTableDataTable(ds.Tables["TrackingDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrackingSummaryTableDataTable TrackingSummaryTable {
            get {
                return this.tableTrackingSummaryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrackingDetailTableDataTable TrackingDetailTable {
            get {
                return this.tableTrackingDetailTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TrackDS cln = ((TrackDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TrackingSummaryTable"] != null)) {
                    base.Tables.Add(new TrackingSummaryTableDataTable(ds.Tables["TrackingSummaryTable"]));
                }
                if ((ds.Tables["TrackingDetailTable"] != null)) {
                    base.Tables.Add(new TrackingDetailTableDataTable(ds.Tables["TrackingDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTrackingSummaryTable = ((TrackingSummaryTableDataTable)(base.Tables["TrackingSummaryTable"]));
            if ((initTable == true)) {
                if ((this.tableTrackingSummaryTable != null)) {
                    this.tableTrackingSummaryTable.InitVars();
                }
            }
            this.tableTrackingDetailTable = ((TrackingDetailTableDataTable)(base.Tables["TrackingDetailTable"]));
            if ((initTable == true)) {
                if ((this.tableTrackingDetailTable != null)) {
                    this.tableTrackingDetailTable.InitVars();
                }
            }
            this.relationTrackingSummaryTable_TrackingDetailTable = this.Relations["TrackingSummaryTable_TrackingDetailTable"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TrackDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TrackDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTrackingSummaryTable = new TrackingSummaryTableDataTable();
            base.Tables.Add(this.tableTrackingSummaryTable);
            this.tableTrackingDetailTable = new TrackingDetailTableDataTable();
            base.Tables.Add(this.tableTrackingDetailTable);
            this.relationTrackingSummaryTable_TrackingDetailTable = new global::System.Data.DataRelation("TrackingSummaryTable_TrackingDetailTable", new global::System.Data.DataColumn[] {
                        this.tableTrackingSummaryTable.ItemNumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableTrackingDetailTable.ItemNumberColumn}, false);
            this.Relations.Add(this.relationTrackingSummaryTable_TrackingDetailTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTrackingSummaryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTrackingDetailTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TrackDS ds = new TrackDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TrackingSummaryTableRowChangeEventHandler(object sender, TrackingSummaryTableRowChangeEvent e);
        
        public delegate void TrackingDetailTableRowChangeEventHandler(object sender, TrackingDetailTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TrackingSummaryTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLabelSequenceNumber;
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnOsTrackingNumber;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnTime;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnLocationName;
            
            private global::System.Data.DataColumn columnShipperName;
            
            private global::System.Data.DataColumn columnShipperCity;
            
            private global::System.Data.DataColumn columnShipperState;
            
            private global::System.Data.DataColumn columnShipperZip;
            
            private global::System.Data.DataColumn columnShipperCountry;
            
            private global::System.Data.DataColumn columnConsigneeName;
            
            private global::System.Data.DataColumn columnConsigneeCity;
            
            private global::System.Data.DataColumn columnConsigneeState;
            
            private global::System.Data.DataColumn columnConsigneeZip;
            
            private global::System.Data.DataColumn columnConsigneeCountry;
            
            private global::System.Data.DataColumn columnPieces;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnShipDate;
            
            private global::System.Data.DataColumn columnShipTime;
            
            private global::System.Data.DataColumn columnTenderedDate;
            
            private global::System.Data.DataColumn columnTenderedTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableDataTable() {
                this.TableName = "TrackingSummaryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TrackingSummaryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TrackingSummaryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelSequenceNumberColumn {
                get {
                    return this.columnLabelSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OsTrackingNumberColumn {
                get {
                    return this.columnOsTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeColumn {
                get {
                    return this.columnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationNameColumn {
                get {
                    return this.columnLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperNameColumn {
                get {
                    return this.columnShipperName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperCityColumn {
                get {
                    return this.columnShipperCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperStateColumn {
                get {
                    return this.columnShipperState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperZipColumn {
                get {
                    return this.columnShipperZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperCountryColumn {
                get {
                    return this.columnShipperCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeNameColumn {
                get {
                    return this.columnConsigneeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeCityColumn {
                get {
                    return this.columnConsigneeCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeStateColumn {
                get {
                    return this.columnConsigneeState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeZipColumn {
                get {
                    return this.columnConsigneeZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeCountryColumn {
                get {
                    return this.columnConsigneeCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiecesColumn {
                get {
                    return this.columnPieces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipDateColumn {
                get {
                    return this.columnShipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipTimeColumn {
                get {
                    return this.columnShipTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenderedDateColumn {
                get {
                    return this.columnTenderedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenderedTimeColumn {
                get {
                    return this.columnTenderedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRow this[int index] {
                get {
                    return ((TrackingSummaryTableRow)(this.Rows[index]));
                }
            }
            
            public event TrackingSummaryTableRowChangeEventHandler TrackingSummaryTableRowChanging;
            
            public event TrackingSummaryTableRowChangeEventHandler TrackingSummaryTableRowChanged;
            
            public event TrackingSummaryTableRowChangeEventHandler TrackingSummaryTableRowDeleting;
            
            public event TrackingSummaryTableRowChangeEventHandler TrackingSummaryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTrackingSummaryTableRow(TrackingSummaryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRow AddTrackingSummaryTableRow(
                        long LabelSequenceNumber, 
                        string ItemNumber, 
                        string OsTrackingNumber, 
                        System.DateTime Date, 
                        System.DateTime Time, 
                        string Status, 
                        string LocationName, 
                        string ShipperName, 
                        string ShipperCity, 
                        string ShipperState, 
                        string ShipperZip, 
                        string ShipperCountry, 
                        string ConsigneeName, 
                        string ConsigneeCity, 
                        string ConsigneeState, 
                        string ConsigneeZip, 
                        string ConsigneeCountry, 
                        int Pieces, 
                        int Weight, 
                        System.DateTime ShipDate, 
                        System.DateTime ShipTime, 
                        System.DateTime TenderedDate, 
                        System.DateTime TenderedTime) {
                TrackingSummaryTableRow rowTrackingSummaryTableRow = ((TrackingSummaryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LabelSequenceNumber,
                        ItemNumber,
                        OsTrackingNumber,
                        Date,
                        Time,
                        Status,
                        LocationName,
                        ShipperName,
                        ShipperCity,
                        ShipperState,
                        ShipperZip,
                        ShipperCountry,
                        ConsigneeName,
                        ConsigneeCity,
                        ConsigneeState,
                        ConsigneeZip,
                        ConsigneeCountry,
                        Pieces,
                        Weight,
                        ShipDate,
                        ShipTime,
                        TenderedDate,
                        TenderedTime};
                rowTrackingSummaryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTrackingSummaryTableRow);
                return rowTrackingSummaryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRow FindByItemNumber(string ItemNumber) {
                return ((TrackingSummaryTableRow)(this.Rows.Find(new object[] {
                            ItemNumber})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TrackingSummaryTableDataTable cln = ((TrackingSummaryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TrackingSummaryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLabelSequenceNumber = base.Columns["LabelSequenceNumber"];
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnOsTrackingNumber = base.Columns["OsTrackingNumber"];
                this.columnDate = base.Columns["Date"];
                this.columnTime = base.Columns["Time"];
                this.columnStatus = base.Columns["Status"];
                this.columnLocationName = base.Columns["LocationName"];
                this.columnShipperName = base.Columns["ShipperName"];
                this.columnShipperCity = base.Columns["ShipperCity"];
                this.columnShipperState = base.Columns["ShipperState"];
                this.columnShipperZip = base.Columns["ShipperZip"];
                this.columnShipperCountry = base.Columns["ShipperCountry"];
                this.columnConsigneeName = base.Columns["ConsigneeName"];
                this.columnConsigneeCity = base.Columns["ConsigneeCity"];
                this.columnConsigneeState = base.Columns["ConsigneeState"];
                this.columnConsigneeZip = base.Columns["ConsigneeZip"];
                this.columnConsigneeCountry = base.Columns["ConsigneeCountry"];
                this.columnPieces = base.Columns["Pieces"];
                this.columnWeight = base.Columns["Weight"];
                this.columnShipDate = base.Columns["ShipDate"];
                this.columnShipTime = base.Columns["ShipTime"];
                this.columnTenderedDate = base.Columns["TenderedDate"];
                this.columnTenderedTime = base.Columns["TenderedTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLabelSequenceNumber = new global::System.Data.DataColumn("LabelSequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelSequenceNumber);
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnOsTrackingNumber = new global::System.Data.DataColumn("OsTrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOsTrackingNumber);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnLocationName = new global::System.Data.DataColumn("LocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationName);
                this.columnShipperName = new global::System.Data.DataColumn("ShipperName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperName);
                this.columnShipperCity = new global::System.Data.DataColumn("ShipperCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperCity);
                this.columnShipperState = new global::System.Data.DataColumn("ShipperState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperState);
                this.columnShipperZip = new global::System.Data.DataColumn("ShipperZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperZip);
                this.columnShipperCountry = new global::System.Data.DataColumn("ShipperCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperCountry);
                this.columnConsigneeName = new global::System.Data.DataColumn("ConsigneeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeName);
                this.columnConsigneeCity = new global::System.Data.DataColumn("ConsigneeCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeCity);
                this.columnConsigneeState = new global::System.Data.DataColumn("ConsigneeState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeState);
                this.columnConsigneeZip = new global::System.Data.DataColumn("ConsigneeZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeZip);
                this.columnConsigneeCountry = new global::System.Data.DataColumn("ConsigneeCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeCountry);
                this.columnPieces = new global::System.Data.DataColumn("Pieces", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPieces);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnShipDate = new global::System.Data.DataColumn("ShipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipDate);
                this.columnShipTime = new global::System.Data.DataColumn("ShipTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipTime);
                this.columnTenderedDate = new global::System.Data.DataColumn("TenderedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderedDate);
                this.columnTenderedTime = new global::System.Data.DataColumn("TenderedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderedTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnItemNumber}, true));
                this.columnItemNumber.AllowDBNull = false;
                this.columnItemNumber.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRow NewTrackingSummaryTableRow() {
                return ((TrackingSummaryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TrackingSummaryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TrackingSummaryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TrackingSummaryTableRowChanged != null)) {
                    this.TrackingSummaryTableRowChanged(this, new TrackingSummaryTableRowChangeEvent(((TrackingSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TrackingSummaryTableRowChanging != null)) {
                    this.TrackingSummaryTableRowChanging(this, new TrackingSummaryTableRowChangeEvent(((TrackingSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TrackingSummaryTableRowDeleted != null)) {
                    this.TrackingSummaryTableRowDeleted(this, new TrackingSummaryTableRowChangeEvent(((TrackingSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TrackingSummaryTableRowDeleting != null)) {
                    this.TrackingSummaryTableRowDeleting(this, new TrackingSummaryTableRowChangeEvent(((TrackingSummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTrackingSummaryTableRow(TrackingSummaryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrackDS ds = new TrackDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TrackingSummaryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TrackingDetailTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnTime;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnLocationName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableDataTable() {
                this.TableName = "TrackingDetailTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TrackingDetailTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TrackingDetailTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeColumn {
                get {
                    return this.columnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationNameColumn {
                get {
                    return this.columnLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableRow this[int index] {
                get {
                    return ((TrackingDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event TrackingDetailTableRowChangeEventHandler TrackingDetailTableRowChanging;
            
            public event TrackingDetailTableRowChangeEventHandler TrackingDetailTableRowChanged;
            
            public event TrackingDetailTableRowChangeEventHandler TrackingDetailTableRowDeleting;
            
            public event TrackingDetailTableRowChangeEventHandler TrackingDetailTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTrackingDetailTableRow(TrackingDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableRow AddTrackingDetailTableRow(TrackingSummaryTableRow parentTrackingSummaryTableRowByTrackingSummaryTable_TrackingDetailTable, System.DateTime Date, System.DateTime Time, string Status, string LocationName) {
                TrackingDetailTableRow rowTrackingDetailTableRow = ((TrackingDetailTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        Time,
                        Status,
                        LocationName};
                if ((parentTrackingSummaryTableRowByTrackingSummaryTable_TrackingDetailTable != null)) {
                    columnValuesArray[0] = parentTrackingSummaryTableRowByTrackingSummaryTable_TrackingDetailTable[1];
                }
                rowTrackingDetailTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTrackingDetailTableRow);
                return rowTrackingDetailTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TrackingDetailTableDataTable cln = ((TrackingDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TrackingDetailTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnDate = base.Columns["Date"];
                this.columnTime = base.Columns["Time"];
                this.columnStatus = base.Columns["Status"];
                this.columnLocationName = base.Columns["LocationName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnLocationName = new global::System.Data.DataColumn("LocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableRow NewTrackingDetailTableRow() {
                return ((TrackingDetailTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TrackingDetailTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TrackingDetailTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TrackingDetailTableRowChanged != null)) {
                    this.TrackingDetailTableRowChanged(this, new TrackingDetailTableRowChangeEvent(((TrackingDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TrackingDetailTableRowChanging != null)) {
                    this.TrackingDetailTableRowChanging(this, new TrackingDetailTableRowChangeEvent(((TrackingDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TrackingDetailTableRowDeleted != null)) {
                    this.TrackingDetailTableRowDeleted(this, new TrackingDetailTableRowChangeEvent(((TrackingDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TrackingDetailTableRowDeleting != null)) {
                    this.TrackingDetailTableRowDeleting(this, new TrackingDetailTableRowChangeEvent(((TrackingDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTrackingDetailTableRow(TrackingDetailTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrackDS ds = new TrackDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TrackingDetailTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TrackingSummaryTableRow : global::System.Data.DataRow {
            
            private TrackingSummaryTableDataTable tableTrackingSummaryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TrackingSummaryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTrackingSummaryTable = ((TrackingSummaryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LabelSequenceNumber {
                get {
                    try {
                        return ((long)(this[this.tableTrackingSummaryTable.LabelSequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelSequenceNumber\' in table \'TrackingSummaryTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.LabelSequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNumber {
                get {
                    return ((string)(this[this.tableTrackingSummaryTable.ItemNumberColumn]));
                }
                set {
                    this[this.tableTrackingSummaryTable.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OsTrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.OsTrackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OsTrackingNumber\' in table \'TrackingSummaryTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.OsTrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingSummaryTable.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingSummaryTable.TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationName {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.LocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationName\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.LocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperName {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ShipperNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperName\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipperNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperCity {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ShipperCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperCity\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipperCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperState {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ShipperStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperState\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipperStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperZip {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ShipperZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperZip\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipperZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperCountry {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ShipperCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperCountry\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipperCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsigneeName {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ConsigneeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeName\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ConsigneeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsigneeCity {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ConsigneeCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeCity\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ConsigneeCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsigneeState {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ConsigneeStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeState\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ConsigneeStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsigneeZip {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ConsigneeZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeZip\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ConsigneeZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsigneeCountry {
                get {
                    try {
                        return ((string)(this[this.tableTrackingSummaryTable.ConsigneeCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeCountry\' in table \'TrackingSummaryTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ConsigneeCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pieces {
                get {
                    try {
                        return ((int)(this[this.tableTrackingSummaryTable.PiecesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pieces\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.PiecesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableTrackingSummaryTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingSummaryTable.ShipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipDate\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShipTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingSummaryTable.ShipTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipTime\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.ShipTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TenderedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingSummaryTable.TenderedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderedDate\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.TenderedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TenderedTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingSummaryTable.TenderedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderedTime\' in table \'TrackingSummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingSummaryTable.TenderedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelSequenceNumberNull() {
                return this.IsNull(this.tableTrackingSummaryTable.LabelSequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelSequenceNumberNull() {
                this[this.tableTrackingSummaryTable.LabelSequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOsTrackingNumberNull() {
                return this.IsNull(this.tableTrackingSummaryTable.OsTrackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOsTrackingNumberNull() {
                this[this.tableTrackingSummaryTable.OsTrackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableTrackingSummaryTable.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableTrackingSummaryTable.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeNull() {
                return this.IsNull(this.tableTrackingSummaryTable.TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeNull() {
                this[this.tableTrackingSummaryTable.TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableTrackingSummaryTable.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableTrackingSummaryTable.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNameNull() {
                return this.IsNull(this.tableTrackingSummaryTable.LocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNameNull() {
                this[this.tableTrackingSummaryTable.LocationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNameNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipperNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNameNull() {
                this[this.tableTrackingSummaryTable.ShipperNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperCityNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipperCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperCityNull() {
                this[this.tableTrackingSummaryTable.ShipperCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperStateNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipperStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperStateNull() {
                this[this.tableTrackingSummaryTable.ShipperStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperZipNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipperZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperZipNull() {
                this[this.tableTrackingSummaryTable.ShipperZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperCountryNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipperCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperCountryNull() {
                this[this.tableTrackingSummaryTable.ShipperCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeNameNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ConsigneeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeNameNull() {
                this[this.tableTrackingSummaryTable.ConsigneeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeCityNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ConsigneeCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeCityNull() {
                this[this.tableTrackingSummaryTable.ConsigneeCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeStateNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ConsigneeStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeStateNull() {
                this[this.tableTrackingSummaryTable.ConsigneeStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeZipNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ConsigneeZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeZipNull() {
                this[this.tableTrackingSummaryTable.ConsigneeZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeCountryNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ConsigneeCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeCountryNull() {
                this[this.tableTrackingSummaryTable.ConsigneeCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiecesNull() {
                return this.IsNull(this.tableTrackingSummaryTable.PiecesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiecesNull() {
                this[this.tableTrackingSummaryTable.PiecesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableTrackingSummaryTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableTrackingSummaryTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipDateNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipDateNull() {
                this[this.tableTrackingSummaryTable.ShipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipTimeNull() {
                return this.IsNull(this.tableTrackingSummaryTable.ShipTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipTimeNull() {
                this[this.tableTrackingSummaryTable.ShipTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenderedDateNull() {
                return this.IsNull(this.tableTrackingSummaryTable.TenderedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenderedDateNull() {
                this[this.tableTrackingSummaryTable.TenderedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenderedTimeNull() {
                return this.IsNull(this.tableTrackingSummaryTable.TenderedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenderedTimeNull() {
                this[this.tableTrackingSummaryTable.TenderedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableRow[] GetTrackingDetailTableRows() {
                if ((this.Table.ChildRelations["TrackingSummaryTable_TrackingDetailTable"] == null)) {
                    return new TrackingDetailTableRow[0];
                }
                else {
                    return ((TrackingDetailTableRow[])(base.GetChildRows(this.Table.ChildRelations["TrackingSummaryTable_TrackingDetailTable"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TrackingDetailTableRow : global::System.Data.DataRow {
            
            private TrackingDetailTableDataTable tableTrackingDetailTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TrackingDetailTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTrackingDetailTable = ((TrackingDetailTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNumber {
                get {
                    try {
                        return ((string)(this[this.tableTrackingDetailTable.ItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNumber\' in table \'TrackingDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingDetailTable.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingDetailTable.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'TrackingDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingDetailTable.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTrackingDetailTable.TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time\' in table \'TrackingDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingDetailTable.TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableTrackingDetailTable.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'TrackingDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingDetailTable.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationName {
                get {
                    try {
                        return ((string)(this[this.tableTrackingDetailTable.LocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationName\' in table \'TrackingDetailTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrackingDetailTable.LocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRow TrackingSummaryTableRow {
                get {
                    return ((TrackingSummaryTableRow)(this.GetParentRow(this.Table.ParentRelations["TrackingSummaryTable_TrackingDetailTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TrackingSummaryTable_TrackingDetailTable"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNumberNull() {
                return this.IsNull(this.tableTrackingDetailTable.ItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNumberNull() {
                this[this.tableTrackingDetailTable.ItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableTrackingDetailTable.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableTrackingDetailTable.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeNull() {
                return this.IsNull(this.tableTrackingDetailTable.TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeNull() {
                this[this.tableTrackingDetailTable.TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableTrackingDetailTable.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableTrackingDetailTable.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNameNull() {
                return this.IsNull(this.tableTrackingDetailTable.LocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNameNull() {
                this[this.tableTrackingDetailTable.LocationNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TrackingSummaryTableRowChangeEvent : global::System.EventArgs {
            
            private TrackingSummaryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRowChangeEvent(TrackingSummaryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingSummaryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TrackingDetailTableRowChangeEvent : global::System.EventArgs {
            
            private TrackingDetailTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableRowChangeEvent(TrackingDetailTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TrackingDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void TrackCartonCompletedEventHandler(object sender, TrackCartonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrackCartonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrackCartonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackDS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackDS)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591