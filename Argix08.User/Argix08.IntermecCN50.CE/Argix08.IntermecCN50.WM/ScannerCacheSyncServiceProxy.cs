//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.4961.
// 
namespace Argix {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    using Microsoft.Synchronization.Data;
    using Microsoft.Synchronization;

    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    // CODEGEN: The optional WSDL extension element 'EndpointReference' from namespace 'http://www.w3.org/2005/08/addressing' was not handled.
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSHttpBinding_IScannerCacheSyncContract",Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SyncParameter[]))]
    public partial class ScannerCacheSyncServiceProxy:System.Web.Services.Protocols.SoapHttpClientProtocol {

        /// <remarks/>
        public ScannerCacheSyncServiceProxy() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = "http://tpjheary7.argix.com/DriverScanService/ScannerCacheSyncServiceProxy.svc";
        }
        /// <remarks/>
        public ScannerCacheSyncServiceProxy(string uri) {
            this.Url = uri;
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScannerCacheSyncContract/ApplyChanges",RequestNamespace="http://tempuri.org/",ResponseNamespace="http://tempuri.org/",Use=System.Web.Services.Description.SoapBindingUse.Literal,ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SyncContext ApplyChanges([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SyncGroupMetadata groupMetadata,[System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Data.DataSet dataSet,[System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SyncSession syncSession) {
            object[] results = this.Invoke("ApplyChanges",new object[] {
                        groupMetadata,
                        dataSet,
                        syncSession});
            return ((SyncContext)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginApplyChanges(SyncGroupMetadata groupMetadata,System.Data.DataSet dataSet,SyncSession syncSession,System.AsyncCallback callback,object asyncState) {
            return this.BeginInvoke("ApplyChanges",new object[] {
                        groupMetadata,
                        dataSet,
                        syncSession},callback,asyncState);
        }

        /// <remarks/>
        public SyncContext EndApplyChanges(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SyncContext)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScannerCacheSyncContract/GetChanges",RequestNamespace="http://tempuri.org/",ResponseNamespace="http://tempuri.org/",Use=System.Web.Services.Description.SoapBindingUse.Literal,ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SyncContext GetChanges([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SyncGroupMetadata groupMetadata,[System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SyncSession syncSession) {
            object[] results = this.Invoke("GetChanges",new object[] {
                        groupMetadata,
                        syncSession});
            return ((SyncContext)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetChanges(SyncGroupMetadata groupMetadata,SyncSession syncSession,System.AsyncCallback callback,object asyncState) {
            return this.BeginInvoke("GetChanges",new object[] {
                        groupMetadata,
                        syncSession},callback,asyncState);
        }

        /// <remarks/>
        public SyncContext EndGetChanges(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SyncContext)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScannerCacheSyncContract/GetSchema",RequestNamespace="http://tempuri.org/",ResponseNamespace="http://tempuri.org/",Use=System.Web.Services.Description.SoapBindingUse.Literal,ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SyncSchema GetSchema([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] tableNames,[System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SyncSession syncSession) {
            object[] results = this.Invoke("GetSchema",new object[] {
                        tableNames,
                        syncSession});
            return ((SyncSchema)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSchema(string[] tableNames,SyncSession syncSession,System.AsyncCallback callback,object asyncState) {
            return this.BeginInvoke("GetSchema",new object[] {
                        tableNames,
                        syncSession},callback,asyncState);
        }

        /// <remarks/>
        public SyncSchema EndGetSchema(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SyncSchema)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IScannerCacheSyncContract/GetServerInfo",RequestNamespace="http://tempuri.org/",ResponseNamespace="http://tempuri.org/",Use=System.Web.Services.Description.SoapBindingUse.Literal,ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SyncServerInfo GetServerInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SyncSession syncSession) {
            object[] results = this.Invoke("GetServerInfo",new object[] {
                        syncSession});
            return ((SyncServerInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetServerInfo(SyncSession syncSession,System.AsyncCallback callback,object asyncState) {
            return this.BeginInvoke("GetServerInfo",new object[] {
                        syncSession},callback,asyncState);
        }

        /// <remarks/>
        public SyncServerInfo EndGetServerInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SyncServerInfo)(results[0]));
        }
    }
}