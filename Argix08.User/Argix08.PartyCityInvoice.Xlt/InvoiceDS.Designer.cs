//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Argix.Finance {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InvoiceDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InvoiceDS : global::System.Data.DataSet {
        
        private ClientTableDataTable tableClientTable;
        
        private ClientInvoiceTableDataTable tableClientInvoiceTable;
        
        private InvoiceShipmentTableDataTable tableInvoiceShipmentTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public InvoiceDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected InvoiceDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ClientTable"] != null)) {
                    base.Tables.Add(new ClientTableDataTable(ds.Tables["ClientTable"]));
                }
                if ((ds.Tables["ClientInvoiceTable"] != null)) {
                    base.Tables.Add(new ClientInvoiceTableDataTable(ds.Tables["ClientInvoiceTable"]));
                }
                if ((ds.Tables["InvoiceShipmentTable"] != null)) {
                    base.Tables.Add(new InvoiceShipmentTableDataTable(ds.Tables["InvoiceShipmentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientTableDataTable ClientTable {
            get {
                return this.tableClientTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientInvoiceTableDataTable ClientInvoiceTable {
            get {
                return this.tableClientInvoiceTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoiceShipmentTableDataTable InvoiceShipmentTable {
            get {
                return this.tableInvoiceShipmentTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            InvoiceDS cln = ((InvoiceDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ClientTable"] != null)) {
                    base.Tables.Add(new ClientTableDataTable(ds.Tables["ClientTable"]));
                }
                if ((ds.Tables["ClientInvoiceTable"] != null)) {
                    base.Tables.Add(new ClientInvoiceTableDataTable(ds.Tables["ClientInvoiceTable"]));
                }
                if ((ds.Tables["InvoiceShipmentTable"] != null)) {
                    base.Tables.Add(new InvoiceShipmentTableDataTable(ds.Tables["InvoiceShipmentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableClientTable = ((ClientTableDataTable)(base.Tables["ClientTable"]));
            if ((initTable == true)) {
                if ((this.tableClientTable != null)) {
                    this.tableClientTable.InitVars();
                }
            }
            this.tableClientInvoiceTable = ((ClientInvoiceTableDataTable)(base.Tables["ClientInvoiceTable"]));
            if ((initTable == true)) {
                if ((this.tableClientInvoiceTable != null)) {
                    this.tableClientInvoiceTable.InitVars();
                }
            }
            this.tableInvoiceShipmentTable = ((InvoiceShipmentTableDataTable)(base.Tables["InvoiceShipmentTable"]));
            if ((initTable == true)) {
                if ((this.tableInvoiceShipmentTable != null)) {
                    this.tableInvoiceShipmentTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "InvoiceDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InvoiceDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableClientTable = new ClientTableDataTable();
            base.Tables.Add(this.tableClientTable);
            this.tableClientInvoiceTable = new ClientInvoiceTableDataTable();
            base.Tables.Add(this.tableClientInvoiceTable);
            this.tableInvoiceShipmentTable = new InvoiceShipmentTableDataTable();
            base.Tables.Add(this.tableInvoiceShipmentTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClientTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClientInvoiceTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoiceShipmentTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InvoiceDS ds = new InvoiceDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ClientTableRowChangeEventHandler(object sender, ClientTableRowChangeEvent e);
        
        public delegate void ClientInvoiceTableRowChangeEventHandler(object sender, ClientInvoiceTableRowChangeEvent e);
        
        public delegate void InvoiceShipmentTableRowChangeEventHandler(object sender, InvoiceShipmentTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnClientNumber;
            
            private global::System.Data.DataColumn columnDivisionNumber;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnTerminalCode;
            
            private global::System.Data.DataColumn columnTerminalName;
            
            private global::System.Data.DataColumn columnARNumber;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientTableDataTable() {
                this.TableName = "ClientTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClientTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionNumberColumn {
                get {
                    return this.columnDivisionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminalCodeColumn {
                get {
                    return this.columnTerminalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminalNameColumn {
                get {
                    return this.columnTerminalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ARNumberColumn {
                get {
                    return this.columnARNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientTableRow this[int index] {
                get {
                    return ((ClientTableRow)(this.Rows[index]));
                }
            }
            
            public event ClientTableRowChangeEventHandler ClientTableRowChanging;
            
            public event ClientTableRowChangeEventHandler ClientTableRowChanged;
            
            public event ClientTableRowChangeEventHandler ClientTableRowDeleting;
            
            public event ClientTableRowChangeEventHandler ClientTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClientTableRow(ClientTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientTableRow AddClientTableRow(string ClientNumber, string DivisionNumber, string ClientName, string TerminalCode, string TerminalName, string ARNumber, string Status) {
                ClientTableRow rowClientTableRow = ((ClientTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClientNumber,
                        DivisionNumber,
                        ClientName,
                        TerminalCode,
                        TerminalName,
                        ARNumber,
                        Status};
                rowClientTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientTableRow);
                return rowClientTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClientTableDataTable cln = ((ClientTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnDivisionNumber = base.Columns["DivisionNumber"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnTerminalCode = base.Columns["TerminalCode"];
                this.columnTerminalName = base.Columns["TerminalName"];
                this.columnARNumber = base.Columns["ARNumber"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClientNumber = new global::System.Data.DataColumn("ClientNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnDivisionNumber = new global::System.Data.DataColumn("DivisionNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionNumber);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnTerminalCode = new global::System.Data.DataColumn("TerminalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminalCode);
                this.columnTerminalName = new global::System.Data.DataColumn("TerminalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminalName);
                this.columnARNumber = new global::System.Data.DataColumn("ARNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARNumber);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientTableRow NewClientTableRow() {
                return ((ClientTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClientTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientTableRowChanged != null)) {
                    this.ClientTableRowChanged(this, new ClientTableRowChangeEvent(((ClientTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientTableRowChanging != null)) {
                    this.ClientTableRowChanging(this, new ClientTableRowChangeEvent(((ClientTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientTableRowDeleted != null)) {
                    this.ClientTableRowDeleted(this, new ClientTableRowChangeEvent(((ClientTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientTableRowDeleting != null)) {
                    this.ClientTableRowDeleting(this, new ClientTableRowChangeEvent(((ClientTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClientTableRow(ClientTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InvoiceDS ds = new InvoiceDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientInvoiceTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnPostToARDate;
            
            private global::System.Data.DataColumn columnCartons;
            
            private global::System.Data.DataColumn columnPallets;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnReleaseDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientInvoiceTableDataTable() {
                this.TableName = "ClientInvoiceTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientInvoiceTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClientInvoiceTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostToARDateColumn {
                get {
                    return this.columnPostToARDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsColumn {
                get {
                    return this.columnCartons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PalletsColumn {
                get {
                    return this.columnPallets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReleaseDateColumn {
                get {
                    return this.columnReleaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientInvoiceTableRow this[int index] {
                get {
                    return ((ClientInvoiceTableRow)(this.Rows[index]));
                }
            }
            
            public event ClientInvoiceTableRowChangeEventHandler ClientInvoiceTableRowChanging;
            
            public event ClientInvoiceTableRowChangeEventHandler ClientInvoiceTableRowChanged;
            
            public event ClientInvoiceTableRowChangeEventHandler ClientInvoiceTableRowDeleting;
            
            public event ClientInvoiceTableRowChangeEventHandler ClientInvoiceTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClientInvoiceTableRow(ClientInvoiceTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientInvoiceTableRow AddClientInvoiceTableRow(string InvoiceNumber, System.DateTime InvoiceDate, System.DateTime PostToARDate, int Cartons, int Pallets, int Weight, decimal Amount, string Description, System.DateTime ReleaseDate) {
                ClientInvoiceTableRow rowClientInvoiceTableRow = ((ClientInvoiceTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InvoiceNumber,
                        InvoiceDate,
                        PostToARDate,
                        Cartons,
                        Pallets,
                        Weight,
                        Amount,
                        Description,
                        ReleaseDate};
                rowClientInvoiceTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientInvoiceTableRow);
                return rowClientInvoiceTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClientInvoiceTableDataTable cln = ((ClientInvoiceTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientInvoiceTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnPostToARDate = base.Columns["PostToARDate"];
                this.columnCartons = base.Columns["Cartons"];
                this.columnPallets = base.Columns["Pallets"];
                this.columnWeight = base.Columns["Weight"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDescription = base.Columns["Description"];
                this.columnReleaseDate = base.Columns["ReleaseDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnPostToARDate = new global::System.Data.DataColumn("PostToARDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostToARDate);
                this.columnCartons = new global::System.Data.DataColumn("Cartons", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartons);
                this.columnPallets = new global::System.Data.DataColumn("Pallets", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPallets);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnReleaseDate = new global::System.Data.DataColumn("ReleaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleaseDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientInvoiceTableRow NewClientInvoiceTableRow() {
                return ((ClientInvoiceTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientInvoiceTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClientInvoiceTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientInvoiceTableRowChanged != null)) {
                    this.ClientInvoiceTableRowChanged(this, new ClientInvoiceTableRowChangeEvent(((ClientInvoiceTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientInvoiceTableRowChanging != null)) {
                    this.ClientInvoiceTableRowChanging(this, new ClientInvoiceTableRowChangeEvent(((ClientInvoiceTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientInvoiceTableRowDeleted != null)) {
                    this.ClientInvoiceTableRowDeleted(this, new ClientInvoiceTableRowChangeEvent(((ClientInvoiceTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientInvoiceTableRowDeleting != null)) {
                    this.ClientInvoiceTableRowDeleting(this, new ClientInvoiceTableRowChangeEvent(((ClientInvoiceTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClientInvoiceTableRow(ClientInvoiceTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InvoiceDS ds = new InvoiceDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientInvoiceTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoiceShipmentTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRemitToName;
            
            private global::System.Data.DataColumn columnRemitToAddressLine1;
            
            private global::System.Data.DataColumn columnRemitToAddressLine2;
            
            private global::System.Data.DataColumn columnRemitToCity;
            
            private global::System.Data.DataColumn columnRemitToState;
            
            private global::System.Data.DataColumn columnRemitToZip;
            
            private global::System.Data.DataColumn columnRemitToZip4;
            
            private global::System.Data.DataColumn columnTelephone;
            
            private global::System.Data.DataColumn columnClientNumber;
            
            private global::System.Data.DataColumn columnClientDivision;
            
            private global::System.Data.DataColumn columnBillToName;
            
            private global::System.Data.DataColumn columnBillToAddressline1;
            
            private global::System.Data.DataColumn columnBillToAddressline2;
            
            private global::System.Data.DataColumn columnBillToCity;
            
            private global::System.Data.DataColumn columnBillToState;
            
            private global::System.Data.DataColumn columnBillToZip;
            
            private global::System.Data.DataColumn columnBillToZIP4;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnReleaseDate;
            
            private global::System.Data.DataColumn columnStoreName;
            
            private global::System.Data.DataColumn columnStoreState;
            
            private global::System.Data.DataColumn columnStoreZip;
            
            private global::System.Data.DataColumn columnLocationCode;
            
            private global::System.Data.DataColumn columnCtnQty;
            
            private global::System.Data.DataColumn columnCartonRate;
            
            private global::System.Data.DataColumn columnPltQty;
            
            private global::System.Data.DataColumn columnPalletRate;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnRatedWeight;
            
            private global::System.Data.DataColumn columnWeightRate;
            
            private global::System.Data.DataColumn columnSurcharge;
            
            private global::System.Data.DataColumn columnConsolidationCharge;
            
            private global::System.Data.DataColumn columnFuelRate;
            
            private global::System.Data.DataColumn columnFuelSurcharge;
            
            private global::System.Data.DataColumn columnDeliveryTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceShipmentTableDataTable() {
                this.TableName = "InvoiceShipmentTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceShipmentTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InvoiceShipmentTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToNameColumn {
                get {
                    return this.columnRemitToName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToAddressLine1Column {
                get {
                    return this.columnRemitToAddressLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToAddressLine2Column {
                get {
                    return this.columnRemitToAddressLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToCityColumn {
                get {
                    return this.columnRemitToCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToStateColumn {
                get {
                    return this.columnRemitToState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToZipColumn {
                get {
                    return this.columnRemitToZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemitToZip4Column {
                get {
                    return this.columnRemitToZip4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientDivisionColumn {
                get {
                    return this.columnClientDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToNameColumn {
                get {
                    return this.columnBillToName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToAddressline1Column {
                get {
                    return this.columnBillToAddressline1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToAddressline2Column {
                get {
                    return this.columnBillToAddressline2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToCityColumn {
                get {
                    return this.columnBillToCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToStateColumn {
                get {
                    return this.columnBillToState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToZipColumn {
                get {
                    return this.columnBillToZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillToZIP4Column {
                get {
                    return this.columnBillToZIP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReleaseDateColumn {
                get {
                    return this.columnReleaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNameColumn {
                get {
                    return this.columnStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreStateColumn {
                get {
                    return this.columnStoreState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreZipColumn {
                get {
                    return this.columnStoreZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationCodeColumn {
                get {
                    return this.columnLocationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtnQtyColumn {
                get {
                    return this.columnCtnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonRateColumn {
                get {
                    return this.columnCartonRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PltQtyColumn {
                get {
                    return this.columnPltQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PalletRateColumn {
                get {
                    return this.columnPalletRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatedWeightColumn {
                get {
                    return this.columnRatedWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightRateColumn {
                get {
                    return this.columnWeightRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurchargeColumn {
                get {
                    return this.columnSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsolidationChargeColumn {
                get {
                    return this.columnConsolidationCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FuelRateColumn {
                get {
                    return this.columnFuelRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FuelSurchargeColumn {
                get {
                    return this.columnFuelSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryTotalColumn {
                get {
                    return this.columnDeliveryTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceShipmentTableRow this[int index] {
                get {
                    return ((InvoiceShipmentTableRow)(this.Rows[index]));
                }
            }
            
            public event InvoiceShipmentTableRowChangeEventHandler InvoiceShipmentTableRowChanging;
            
            public event InvoiceShipmentTableRowChangeEventHandler InvoiceShipmentTableRowChanged;
            
            public event InvoiceShipmentTableRowChangeEventHandler InvoiceShipmentTableRowDeleting;
            
            public event InvoiceShipmentTableRowChangeEventHandler InvoiceShipmentTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoiceShipmentTableRow(InvoiceShipmentTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceShipmentTableRow AddInvoiceShipmentTableRow(
                        string RemitToName, 
                        string RemitToAddressLine1, 
                        string RemitToAddressLine2, 
                        string RemitToCity, 
                        string RemitToState, 
                        string RemitToZip, 
                        string RemitToZip4, 
                        string Telephone, 
                        string ClientNumber, 
                        string ClientDivision, 
                        string BillToName, 
                        string BillToAddressline1, 
                        string BillToAddressline2, 
                        string BillToCity, 
                        string BillToState, 
                        string BillToZip, 
                        string BillToZIP4, 
                        string InvoiceNumber, 
                        System.DateTime InvoiceDate, 
                        System.DateTime ReleaseDate, 
                        string StoreName, 
                        string StoreState, 
                        string StoreZip, 
                        string LocationCode, 
                        int CtnQty, 
                        decimal CartonRate, 
                        int PltQty, 
                        decimal PalletRate, 
                        int Weight, 
                        int RatedWeight, 
                        decimal WeightRate, 
                        decimal Surcharge, 
                        decimal ConsolidationCharge, 
                        decimal FuelRate, 
                        decimal FuelSurcharge, 
                        decimal DeliveryTotal) {
                InvoiceShipmentTableRow rowInvoiceShipmentTableRow = ((InvoiceShipmentTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RemitToName,
                        RemitToAddressLine1,
                        RemitToAddressLine2,
                        RemitToCity,
                        RemitToState,
                        RemitToZip,
                        RemitToZip4,
                        Telephone,
                        ClientNumber,
                        ClientDivision,
                        BillToName,
                        BillToAddressline1,
                        BillToAddressline2,
                        BillToCity,
                        BillToState,
                        BillToZip,
                        BillToZIP4,
                        InvoiceNumber,
                        InvoiceDate,
                        ReleaseDate,
                        StoreName,
                        StoreState,
                        StoreZip,
                        LocationCode,
                        CtnQty,
                        CartonRate,
                        PltQty,
                        PalletRate,
                        Weight,
                        RatedWeight,
                        WeightRate,
                        Surcharge,
                        ConsolidationCharge,
                        FuelRate,
                        FuelSurcharge,
                        DeliveryTotal};
                rowInvoiceShipmentTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoiceShipmentTableRow);
                return rowInvoiceShipmentTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InvoiceShipmentTableDataTable cln = ((InvoiceShipmentTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoiceShipmentTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRemitToName = base.Columns["RemitToName"];
                this.columnRemitToAddressLine1 = base.Columns["RemitToAddressLine1"];
                this.columnRemitToAddressLine2 = base.Columns["RemitToAddressLine2"];
                this.columnRemitToCity = base.Columns["RemitToCity"];
                this.columnRemitToState = base.Columns["RemitToState"];
                this.columnRemitToZip = base.Columns["RemitToZip"];
                this.columnRemitToZip4 = base.Columns["RemitToZip4"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnClientDivision = base.Columns["ClientDivision"];
                this.columnBillToName = base.Columns["BillToName"];
                this.columnBillToAddressline1 = base.Columns["BillToAddressline1"];
                this.columnBillToAddressline2 = base.Columns["BillToAddressline2"];
                this.columnBillToCity = base.Columns["BillToCity"];
                this.columnBillToState = base.Columns["BillToState"];
                this.columnBillToZip = base.Columns["BillToZip"];
                this.columnBillToZIP4 = base.Columns["BillToZIP4"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnReleaseDate = base.Columns["ReleaseDate"];
                this.columnStoreName = base.Columns["StoreName"];
                this.columnStoreState = base.Columns["StoreState"];
                this.columnStoreZip = base.Columns["StoreZip"];
                this.columnLocationCode = base.Columns["LocationCode"];
                this.columnCtnQty = base.Columns["CtnQty"];
                this.columnCartonRate = base.Columns["CartonRate"];
                this.columnPltQty = base.Columns["PltQty"];
                this.columnPalletRate = base.Columns["PalletRate"];
                this.columnWeight = base.Columns["Weight"];
                this.columnRatedWeight = base.Columns["RatedWeight"];
                this.columnWeightRate = base.Columns["WeightRate"];
                this.columnSurcharge = base.Columns["Surcharge"];
                this.columnConsolidationCharge = base.Columns["ConsolidationCharge"];
                this.columnFuelRate = base.Columns["FuelRate"];
                this.columnFuelSurcharge = base.Columns["FuelSurcharge"];
                this.columnDeliveryTotal = base.Columns["DeliveryTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRemitToName = new global::System.Data.DataColumn("RemitToName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToName);
                this.columnRemitToAddressLine1 = new global::System.Data.DataColumn("RemitToAddressLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToAddressLine1);
                this.columnRemitToAddressLine2 = new global::System.Data.DataColumn("RemitToAddressLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToAddressLine2);
                this.columnRemitToCity = new global::System.Data.DataColumn("RemitToCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToCity);
                this.columnRemitToState = new global::System.Data.DataColumn("RemitToState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToState);
                this.columnRemitToZip = new global::System.Data.DataColumn("RemitToZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToZip);
                this.columnRemitToZip4 = new global::System.Data.DataColumn("RemitToZip4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemitToZip4);
                this.columnTelephone = new global::System.Data.DataColumn("Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnClientNumber = new global::System.Data.DataColumn("ClientNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnClientDivision = new global::System.Data.DataColumn("ClientDivision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientDivision);
                this.columnBillToName = new global::System.Data.DataColumn("BillToName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToName);
                this.columnBillToAddressline1 = new global::System.Data.DataColumn("BillToAddressline1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToAddressline1);
                this.columnBillToAddressline2 = new global::System.Data.DataColumn("BillToAddressline2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToAddressline2);
                this.columnBillToCity = new global::System.Data.DataColumn("BillToCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToCity);
                this.columnBillToState = new global::System.Data.DataColumn("BillToState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToState);
                this.columnBillToZip = new global::System.Data.DataColumn("BillToZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToZip);
                this.columnBillToZIP4 = new global::System.Data.DataColumn("BillToZIP4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillToZIP4);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnReleaseDate = new global::System.Data.DataColumn("ReleaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleaseDate);
                this.columnStoreName = new global::System.Data.DataColumn("StoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreName);
                this.columnStoreState = new global::System.Data.DataColumn("StoreState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreState);
                this.columnStoreZip = new global::System.Data.DataColumn("StoreZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreZip);
                this.columnLocationCode = new global::System.Data.DataColumn("LocationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationCode);
                this.columnCtnQty = new global::System.Data.DataColumn("CtnQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtnQty);
                this.columnCartonRate = new global::System.Data.DataColumn("CartonRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonRate);
                this.columnPltQty = new global::System.Data.DataColumn("PltQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPltQty);
                this.columnPalletRate = new global::System.Data.DataColumn("PalletRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalletRate);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnRatedWeight = new global::System.Data.DataColumn("RatedWeight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatedWeight);
                this.columnWeightRate = new global::System.Data.DataColumn("WeightRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightRate);
                this.columnSurcharge = new global::System.Data.DataColumn("Surcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurcharge);
                this.columnConsolidationCharge = new global::System.Data.DataColumn("ConsolidationCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsolidationCharge);
                this.columnFuelRate = new global::System.Data.DataColumn("FuelRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelRate);
                this.columnFuelSurcharge = new global::System.Data.DataColumn("FuelSurcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurcharge);
                this.columnDeliveryTotal = new global::System.Data.DataColumn("DeliveryTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryTotal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceShipmentTableRow NewInvoiceShipmentTableRow() {
                return ((InvoiceShipmentTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoiceShipmentTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InvoiceShipmentTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoiceShipmentTableRowChanged != null)) {
                    this.InvoiceShipmentTableRowChanged(this, new InvoiceShipmentTableRowChangeEvent(((InvoiceShipmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoiceShipmentTableRowChanging != null)) {
                    this.InvoiceShipmentTableRowChanging(this, new InvoiceShipmentTableRowChangeEvent(((InvoiceShipmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoiceShipmentTableRowDeleted != null)) {
                    this.InvoiceShipmentTableRowDeleted(this, new InvoiceShipmentTableRowChangeEvent(((InvoiceShipmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoiceShipmentTableRowDeleting != null)) {
                    this.InvoiceShipmentTableRowDeleting(this, new InvoiceShipmentTableRowChangeEvent(((InvoiceShipmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoiceShipmentTableRow(InvoiceShipmentTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InvoiceDS ds = new InvoiceDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoiceShipmentTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClientTableRow : global::System.Data.DataRow {
            
            private ClientTableDataTable tableClientTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientTable = ((ClientTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.ClientNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.ClientNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DivisionNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.DivisionNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivisionNumber\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.DivisionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TerminalCode {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.TerminalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerminalCode\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.TerminalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TerminalName {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.TerminalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerminalName\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.TerminalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ARNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.ARNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARNumber\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.ARNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableClientTable.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ClientTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientTable.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableClientTable.ClientNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableClientTable.ClientNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNumberNull() {
                return this.IsNull(this.tableClientTable.DivisionNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNumberNull() {
                this[this.tableClientTable.DivisionNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableClientTable.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableClientTable.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalCodeNull() {
                return this.IsNull(this.tableClientTable.TerminalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalCodeNull() {
                this[this.tableClientTable.TerminalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalNameNull() {
                return this.IsNull(this.tableClientTable.TerminalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalNameNull() {
                this[this.tableClientTable.TerminalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsARNumberNull() {
                return this.IsNull(this.tableClientTable.ARNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetARNumberNull() {
                this[this.tableClientTable.ARNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableClientTable.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableClientTable.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClientInvoiceTableRow : global::System.Data.DataRow {
            
            private ClientInvoiceTableDataTable tableClientInvoiceTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientInvoiceTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientInvoiceTable = ((ClientInvoiceTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientInvoiceTable.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientInvoiceTable.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PostToARDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientInvoiceTable.PostToARDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostToARDate\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.PostToARDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cartons {
                get {
                    try {
                        return ((int)(this[this.tableClientInvoiceTable.CartonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cartons\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.CartonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Pallets {
                get {
                    try {
                        return ((int)(this[this.tableClientInvoiceTable.PalletsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pallets\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.PalletsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableClientInvoiceTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableClientInvoiceTable.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableClientInvoiceTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReleaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientInvoiceTable.ReleaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReleaseDate\' in table \'ClientInvoiceTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientInvoiceTable.ReleaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tableClientInvoiceTable.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tableClientInvoiceTable.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableClientInvoiceTable.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tableClientInvoiceTable.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostToARDateNull() {
                return this.IsNull(this.tableClientInvoiceTable.PostToARDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostToARDateNull() {
                this[this.tableClientInvoiceTable.PostToARDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsNull() {
                return this.IsNull(this.tableClientInvoiceTable.CartonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsNull() {
                this[this.tableClientInvoiceTable.CartonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPalletsNull() {
                return this.IsNull(this.tableClientInvoiceTable.PalletsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPalletsNull() {
                this[this.tableClientInvoiceTable.PalletsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableClientInvoiceTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableClientInvoiceTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableClientInvoiceTable.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableClientInvoiceTable.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableClientInvoiceTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableClientInvoiceTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReleaseDateNull() {
                return this.IsNull(this.tableClientInvoiceTable.ReleaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReleaseDateNull() {
                this[this.tableClientInvoiceTable.ReleaseDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InvoiceShipmentTableRow : global::System.Data.DataRow {
            
            private InvoiceShipmentTableDataTable tableInvoiceShipmentTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceShipmentTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoiceShipmentTable = ((InvoiceShipmentTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToName {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToName\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToAddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToAddressLine1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToAddressLine1\' in table \'InvoiceShipmentTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToAddressLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToAddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToAddressLine2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToAddressLine2\' in table \'InvoiceShipmentTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToAddressLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToCity {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToCity\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToState {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToState\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToZip {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToZip\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RemitToZip4 {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.RemitToZip4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemitToZip4\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RemitToZip4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telephone\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.ClientNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.ClientNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientDivision {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.ClientDivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientDivision\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.ClientDivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToName {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToName\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToAddressline1 {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToAddressline1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToAddressline1\' in table \'InvoiceShipmentTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToAddressline1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToAddressline2 {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToAddressline2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToAddressline2\' in table \'InvoiceShipmentTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToAddressline2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToCity {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToCity\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToState {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToState\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToZip {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToZip\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillToZIP4 {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.BillToZIP4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillToZIP4\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.BillToZIP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceShipmentTable.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReleaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceShipmentTable.ReleaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReleaseDate\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.ReleaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreName {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.StoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreName\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.StoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreState {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.StoreStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreState\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.StoreStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreZip {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.StoreZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreZip\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.StoreZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationCode {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceShipmentTable.LocationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationCode\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.LocationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CtnQty {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceShipmentTable.CtnQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CtnQty\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.CtnQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CartonRate {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.CartonRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonRate\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.CartonRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PltQty {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceShipmentTable.PltQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PltQty\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.PltQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PalletRate {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.PalletRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PalletRate\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.PalletRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceShipmentTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RatedWeight {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceShipmentTable.RatedWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatedWeight\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.RatedWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WeightRate {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.WeightRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeightRate\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.WeightRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Surcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.SurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Surcharge\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.SurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ConsolidationCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.ConsolidationChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsolidationCharge\' in table \'InvoiceShipmentTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.ConsolidationChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FuelRate {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.FuelRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelRate\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.FuelRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FuelSurcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.FuelSurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurcharge\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.FuelSurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeliveryTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceShipmentTable.DeliveryTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryTotal\' in table \'InvoiceShipmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceShipmentTable.DeliveryTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToNameNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToNameNull() {
                this[this.tableInvoiceShipmentTable.RemitToNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToAddressLine1Null() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToAddressLine1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToAddressLine1Null() {
                this[this.tableInvoiceShipmentTable.RemitToAddressLine1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToAddressLine2Null() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToAddressLine2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToAddressLine2Null() {
                this[this.tableInvoiceShipmentTable.RemitToAddressLine2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToCityNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToCityNull() {
                this[this.tableInvoiceShipmentTable.RemitToCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToStateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToStateNull() {
                this[this.tableInvoiceShipmentTable.RemitToStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToZipNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToZipNull() {
                this[this.tableInvoiceShipmentTable.RemitToZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemitToZip4Null() {
                return this.IsNull(this.tableInvoiceShipmentTable.RemitToZip4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemitToZip4Null() {
                this[this.tableInvoiceShipmentTable.RemitToZip4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNull() {
                this[this.tableInvoiceShipmentTable.TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.ClientNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableInvoiceShipmentTable.ClientNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientDivisionNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.ClientDivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientDivisionNull() {
                this[this.tableInvoiceShipmentTable.ClientDivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToNameNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToNameNull() {
                this[this.tableInvoiceShipmentTable.BillToNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToAddressline1Null() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToAddressline1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToAddressline1Null() {
                this[this.tableInvoiceShipmentTable.BillToAddressline1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToAddressline2Null() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToAddressline2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToAddressline2Null() {
                this[this.tableInvoiceShipmentTable.BillToAddressline2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToCityNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToCityNull() {
                this[this.tableInvoiceShipmentTable.BillToCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToStateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToStateNull() {
                this[this.tableInvoiceShipmentTable.BillToStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToZipNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToZipNull() {
                this[this.tableInvoiceShipmentTable.BillToZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillToZIP4Null() {
                return this.IsNull(this.tableInvoiceShipmentTable.BillToZIP4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillToZIP4Null() {
                this[this.tableInvoiceShipmentTable.BillToZIP4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tableInvoiceShipmentTable.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tableInvoiceShipmentTable.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReleaseDateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.ReleaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReleaseDateNull() {
                this[this.tableInvoiceShipmentTable.ReleaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNameNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.StoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNameNull() {
                this[this.tableInvoiceShipmentTable.StoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreStateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.StoreStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreStateNull() {
                this[this.tableInvoiceShipmentTable.StoreStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreZipNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.StoreZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreZipNull() {
                this[this.tableInvoiceShipmentTable.StoreZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationCodeNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.LocationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationCodeNull() {
                this[this.tableInvoiceShipmentTable.LocationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtnQtyNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.CtnQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtnQtyNull() {
                this[this.tableInvoiceShipmentTable.CtnQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonRateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.CartonRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonRateNull() {
                this[this.tableInvoiceShipmentTable.CartonRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPltQtyNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.PltQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPltQtyNull() {
                this[this.tableInvoiceShipmentTable.PltQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPalletRateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.PalletRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPalletRateNull() {
                this[this.tableInvoiceShipmentTable.PalletRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableInvoiceShipmentTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatedWeightNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.RatedWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatedWeightNull() {
                this[this.tableInvoiceShipmentTable.RatedWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightRateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.WeightRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightRateNull() {
                this[this.tableInvoiceShipmentTable.WeightRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurchargeNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.SurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurchargeNull() {
                this[this.tableInvoiceShipmentTable.SurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsolidationChargeNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.ConsolidationChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsolidationChargeNull() {
                this[this.tableInvoiceShipmentTable.ConsolidationChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFuelRateNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.FuelRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFuelRateNull() {
                this[this.tableInvoiceShipmentTable.FuelRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFuelSurchargeNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.FuelSurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFuelSurchargeNull() {
                this[this.tableInvoiceShipmentTable.FuelSurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryTotalNull() {
                return this.IsNull(this.tableInvoiceShipmentTable.DeliveryTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryTotalNull() {
                this[this.tableInvoiceShipmentTable.DeliveryTotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClientTableRowChangeEvent : global::System.EventArgs {
            
            private ClientTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientTableRowChangeEvent(ClientTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClientInvoiceTableRowChangeEvent : global::System.EventArgs {
            
            private ClientInvoiceTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientInvoiceTableRowChangeEvent(ClientInvoiceTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientInvoiceTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InvoiceShipmentTableRowChangeEvent : global::System.EventArgs {
            
            private InvoiceShipmentTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceShipmentTableRowChangeEvent(InvoiceShipmentTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceShipmentTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591