//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Enterprise {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class OutboundAgentServiceDS : DataSet {
        
        private OutboundAgentServiceTableDataTable tableOutboundAgentServiceTable;
        
        public OutboundAgentServiceDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected OutboundAgentServiceDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["OutboundAgentServiceTable"] != null)) {
                    this.Tables.Add(new OutboundAgentServiceTableDataTable(ds.Tables["OutboundAgentServiceTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OutboundAgentServiceTableDataTable OutboundAgentServiceTable {
            get {
                return this.tableOutboundAgentServiceTable;
            }
        }
        
        public override DataSet Clone() {
            OutboundAgentServiceDS cln = ((OutboundAgentServiceDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["OutboundAgentServiceTable"] != null)) {
                this.Tables.Add(new OutboundAgentServiceTableDataTable(ds.Tables["OutboundAgentServiceTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableOutboundAgentServiceTable = ((OutboundAgentServiceTableDataTable)(this.Tables["OutboundAgentServiceTable"]));
            if ((this.tableOutboundAgentServiceTable != null)) {
                this.tableOutboundAgentServiceTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "OutboundAgentServiceDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/OutboundAgentServiceDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableOutboundAgentServiceTable = new OutboundAgentServiceTableDataTable();
            this.Tables.Add(this.tableOutboundAgentServiceTable);
        }
        
        private bool ShouldSerializeOutboundAgentServiceTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void OutboundAgentServiceTableRowChangeEventHandler(object sender, OutboundAgentServiceTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class OutboundAgentServiceTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnAgentServiceID;
            
            private DataColumn columnAgentID;
            
            private DataColumn columnServiceCode;
            
            private DataColumn columnDescription;
            
            private DataColumn columnFactor;
            
            internal OutboundAgentServiceTableDataTable() : 
                    base("OutboundAgentServiceTable") {
                this.InitClass();
            }
            
            internal OutboundAgentServiceTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn AgentServiceIDColumn {
                get {
                    return this.columnAgentServiceID;
                }
            }
            
            internal DataColumn AgentIDColumn {
                get {
                    return this.columnAgentID;
                }
            }
            
            internal DataColumn ServiceCodeColumn {
                get {
                    return this.columnServiceCode;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn FactorColumn {
                get {
                    return this.columnFactor;
                }
            }
            
            public OutboundAgentServiceTableRow this[int index] {
                get {
                    return ((OutboundAgentServiceTableRow)(this.Rows[index]));
                }
            }
            
            public event OutboundAgentServiceTableRowChangeEventHandler OutboundAgentServiceTableRowChanged;
            
            public event OutboundAgentServiceTableRowChangeEventHandler OutboundAgentServiceTableRowChanging;
            
            public event OutboundAgentServiceTableRowChangeEventHandler OutboundAgentServiceTableRowDeleted;
            
            public event OutboundAgentServiceTableRowChangeEventHandler OutboundAgentServiceTableRowDeleting;
            
            public void AddOutboundAgentServiceTableRow(OutboundAgentServiceTableRow row) {
                this.Rows.Add(row);
            }
            
            public OutboundAgentServiceTableRow AddOutboundAgentServiceTableRow(int AgentID, string ServiceCode, string Description, int Factor) {
                OutboundAgentServiceTableRow rowOutboundAgentServiceTableRow = ((OutboundAgentServiceTableRow)(this.NewRow()));
                rowOutboundAgentServiceTableRow.ItemArray = new object[] {
                        null,
                        AgentID,
                        ServiceCode,
                        Description,
                        Factor};
                this.Rows.Add(rowOutboundAgentServiceTableRow);
                return rowOutboundAgentServiceTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                OutboundAgentServiceTableDataTable cln = ((OutboundAgentServiceTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new OutboundAgentServiceTableDataTable();
            }
            
            internal void InitVars() {
                this.columnAgentServiceID = this.Columns["AgentServiceID"];
                this.columnAgentID = this.Columns["AgentID"];
                this.columnServiceCode = this.Columns["ServiceCode"];
                this.columnDescription = this.Columns["Description"];
                this.columnFactor = this.Columns["Factor"];
            }
            
            private void InitClass() {
                this.columnAgentServiceID = new DataColumn("AgentServiceID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgentServiceID);
                this.columnAgentID = new DataColumn("AgentID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgentID);
                this.columnServiceCode = new DataColumn("ServiceCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceCode);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnFactor = new DataColumn("Factor", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFactor);
                this.columnAgentServiceID.AutoIncrement = true;
                this.columnAgentServiceID.AllowDBNull = false;
                this.columnAgentServiceID.ReadOnly = true;
                this.columnAgentID.AllowDBNull = false;
                this.columnServiceCode.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnFactor.AllowDBNull = false;
            }
            
            public OutboundAgentServiceTableRow NewOutboundAgentServiceTableRow() {
                return ((OutboundAgentServiceTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new OutboundAgentServiceTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(OutboundAgentServiceTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OutboundAgentServiceTableRowChanged != null)) {
                    this.OutboundAgentServiceTableRowChanged(this, new OutboundAgentServiceTableRowChangeEvent(((OutboundAgentServiceTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OutboundAgentServiceTableRowChanging != null)) {
                    this.OutboundAgentServiceTableRowChanging(this, new OutboundAgentServiceTableRowChangeEvent(((OutboundAgentServiceTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OutboundAgentServiceTableRowDeleted != null)) {
                    this.OutboundAgentServiceTableRowDeleted(this, new OutboundAgentServiceTableRowChangeEvent(((OutboundAgentServiceTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OutboundAgentServiceTableRowDeleting != null)) {
                    this.OutboundAgentServiceTableRowDeleting(this, new OutboundAgentServiceTableRowChangeEvent(((OutboundAgentServiceTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveOutboundAgentServiceTableRow(OutboundAgentServiceTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class OutboundAgentServiceTableRow : DataRow {
            
            private OutboundAgentServiceTableDataTable tableOutboundAgentServiceTable;
            
            internal OutboundAgentServiceTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableOutboundAgentServiceTable = ((OutboundAgentServiceTableDataTable)(this.Table));
            }
            
            public int AgentServiceID {
                get {
                    return ((int)(this[this.tableOutboundAgentServiceTable.AgentServiceIDColumn]));
                }
                set {
                    this[this.tableOutboundAgentServiceTable.AgentServiceIDColumn] = value;
                }
            }
            
            public int AgentID {
                get {
                    return ((int)(this[this.tableOutboundAgentServiceTable.AgentIDColumn]));
                }
                set {
                    this[this.tableOutboundAgentServiceTable.AgentIDColumn] = value;
                }
            }
            
            public string ServiceCode {
                get {
                    return ((string)(this[this.tableOutboundAgentServiceTable.ServiceCodeColumn]));
                }
                set {
                    this[this.tableOutboundAgentServiceTable.ServiceCodeColumn] = value;
                }
            }
            
            public string Description {
                get {
                    return ((string)(this[this.tableOutboundAgentServiceTable.DescriptionColumn]));
                }
                set {
                    this[this.tableOutboundAgentServiceTable.DescriptionColumn] = value;
                }
            }
            
            public int Factor {
                get {
                    return ((int)(this[this.tableOutboundAgentServiceTable.FactorColumn]));
                }
                set {
                    this[this.tableOutboundAgentServiceTable.FactorColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class OutboundAgentServiceTableRowChangeEvent : EventArgs {
            
            private OutboundAgentServiceTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public OutboundAgentServiceTableRowChangeEvent(OutboundAgentServiceTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public OutboundAgentServiceTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
