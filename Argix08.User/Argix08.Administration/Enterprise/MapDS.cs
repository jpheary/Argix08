//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Enterprise {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class MapDS : DataSet {
        
        private MapViewTableDataTable tableMapViewTable;
        
        private MapDetailTableDataTable tableMapDetailTable;
        
        private PostalCodeMappingTableDataTable tablePostalCodeMappingTable;
        
        private PostalCodeMappingTable3DataTable tablePostalCodeMappingTable3;
        
        private PostalCodeMappingTable5DataTable tablePostalCodeMappingTable5;
        
        public MapDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected MapDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["MapViewTable"] != null)) {
                    this.Tables.Add(new MapViewTableDataTable(ds.Tables["MapViewTable"]));
                }
                if ((ds.Tables["MapDetailTable"] != null)) {
                    this.Tables.Add(new MapDetailTableDataTable(ds.Tables["MapDetailTable"]));
                }
                if ((ds.Tables["PostalCodeMappingTable"] != null)) {
                    this.Tables.Add(new PostalCodeMappingTableDataTable(ds.Tables["PostalCodeMappingTable"]));
                }
                if ((ds.Tables["PostalCodeMappingTable3"] != null)) {
                    this.Tables.Add(new PostalCodeMappingTable3DataTable(ds.Tables["PostalCodeMappingTable3"]));
                }
                if ((ds.Tables["PostalCodeMappingTable5"] != null)) {
                    this.Tables.Add(new PostalCodeMappingTable5DataTable(ds.Tables["PostalCodeMappingTable5"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MapViewTableDataTable MapViewTable {
            get {
                return this.tableMapViewTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MapDetailTableDataTable MapDetailTable {
            get {
                return this.tableMapDetailTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PostalCodeMappingTableDataTable PostalCodeMappingTable {
            get {
                return this.tablePostalCodeMappingTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PostalCodeMappingTable3DataTable PostalCodeMappingTable3 {
            get {
                return this.tablePostalCodeMappingTable3;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PostalCodeMappingTable5DataTable PostalCodeMappingTable5 {
            get {
                return this.tablePostalCodeMappingTable5;
            }
        }
        
        public override DataSet Clone() {
            MapDS cln = ((MapDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["MapViewTable"] != null)) {
                this.Tables.Add(new MapViewTableDataTable(ds.Tables["MapViewTable"]));
            }
            if ((ds.Tables["MapDetailTable"] != null)) {
                this.Tables.Add(new MapDetailTableDataTable(ds.Tables["MapDetailTable"]));
            }
            if ((ds.Tables["PostalCodeMappingTable"] != null)) {
                this.Tables.Add(new PostalCodeMappingTableDataTable(ds.Tables["PostalCodeMappingTable"]));
            }
            if ((ds.Tables["PostalCodeMappingTable3"] != null)) {
                this.Tables.Add(new PostalCodeMappingTable3DataTable(ds.Tables["PostalCodeMappingTable3"]));
            }
            if ((ds.Tables["PostalCodeMappingTable5"] != null)) {
                this.Tables.Add(new PostalCodeMappingTable5DataTable(ds.Tables["PostalCodeMappingTable5"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableMapViewTable = ((MapViewTableDataTable)(this.Tables["MapViewTable"]));
            if ((this.tableMapViewTable != null)) {
                this.tableMapViewTable.InitVars();
            }
            this.tableMapDetailTable = ((MapDetailTableDataTable)(this.Tables["MapDetailTable"]));
            if ((this.tableMapDetailTable != null)) {
                this.tableMapDetailTable.InitVars();
            }
            this.tablePostalCodeMappingTable = ((PostalCodeMappingTableDataTable)(this.Tables["PostalCodeMappingTable"]));
            if ((this.tablePostalCodeMappingTable != null)) {
                this.tablePostalCodeMappingTable.InitVars();
            }
            this.tablePostalCodeMappingTable3 = ((PostalCodeMappingTable3DataTable)(this.Tables["PostalCodeMappingTable3"]));
            if ((this.tablePostalCodeMappingTable3 != null)) {
                this.tablePostalCodeMappingTable3.InitVars();
            }
            this.tablePostalCodeMappingTable5 = ((PostalCodeMappingTable5DataTable)(this.Tables["PostalCodeMappingTable5"]));
            if ((this.tablePostalCodeMappingTable5 != null)) {
                this.tablePostalCodeMappingTable5.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "MapDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/MapDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableMapViewTable = new MapViewTableDataTable();
            this.Tables.Add(this.tableMapViewTable);
            this.tableMapDetailTable = new MapDetailTableDataTable();
            this.Tables.Add(this.tableMapDetailTable);
            this.tablePostalCodeMappingTable = new PostalCodeMappingTableDataTable();
            this.Tables.Add(this.tablePostalCodeMappingTable);
            this.tablePostalCodeMappingTable3 = new PostalCodeMappingTable3DataTable();
            this.Tables.Add(this.tablePostalCodeMappingTable3);
            this.tablePostalCodeMappingTable5 = new PostalCodeMappingTable5DataTable();
            this.Tables.Add(this.tablePostalCodeMappingTable5);
        }
        
        private bool ShouldSerializeMapViewTable() {
            return false;
        }
        
        private bool ShouldSerializeMapDetailTable() {
            return false;
        }
        
        private bool ShouldSerializePostalCodeMappingTable() {
            return false;
        }
        
        private bool ShouldSerializePostalCodeMappingTable3() {
            return false;
        }
        
        private bool ShouldSerializePostalCodeMappingTable5() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void MapViewTableRowChangeEventHandler(object sender, MapViewTableRowChangeEvent e);
        
        public delegate void MapDetailTableRowChangeEventHandler(object sender, MapDetailTableRowChangeEvent e);
        
        public delegate void PostalCodeMappingTableRowChangeEventHandler(object sender, PostalCodeMappingTableRowChangeEvent e);
        
        public delegate void PostalCodeMappingTable3RowChangeEventHandler(object sender, PostalCodeMappingTable3RowChangeEvent e);
        
        public delegate void PostalCodeMappingTable5RowChangeEventHandler(object sender, PostalCodeMappingTable5RowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MapViewTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMapID;
            
            private DataColumn columnSortCenterID;
            
            private DataColumn columnSortCenter;
            
            private DataColumn columnClientID;
            
            private DataColumn columnNumber;
            
            private DataColumn columnClientName;
            
            private DataColumn columnDescription;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal MapViewTableDataTable() : 
                    base("MapViewTable") {
                this.InitClass();
            }
            
            internal MapViewTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MapIDColumn {
                get {
                    return this.columnMapID;
                }
            }
            
            internal DataColumn SortCenterIDColumn {
                get {
                    return this.columnSortCenterID;
                }
            }
            
            internal DataColumn SortCenterColumn {
                get {
                    return this.columnSortCenter;
                }
            }
            
            internal DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public MapViewTableRow this[int index] {
                get {
                    return ((MapViewTableRow)(this.Rows[index]));
                }
            }
            
            public event MapViewTableRowChangeEventHandler MapViewTableRowChanged;
            
            public event MapViewTableRowChangeEventHandler MapViewTableRowChanging;
            
            public event MapViewTableRowChangeEventHandler MapViewTableRowDeleted;
            
            public event MapViewTableRowChangeEventHandler MapViewTableRowDeleting;
            
            public void AddMapViewTableRow(MapViewTableRow row) {
                this.Rows.Add(row);
            }
            
            public MapViewTableRow AddMapViewTableRow(string MapID, int SortCenterID, string SortCenter, int ClientID, string Number, string ClientName, string Description, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                MapViewTableRow rowMapViewTableRow = ((MapViewTableRow)(this.NewRow()));
                rowMapViewTableRow.ItemArray = new object[] {
                        MapID,
                        SortCenterID,
                        SortCenter,
                        ClientID,
                        Number,
                        ClientName,
                        Description,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowMapViewTableRow);
                return rowMapViewTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MapViewTableDataTable cln = ((MapViewTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MapViewTableDataTable();
            }
            
            internal void InitVars() {
                this.columnMapID = this.Columns["MapID"];
                this.columnSortCenterID = this.Columns["SortCenterID"];
                this.columnSortCenter = this.Columns["SortCenter"];
                this.columnClientID = this.Columns["ClientID"];
                this.columnNumber = this.Columns["Number"];
                this.columnClientName = this.Columns["ClientName"];
                this.columnDescription = this.Columns["Description"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnMapID = new DataColumn("MapID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMapID);
                this.columnSortCenterID = new DataColumn("SortCenterID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenterID);
                this.columnSortCenter = new DataColumn("SortCenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenter);
                this.columnClientID = new DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientID);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnClientName = new DataColumn("ClientName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientName);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnMapID.AllowDBNull = false;
                this.columnSortCenterID.AllowDBNull = false;
                this.columnSortCenter.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnLastUpdated.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
            }
            
            public MapViewTableRow NewMapViewTableRow() {
                return ((MapViewTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MapViewTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MapViewTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MapViewTableRowChanged != null)) {
                    this.MapViewTableRowChanged(this, new MapViewTableRowChangeEvent(((MapViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MapViewTableRowChanging != null)) {
                    this.MapViewTableRowChanging(this, new MapViewTableRowChangeEvent(((MapViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MapViewTableRowDeleted != null)) {
                    this.MapViewTableRowDeleted(this, new MapViewTableRowChangeEvent(((MapViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MapViewTableRowDeleting != null)) {
                    this.MapViewTableRowDeleting(this, new MapViewTableRowChangeEvent(((MapViewTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMapViewTableRow(MapViewTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MapViewTableRow : DataRow {
            
            private MapViewTableDataTable tableMapViewTable;
            
            internal MapViewTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMapViewTable = ((MapViewTableDataTable)(this.Table));
            }
            
            public string MapID {
                get {
                    return ((string)(this[this.tableMapViewTable.MapIDColumn]));
                }
                set {
                    this[this.tableMapViewTable.MapIDColumn] = value;
                }
            }
            
            public int SortCenterID {
                get {
                    return ((int)(this[this.tableMapViewTable.SortCenterIDColumn]));
                }
                set {
                    this[this.tableMapViewTable.SortCenterIDColumn] = value;
                }
            }
            
            public string SortCenter {
                get {
                    return ((string)(this[this.tableMapViewTable.SortCenterColumn]));
                }
                set {
                    this[this.tableMapViewTable.SortCenterColumn] = value;
                }
            }
            
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableMapViewTable.ClientIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapViewTable.ClientIDColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableMapViewTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapViewTable.NumberColumn] = value;
                }
            }
            
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableMapViewTable.ClientNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapViewTable.ClientNameColumn] = value;
                }
            }
            
            public string Description {
                get {
                    return ((string)(this[this.tableMapViewTable.DescriptionColumn]));
                }
                set {
                    this[this.tableMapViewTable.DescriptionColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableMapViewTable.IsActiveColumn]));
                }
                set {
                    this[this.tableMapViewTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    return ((System.DateTime)(this[this.tableMapViewTable.LastUpdatedColumn]));
                }
                set {
                    this[this.tableMapViewTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    return ((string)(this[this.tableMapViewTable.UserIDColumn]));
                }
                set {
                    this[this.tableMapViewTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableMapViewTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapViewTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsClientIDNull() {
                return this.IsNull(this.tableMapViewTable.ClientIDColumn);
            }
            
            public void SetClientIDNull() {
                this[this.tableMapViewTable.ClientIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableMapViewTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableMapViewTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNameNull() {
                return this.IsNull(this.tableMapViewTable.ClientNameColumn);
            }
            
            public void SetClientNameNull() {
                this[this.tableMapViewTable.ClientNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableMapViewTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableMapViewTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MapViewTableRowChangeEvent : EventArgs {
            
            private MapViewTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public MapViewTableRowChangeEvent(MapViewTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MapViewTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MapDetailTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMapID;
            
            private DataColumn columnSortCenterID;
            
            private DataColumn columnSortCenter;
            
            private DataColumn columnClientID;
            
            private DataColumn columnNumber;
            
            private DataColumn columnClientName;
            
            private DataColumn columnDescription;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal MapDetailTableDataTable() : 
                    base("MapDetailTable") {
                this.InitClass();
            }
            
            internal MapDetailTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MapIDColumn {
                get {
                    return this.columnMapID;
                }
            }
            
            internal DataColumn SortCenterIDColumn {
                get {
                    return this.columnSortCenterID;
                }
            }
            
            internal DataColumn SortCenterColumn {
                get {
                    return this.columnSortCenter;
                }
            }
            
            internal DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public MapDetailTableRow this[int index] {
                get {
                    return ((MapDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event MapDetailTableRowChangeEventHandler MapDetailTableRowChanged;
            
            public event MapDetailTableRowChangeEventHandler MapDetailTableRowChanging;
            
            public event MapDetailTableRowChangeEventHandler MapDetailTableRowDeleted;
            
            public event MapDetailTableRowChangeEventHandler MapDetailTableRowDeleting;
            
            public void AddMapDetailTableRow(MapDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            public MapDetailTableRow AddMapDetailTableRow(string MapID, int SortCenterID, string SortCenter, int ClientID, string Number, string ClientName, string Description, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                MapDetailTableRow rowMapDetailTableRow = ((MapDetailTableRow)(this.NewRow()));
                rowMapDetailTableRow.ItemArray = new object[] {
                        MapID,
                        SortCenterID,
                        SortCenter,
                        ClientID,
                        Number,
                        ClientName,
                        Description,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowMapDetailTableRow);
                return rowMapDetailTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MapDetailTableDataTable cln = ((MapDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MapDetailTableDataTable();
            }
            
            internal void InitVars() {
                this.columnMapID = this.Columns["MapID"];
                this.columnSortCenterID = this.Columns["SortCenterID"];
                this.columnSortCenter = this.Columns["SortCenter"];
                this.columnClientID = this.Columns["ClientID"];
                this.columnNumber = this.Columns["Number"];
                this.columnClientName = this.Columns["ClientName"];
                this.columnDescription = this.Columns["Description"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnMapID = new DataColumn("MapID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMapID);
                this.columnSortCenterID = new DataColumn("SortCenterID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenterID);
                this.columnSortCenter = new DataColumn("SortCenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenter);
                this.columnClientID = new DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientID);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnClientName = new DataColumn("ClientName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientName);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnMapID.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnLastUpdated.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
            }
            
            public MapDetailTableRow NewMapDetailTableRow() {
                return ((MapDetailTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MapDetailTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MapDetailTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MapDetailTableRowChanged != null)) {
                    this.MapDetailTableRowChanged(this, new MapDetailTableRowChangeEvent(((MapDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MapDetailTableRowChanging != null)) {
                    this.MapDetailTableRowChanging(this, new MapDetailTableRowChangeEvent(((MapDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MapDetailTableRowDeleted != null)) {
                    this.MapDetailTableRowDeleted(this, new MapDetailTableRowChangeEvent(((MapDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MapDetailTableRowDeleting != null)) {
                    this.MapDetailTableRowDeleting(this, new MapDetailTableRowChangeEvent(((MapDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMapDetailTableRow(MapDetailTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MapDetailTableRow : DataRow {
            
            private MapDetailTableDataTable tableMapDetailTable;
            
            internal MapDetailTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMapDetailTable = ((MapDetailTableDataTable)(this.Table));
            }
            
            public string MapID {
                get {
                    return ((string)(this[this.tableMapDetailTable.MapIDColumn]));
                }
                set {
                    this[this.tableMapDetailTable.MapIDColumn] = value;
                }
            }
            
            public int SortCenterID {
                get {
                    try {
                        return ((int)(this[this.tableMapDetailTable.SortCenterIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapDetailTable.SortCenterIDColumn] = value;
                }
            }
            
            public string SortCenter {
                get {
                    try {
                        return ((string)(this[this.tableMapDetailTable.SortCenterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapDetailTable.SortCenterColumn] = value;
                }
            }
            
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableMapDetailTable.ClientIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapDetailTable.ClientIDColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableMapDetailTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapDetailTable.NumberColumn] = value;
                }
            }
            
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableMapDetailTable.ClientNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapDetailTable.ClientNameColumn] = value;
                }
            }
            
            public string Description {
                get {
                    return ((string)(this[this.tableMapDetailTable.DescriptionColumn]));
                }
                set {
                    this[this.tableMapDetailTable.DescriptionColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableMapDetailTable.IsActiveColumn]));
                }
                set {
                    this[this.tableMapDetailTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    return ((System.DateTime)(this[this.tableMapDetailTable.LastUpdatedColumn]));
                }
                set {
                    this[this.tableMapDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    return ((string)(this[this.tableMapDetailTable.UserIDColumn]));
                }
                set {
                    this[this.tableMapDetailTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableMapDetailTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMapDetailTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsSortCenterIDNull() {
                return this.IsNull(this.tableMapDetailTable.SortCenterIDColumn);
            }
            
            public void SetSortCenterIDNull() {
                this[this.tableMapDetailTable.SortCenterIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortCenterNull() {
                return this.IsNull(this.tableMapDetailTable.SortCenterColumn);
            }
            
            public void SetSortCenterNull() {
                this[this.tableMapDetailTable.SortCenterColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientIDNull() {
                return this.IsNull(this.tableMapDetailTable.ClientIDColumn);
            }
            
            public void SetClientIDNull() {
                this[this.tableMapDetailTable.ClientIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableMapDetailTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableMapDetailTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNameNull() {
                return this.IsNull(this.tableMapDetailTable.ClientNameColumn);
            }
            
            public void SetClientNameNull() {
                this[this.tableMapDetailTable.ClientNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableMapDetailTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableMapDetailTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MapDetailTableRowChangeEvent : EventArgs {
            
            private MapDetailTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public MapDetailTableRowChangeEvent(MapDetailTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MapDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMapID;
            
            private DataColumn columnSortCenterID;
            
            private DataColumn columnSortCenter;
            
            private DataColumn columnClientID;
            
            private DataColumn columnNumber;
            
            private DataColumn columnClientName;
            
            private DataColumn columnDescription;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnCountryID;
            
            private DataColumn columnCountry;
            
            private DataColumn columnPostalCode;
            
            private DataColumn columnStateOrProvince;
            
            private DataColumn columnOldPathIDTsort;
            
            private DataColumn columnOldTsortPathMnemonic;
            
            private DataColumn columnOldTsortPathLastStopMnemonic;
            
            private DataColumn columnOldServiceIDTsort;
            
            private DataColumn columnOldTsortServiceMnemonic;
            
            private DataColumn columnOldPathIDReturns;
            
            private DataColumn columnOldReturnPathMnemonic;
            
            private DataColumn columnOldReturnPathLastStopMnemonic;
            
            private DataColumn columnOldServiceIDReturns;
            
            private DataColumn columnOldReturnServiceMnemonic;
            
            private DataColumn columnPathIDTsort;
            
            private DataColumn columnTsortPathMnemonic;
            
            private DataColumn columnTsortPathLastStopMnemonic;
            
            private DataColumn columnServiceIDTsort;
            
            private DataColumn columnTsortServiceMnemonic;
            
            private DataColumn columnPathIDReturns;
            
            private DataColumn columnReturnPathMnemonic;
            
            private DataColumn columnReturnPathLastStopMnemonic;
            
            private DataColumn columnServiceIDReturns;
            
            private DataColumn columnReturnServiceMnemonic;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnStatus;
            
            private DataColumn columnRowAction;
            
            internal PostalCodeMappingTableDataTable() : 
                    base("PostalCodeMappingTable") {
                this.InitClass();
            }
            
            internal PostalCodeMappingTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MapIDColumn {
                get {
                    return this.columnMapID;
                }
            }
            
            internal DataColumn SortCenterIDColumn {
                get {
                    return this.columnSortCenterID;
                }
            }
            
            internal DataColumn SortCenterColumn {
                get {
                    return this.columnSortCenter;
                }
            }
            
            internal DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            internal DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            internal DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            internal DataColumn StateOrProvinceColumn {
                get {
                    return this.columnStateOrProvince;
                }
            }
            
            internal DataColumn OldPathIDTsortColumn {
                get {
                    return this.columnOldPathIDTsort;
                }
            }
            
            internal DataColumn OldTsortPathMnemonicColumn {
                get {
                    return this.columnOldTsortPathMnemonic;
                }
            }
            
            internal DataColumn OldTsortPathLastStopMnemonicColumn {
                get {
                    return this.columnOldTsortPathLastStopMnemonic;
                }
            }
            
            internal DataColumn OldServiceIDTsortColumn {
                get {
                    return this.columnOldServiceIDTsort;
                }
            }
            
            internal DataColumn OldTsortServiceMnemonicColumn {
                get {
                    return this.columnOldTsortServiceMnemonic;
                }
            }
            
            internal DataColumn OldPathIDReturnsColumn {
                get {
                    return this.columnOldPathIDReturns;
                }
            }
            
            internal DataColumn OldReturnPathMnemonicColumn {
                get {
                    return this.columnOldReturnPathMnemonic;
                }
            }
            
            internal DataColumn OldReturnPathLastStopMnemonicColumn {
                get {
                    return this.columnOldReturnPathLastStopMnemonic;
                }
            }
            
            internal DataColumn OldServiceIDReturnsColumn {
                get {
                    return this.columnOldServiceIDReturns;
                }
            }
            
            internal DataColumn OldReturnServiceMnemonicColumn {
                get {
                    return this.columnOldReturnServiceMnemonic;
                }
            }
            
            internal DataColumn PathIDTsortColumn {
                get {
                    return this.columnPathIDTsort;
                }
            }
            
            internal DataColumn TsortPathMnemonicColumn {
                get {
                    return this.columnTsortPathMnemonic;
                }
            }
            
            internal DataColumn TsortPathLastStopMnemonicColumn {
                get {
                    return this.columnTsortPathLastStopMnemonic;
                }
            }
            
            internal DataColumn ServiceIDTsortColumn {
                get {
                    return this.columnServiceIDTsort;
                }
            }
            
            internal DataColumn TsortServiceMnemonicColumn {
                get {
                    return this.columnTsortServiceMnemonic;
                }
            }
            
            internal DataColumn PathIDReturnsColumn {
                get {
                    return this.columnPathIDReturns;
                }
            }
            
            internal DataColumn ReturnPathMnemonicColumn {
                get {
                    return this.columnReturnPathMnemonic;
                }
            }
            
            internal DataColumn ReturnPathLastStopMnemonicColumn {
                get {
                    return this.columnReturnPathLastStopMnemonic;
                }
            }
            
            internal DataColumn ServiceIDReturnsColumn {
                get {
                    return this.columnServiceIDReturns;
                }
            }
            
            internal DataColumn ReturnServiceMnemonicColumn {
                get {
                    return this.columnReturnServiceMnemonic;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            internal DataColumn RowActionColumn {
                get {
                    return this.columnRowAction;
                }
            }
            
            public PostalCodeMappingTableRow this[int index] {
                get {
                    return ((PostalCodeMappingTableRow)(this.Rows[index]));
                }
            }
            
            public event PostalCodeMappingTableRowChangeEventHandler PostalCodeMappingTableRowChanged;
            
            public event PostalCodeMappingTableRowChangeEventHandler PostalCodeMappingTableRowChanging;
            
            public event PostalCodeMappingTableRowChangeEventHandler PostalCodeMappingTableRowDeleted;
            
            public event PostalCodeMappingTableRowChangeEventHandler PostalCodeMappingTableRowDeleting;
            
            public void AddPostalCodeMappingTableRow(PostalCodeMappingTableRow row) {
                this.Rows.Add(row);
            }
            
            public PostalCodeMappingTableRow AddPostalCodeMappingTableRow(
                        string MapID, 
                        int SortCenterID, 
                        string SortCenter, 
                        int ClientID, 
                        string Number, 
                        string ClientName, 
                        string Description, 
                        bool IsActive, 
                        int CountryID, 
                        string Country, 
                        string PostalCode, 
                        string StateOrProvince, 
                        string OldPathIDTsort, 
                        string OldTsortPathMnemonic, 
                        string OldTsortPathLastStopMnemonic, 
                        int OldServiceIDTsort, 
                        string OldTsortServiceMnemonic, 
                        string OldPathIDReturns, 
                        string OldReturnPathMnemonic, 
                        string OldReturnPathLastStopMnemonic, 
                        int OldServiceIDReturns, 
                        string OldReturnServiceMnemonic, 
                        string PathIDTsort, 
                        string TsortPathMnemonic, 
                        string TsortPathLastStopMnemonic, 
                        int ServiceIDTsort, 
                        string TsortServiceMnemonic, 
                        string PathIDReturns, 
                        string ReturnPathMnemonic, 
                        string ReturnPathLastStopMnemonic, 
                        int ServiceIDReturns, 
                        string ReturnServiceMnemonic, 
                        System.DateTime LastUpdated, 
                        string UserID, 
                        string RowVersion, 
                        string Status, 
                        string RowAction) {
                PostalCodeMappingTableRow rowPostalCodeMappingTableRow = ((PostalCodeMappingTableRow)(this.NewRow()));
                rowPostalCodeMappingTableRow.ItemArray = new object[] {
                        MapID,
                        SortCenterID,
                        SortCenter,
                        ClientID,
                        Number,
                        ClientName,
                        Description,
                        IsActive,
                        CountryID,
                        Country,
                        PostalCode,
                        StateOrProvince,
                        OldPathIDTsort,
                        OldTsortPathMnemonic,
                        OldTsortPathLastStopMnemonic,
                        OldServiceIDTsort,
                        OldTsortServiceMnemonic,
                        OldPathIDReturns,
                        OldReturnPathMnemonic,
                        OldReturnPathLastStopMnemonic,
                        OldServiceIDReturns,
                        OldReturnServiceMnemonic,
                        PathIDTsort,
                        TsortPathMnemonic,
                        TsortPathLastStopMnemonic,
                        ServiceIDTsort,
                        TsortServiceMnemonic,
                        PathIDReturns,
                        ReturnPathMnemonic,
                        ReturnPathLastStopMnemonic,
                        ServiceIDReturns,
                        ReturnServiceMnemonic,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        Status,
                        RowAction};
                this.Rows.Add(rowPostalCodeMappingTableRow);
                return rowPostalCodeMappingTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PostalCodeMappingTableDataTable cln = ((PostalCodeMappingTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PostalCodeMappingTableDataTable();
            }
            
            internal void InitVars() {
                this.columnMapID = this.Columns["MapID"];
                this.columnSortCenterID = this.Columns["SortCenterID"];
                this.columnSortCenter = this.Columns["SortCenter"];
                this.columnClientID = this.Columns["ClientID"];
                this.columnNumber = this.Columns["Number"];
                this.columnClientName = this.Columns["ClientName"];
                this.columnDescription = this.Columns["Description"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnCountryID = this.Columns["CountryID"];
                this.columnCountry = this.Columns["Country"];
                this.columnPostalCode = this.Columns["PostalCode"];
                this.columnStateOrProvince = this.Columns["StateOrProvince"];
                this.columnOldPathIDTsort = this.Columns["OldPathIDTsort"];
                this.columnOldTsortPathMnemonic = this.Columns["OldTsortPathMnemonic"];
                this.columnOldTsortPathLastStopMnemonic = this.Columns["OldTsortPathLastStopMnemonic"];
                this.columnOldServiceIDTsort = this.Columns["OldServiceIDTsort"];
                this.columnOldTsortServiceMnemonic = this.Columns["OldTsortServiceMnemonic"];
                this.columnOldPathIDReturns = this.Columns["OldPathIDReturns"];
                this.columnOldReturnPathMnemonic = this.Columns["OldReturnPathMnemonic"];
                this.columnOldReturnPathLastStopMnemonic = this.Columns["OldReturnPathLastStopMnemonic"];
                this.columnOldServiceIDReturns = this.Columns["OldServiceIDReturns"];
                this.columnOldReturnServiceMnemonic = this.Columns["OldReturnServiceMnemonic"];
                this.columnPathIDTsort = this.Columns["PathIDTsort"];
                this.columnTsortPathMnemonic = this.Columns["TsortPathMnemonic"];
                this.columnTsortPathLastStopMnemonic = this.Columns["TsortPathLastStopMnemonic"];
                this.columnServiceIDTsort = this.Columns["ServiceIDTsort"];
                this.columnTsortServiceMnemonic = this.Columns["TsortServiceMnemonic"];
                this.columnPathIDReturns = this.Columns["PathIDReturns"];
                this.columnReturnPathMnemonic = this.Columns["ReturnPathMnemonic"];
                this.columnReturnPathLastStopMnemonic = this.Columns["ReturnPathLastStopMnemonic"];
                this.columnServiceIDReturns = this.Columns["ServiceIDReturns"];
                this.columnReturnServiceMnemonic = this.Columns["ReturnServiceMnemonic"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnStatus = this.Columns["Status"];
                this.columnRowAction = this.Columns["RowAction"];
            }
            
            private void InitClass() {
                this.columnMapID = new DataColumn("MapID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMapID);
                this.columnSortCenterID = new DataColumn("SortCenterID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenterID);
                this.columnSortCenter = new DataColumn("SortCenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenter);
                this.columnClientID = new DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientID);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnClientName = new DataColumn("ClientName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientName);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnCountryID = new DataColumn("CountryID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountryID);
                this.columnCountry = new DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountry);
                this.columnPostalCode = new DataColumn("PostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPostalCode);
                this.columnStateOrProvince = new DataColumn("StateOrProvince", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStateOrProvince);
                this.columnOldPathIDTsort = new DataColumn("OldPathIDTsort", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldPathIDTsort);
                this.columnOldTsortPathMnemonic = new DataColumn("OldTsortPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldTsortPathMnemonic);
                this.columnOldTsortPathLastStopMnemonic = new DataColumn("OldTsortPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldTsortPathLastStopMnemonic);
                this.columnOldServiceIDTsort = new DataColumn("OldServiceIDTsort", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldServiceIDTsort);
                this.columnOldTsortServiceMnemonic = new DataColumn("OldTsortServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldTsortServiceMnemonic);
                this.columnOldPathIDReturns = new DataColumn("OldPathIDReturns", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldPathIDReturns);
                this.columnOldReturnPathMnemonic = new DataColumn("OldReturnPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldReturnPathMnemonic);
                this.columnOldReturnPathLastStopMnemonic = new DataColumn("OldReturnPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldReturnPathLastStopMnemonic);
                this.columnOldServiceIDReturns = new DataColumn("OldServiceIDReturns", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldServiceIDReturns);
                this.columnOldReturnServiceMnemonic = new DataColumn("OldReturnServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldReturnServiceMnemonic);
                this.columnPathIDTsort = new DataColumn("PathIDTsort", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPathIDTsort);
                this.columnTsortPathMnemonic = new DataColumn("TsortPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortPathMnemonic);
                this.columnTsortPathLastStopMnemonic = new DataColumn("TsortPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortPathLastStopMnemonic);
                this.columnServiceIDTsort = new DataColumn("ServiceIDTsort", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceIDTsort);
                this.columnTsortServiceMnemonic = new DataColumn("TsortServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortServiceMnemonic);
                this.columnPathIDReturns = new DataColumn("PathIDReturns", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPathIDReturns);
                this.columnReturnPathMnemonic = new DataColumn("ReturnPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnPathMnemonic);
                this.columnReturnPathLastStopMnemonic = new DataColumn("ReturnPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnPathLastStopMnemonic);
                this.columnServiceIDReturns = new DataColumn("ServiceIDReturns", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceIDReturns);
                this.columnReturnServiceMnemonic = new DataColumn("ReturnServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnServiceMnemonic);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnStatus = new DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnRowAction = new DataColumn("RowAction", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowAction);
                this.columnMapID.AllowDBNull = false;
                this.columnRowAction.AllowDBNull = false;
            }
            
            public PostalCodeMappingTableRow NewPostalCodeMappingTableRow() {
                return ((PostalCodeMappingTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PostalCodeMappingTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PostalCodeMappingTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PostalCodeMappingTableRowChanged != null)) {
                    this.PostalCodeMappingTableRowChanged(this, new PostalCodeMappingTableRowChangeEvent(((PostalCodeMappingTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PostalCodeMappingTableRowChanging != null)) {
                    this.PostalCodeMappingTableRowChanging(this, new PostalCodeMappingTableRowChangeEvent(((PostalCodeMappingTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PostalCodeMappingTableRowDeleted != null)) {
                    this.PostalCodeMappingTableRowDeleted(this, new PostalCodeMappingTableRowChangeEvent(((PostalCodeMappingTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PostalCodeMappingTableRowDeleting != null)) {
                    this.PostalCodeMappingTableRowDeleting(this, new PostalCodeMappingTableRowChangeEvent(((PostalCodeMappingTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePostalCodeMappingTableRow(PostalCodeMappingTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTableRow : DataRow {
            
            private PostalCodeMappingTableDataTable tablePostalCodeMappingTable;
            
            internal PostalCodeMappingTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePostalCodeMappingTable = ((PostalCodeMappingTableDataTable)(this.Table));
            }
            
            public string MapID {
                get {
                    return ((string)(this[this.tablePostalCodeMappingTable.MapIDColumn]));
                }
                set {
                    this[this.tablePostalCodeMappingTable.MapIDColumn] = value;
                }
            }
            
            public int SortCenterID {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.SortCenterIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.SortCenterIDColumn] = value;
                }
            }
            
            public string SortCenter {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.SortCenterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.SortCenterColumn] = value;
                }
            }
            
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.ClientIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ClientIDColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.NumberColumn] = value;
                }
            }
            
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.ClientNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ClientNameColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.DescriptionColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tablePostalCodeMappingTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.IsActiveColumn] = value;
                }
            }
            
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.CountryIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.CountryIDColumn] = value;
                }
            }
            
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.CountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.CountryColumn] = value;
                }
            }
            
            public string PostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.PostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.PostalCodeColumn] = value;
                }
            }
            
            public string StateOrProvince {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.StateOrProvinceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.StateOrProvinceColumn] = value;
                }
            }
            
            public string OldPathIDTsort {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldPathIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldPathIDTsortColumn] = value;
                }
            }
            
            public string OldTsortPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldTsortPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldTsortPathMnemonicColumn] = value;
                }
            }
            
            public string OldTsortPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldTsortPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldTsortPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int OldServiceIDTsort {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.OldServiceIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldServiceIDTsortColumn] = value;
                }
            }
            
            public string OldTsortServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldTsortServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldTsortServiceMnemonicColumn] = value;
                }
            }
            
            public string OldPathIDReturns {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldPathIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldPathIDReturnsColumn] = value;
                }
            }
            
            public string OldReturnPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldReturnPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldReturnPathMnemonicColumn] = value;
                }
            }
            
            public string OldReturnPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldReturnPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldReturnPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int OldServiceIDReturns {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.OldServiceIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldServiceIDReturnsColumn] = value;
                }
            }
            
            public string OldReturnServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.OldReturnServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.OldReturnServiceMnemonicColumn] = value;
                }
            }
            
            public string PathIDTsort {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.PathIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.PathIDTsortColumn] = value;
                }
            }
            
            public string TsortPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.TsortPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.TsortPathMnemonicColumn] = value;
                }
            }
            
            public string TsortPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.TsortPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.TsortPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int ServiceIDTsort {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.ServiceIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ServiceIDTsortColumn] = value;
                }
            }
            
            public string TsortServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.TsortServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.TsortServiceMnemonicColumn] = value;
                }
            }
            
            public string PathIDReturns {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.PathIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.PathIDReturnsColumn] = value;
                }
            }
            
            public string ReturnPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.ReturnPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ReturnPathMnemonicColumn] = value;
                }
            }
            
            public string ReturnPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.ReturnPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ReturnPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int ServiceIDReturns {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable.ServiceIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ServiceIDReturnsColumn] = value;
                }
            }
            
            public string ReturnServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.ReturnServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.ReturnServiceMnemonicColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePostalCodeMappingTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.RowVersionColumn] = value;
                }
            }
            
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable.StatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable.StatusColumn] = value;
                }
            }
            
            public string RowAction {
                get {
                    return ((string)(this[this.tablePostalCodeMappingTable.RowActionColumn]));
                }
                set {
                    this[this.tablePostalCodeMappingTable.RowActionColumn] = value;
                }
            }
            
            public bool IsSortCenterIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.SortCenterIDColumn);
            }
            
            public void SetSortCenterIDNull() {
                this[this.tablePostalCodeMappingTable.SortCenterIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortCenterNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.SortCenterColumn);
            }
            
            public void SetSortCenterNull() {
                this[this.tablePostalCodeMappingTable.SortCenterColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ClientIDColumn);
            }
            
            public void SetClientIDNull() {
                this[this.tablePostalCodeMappingTable.ClientIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tablePostalCodeMappingTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNameNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ClientNameColumn);
            }
            
            public void SetClientNameNull() {
                this[this.tablePostalCodeMappingTable.ClientNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tablePostalCodeMappingTable.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tablePostalCodeMappingTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.CountryIDColumn);
            }
            
            public void SetCountryIDNull() {
                this[this.tablePostalCodeMappingTable.CountryIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.CountryColumn);
            }
            
            public void SetCountryNull() {
                this[this.tablePostalCodeMappingTable.CountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.PostalCodeColumn);
            }
            
            public void SetPostalCodeNull() {
                this[this.tablePostalCodeMappingTable.PostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsStateOrProvinceNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.StateOrProvinceColumn);
            }
            
            public void SetStateOrProvinceNull() {
                this[this.tablePostalCodeMappingTable.StateOrProvinceColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldPathIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldPathIDTsortColumn);
            }
            
            public void SetOldPathIDTsortNull() {
                this[this.tablePostalCodeMappingTable.OldPathIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldTsortPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldTsortPathMnemonicColumn);
            }
            
            public void SetOldTsortPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable.OldTsortPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldTsortPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldTsortPathLastStopMnemonicColumn);
            }
            
            public void SetOldTsortPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable.OldTsortPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldServiceIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldServiceIDTsortColumn);
            }
            
            public void SetOldServiceIDTsortNull() {
                this[this.tablePostalCodeMappingTable.OldServiceIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldTsortServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldTsortServiceMnemonicColumn);
            }
            
            public void SetOldTsortServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable.OldTsortServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldPathIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldPathIDReturnsColumn);
            }
            
            public void SetOldPathIDReturnsNull() {
                this[this.tablePostalCodeMappingTable.OldPathIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldReturnPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldReturnPathMnemonicColumn);
            }
            
            public void SetOldReturnPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable.OldReturnPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldReturnPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldReturnPathLastStopMnemonicColumn);
            }
            
            public void SetOldReturnPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable.OldReturnPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldServiceIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldServiceIDReturnsColumn);
            }
            
            public void SetOldServiceIDReturnsNull() {
                this[this.tablePostalCodeMappingTable.OldServiceIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldReturnServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.OldReturnServiceMnemonicColumn);
            }
            
            public void SetOldReturnServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable.OldReturnServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.PathIDTsortColumn);
            }
            
            public void SetPathIDTsortNull() {
                this[this.tablePostalCodeMappingTable.PathIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.TsortPathMnemonicColumn);
            }
            
            public void SetTsortPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable.TsortPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.TsortPathLastStopMnemonicColumn);
            }
            
            public void SetTsortPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable.TsortPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsServiceIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ServiceIDTsortColumn);
            }
            
            public void SetServiceIDTsortNull() {
                this[this.tablePostalCodeMappingTable.ServiceIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.TsortServiceMnemonicColumn);
            }
            
            public void SetTsortServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable.TsortServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.PathIDReturnsColumn);
            }
            
            public void SetPathIDReturnsNull() {
                this[this.tablePostalCodeMappingTable.PathIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ReturnPathMnemonicColumn);
            }
            
            public void SetReturnPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable.ReturnPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ReturnPathLastStopMnemonicColumn);
            }
            
            public void SetReturnPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable.ReturnPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsServiceIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ServiceIDReturnsColumn);
            }
            
            public void SetServiceIDReturnsNull() {
                this[this.tablePostalCodeMappingTable.ServiceIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.ReturnServiceMnemonicColumn);
            }
            
            public void SetReturnServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable.ReturnServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tablePostalCodeMappingTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tablePostalCodeMappingTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tablePostalCodeMappingTable.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusNull() {
                return this.IsNull(this.tablePostalCodeMappingTable.StatusColumn);
            }
            
            public void SetStatusNull() {
                this[this.tablePostalCodeMappingTable.StatusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTableRowChangeEvent : EventArgs {
            
            private PostalCodeMappingTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public PostalCodeMappingTableRowChangeEvent(PostalCodeMappingTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PostalCodeMappingTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTable3DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMapID;
            
            private DataColumn columnSortCenter;
            
            private DataColumn columnClientName;
            
            private DataColumn columnPostalCode;
            
            private DataColumn columnCountryID;
            
            private DataColumn columnCountry;
            
            private DataColumn columnStateOrProvince;
            
            private DataColumn columnPathIDTsort;
            
            private DataColumn columnTsortPathMnemonic;
            
            private DataColumn columnTsortPathLastStopMnemonic;
            
            private DataColumn columnServiceIDTsort;
            
            private DataColumn columnTsortServiceMnemonic;
            
            private DataColumn columnPathIDReturns;
            
            private DataColumn columnReturnPathMnemonic;
            
            private DataColumn columnReturnPathLastStopMnemonic;
            
            private DataColumn columnServiceIDReturns;
            
            private DataColumn columnReturnServiceMnemonic;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnStatus;
            
            internal PostalCodeMappingTable3DataTable() : 
                    base("PostalCodeMappingTable3") {
                this.InitClass();
            }
            
            internal PostalCodeMappingTable3DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MapIDColumn {
                get {
                    return this.columnMapID;
                }
            }
            
            internal DataColumn SortCenterColumn {
                get {
                    return this.columnSortCenter;
                }
            }
            
            internal DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            internal DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            internal DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            internal DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            internal DataColumn StateOrProvinceColumn {
                get {
                    return this.columnStateOrProvince;
                }
            }
            
            internal DataColumn PathIDTsortColumn {
                get {
                    return this.columnPathIDTsort;
                }
            }
            
            internal DataColumn TsortPathMnemonicColumn {
                get {
                    return this.columnTsortPathMnemonic;
                }
            }
            
            internal DataColumn TsortPathLastStopMnemonicColumn {
                get {
                    return this.columnTsortPathLastStopMnemonic;
                }
            }
            
            internal DataColumn ServiceIDTsortColumn {
                get {
                    return this.columnServiceIDTsort;
                }
            }
            
            internal DataColumn TsortServiceMnemonicColumn {
                get {
                    return this.columnTsortServiceMnemonic;
                }
            }
            
            internal DataColumn PathIDReturnsColumn {
                get {
                    return this.columnPathIDReturns;
                }
            }
            
            internal DataColumn ReturnPathMnemonicColumn {
                get {
                    return this.columnReturnPathMnemonic;
                }
            }
            
            internal DataColumn ReturnPathLastStopMnemonicColumn {
                get {
                    return this.columnReturnPathLastStopMnemonic;
                }
            }
            
            internal DataColumn ServiceIDReturnsColumn {
                get {
                    return this.columnServiceIDReturns;
                }
            }
            
            internal DataColumn ReturnServiceMnemonicColumn {
                get {
                    return this.columnReturnServiceMnemonic;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            public PostalCodeMappingTable3Row this[int index] {
                get {
                    return ((PostalCodeMappingTable3Row)(this.Rows[index]));
                }
            }
            
            public event PostalCodeMappingTable3RowChangeEventHandler PostalCodeMappingTable3RowChanged;
            
            public event PostalCodeMappingTable3RowChangeEventHandler PostalCodeMappingTable3RowChanging;
            
            public event PostalCodeMappingTable3RowChangeEventHandler PostalCodeMappingTable3RowDeleted;
            
            public event PostalCodeMappingTable3RowChangeEventHandler PostalCodeMappingTable3RowDeleting;
            
            public void AddPostalCodeMappingTable3Row(PostalCodeMappingTable3Row row) {
                this.Rows.Add(row);
            }
            
            public PostalCodeMappingTable3Row AddPostalCodeMappingTable3Row(
                        string MapID, 
                        string SortCenter, 
                        string ClientName, 
                        string PostalCode, 
                        int CountryID, 
                        string Country, 
                        string StateOrProvince, 
                        string PathIDTsort, 
                        string TsortPathMnemonic, 
                        string TsortPathLastStopMnemonic, 
                        int ServiceIDTsort, 
                        string TsortServiceMnemonic, 
                        string PathIDReturns, 
                        string ReturnPathMnemonic, 
                        string ReturnPathLastStopMnemonic, 
                        int ServiceIDReturns, 
                        string ReturnServiceMnemonic, 
                        System.DateTime LastUpdated, 
                        string UserID, 
                        string RowVersion, 
                        string Status) {
                PostalCodeMappingTable3Row rowPostalCodeMappingTable3Row = ((PostalCodeMappingTable3Row)(this.NewRow()));
                rowPostalCodeMappingTable3Row.ItemArray = new object[] {
                        MapID,
                        SortCenter,
                        ClientName,
                        PostalCode,
                        CountryID,
                        Country,
                        StateOrProvince,
                        PathIDTsort,
                        TsortPathMnemonic,
                        TsortPathLastStopMnemonic,
                        ServiceIDTsort,
                        TsortServiceMnemonic,
                        PathIDReturns,
                        ReturnPathMnemonic,
                        ReturnPathLastStopMnemonic,
                        ServiceIDReturns,
                        ReturnServiceMnemonic,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        Status};
                this.Rows.Add(rowPostalCodeMappingTable3Row);
                return rowPostalCodeMappingTable3Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PostalCodeMappingTable3DataTable cln = ((PostalCodeMappingTable3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PostalCodeMappingTable3DataTable();
            }
            
            internal void InitVars() {
                this.columnMapID = this.Columns["MapID"];
                this.columnSortCenter = this.Columns["SortCenter"];
                this.columnClientName = this.Columns["ClientName"];
                this.columnPostalCode = this.Columns["PostalCode"];
                this.columnCountryID = this.Columns["CountryID"];
                this.columnCountry = this.Columns["Country"];
                this.columnStateOrProvince = this.Columns["StateOrProvince"];
                this.columnPathIDTsort = this.Columns["PathIDTsort"];
                this.columnTsortPathMnemonic = this.Columns["TsortPathMnemonic"];
                this.columnTsortPathLastStopMnemonic = this.Columns["TsortPathLastStopMnemonic"];
                this.columnServiceIDTsort = this.Columns["ServiceIDTsort"];
                this.columnTsortServiceMnemonic = this.Columns["TsortServiceMnemonic"];
                this.columnPathIDReturns = this.Columns["PathIDReturns"];
                this.columnReturnPathMnemonic = this.Columns["ReturnPathMnemonic"];
                this.columnReturnPathLastStopMnemonic = this.Columns["ReturnPathLastStopMnemonic"];
                this.columnServiceIDReturns = this.Columns["ServiceIDReturns"];
                this.columnReturnServiceMnemonic = this.Columns["ReturnServiceMnemonic"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnStatus = this.Columns["Status"];
            }
            
            private void InitClass() {
                this.columnMapID = new DataColumn("MapID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMapID);
                this.columnSortCenter = new DataColumn("SortCenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenter);
                this.columnClientName = new DataColumn("ClientName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientName);
                this.columnPostalCode = new DataColumn("PostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPostalCode);
                this.columnCountryID = new DataColumn("CountryID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountryID);
                this.columnCountry = new DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountry);
                this.columnStateOrProvince = new DataColumn("StateOrProvince", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStateOrProvince);
                this.columnPathIDTsort = new DataColumn("PathIDTsort", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPathIDTsort);
                this.columnTsortPathMnemonic = new DataColumn("TsortPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortPathMnemonic);
                this.columnTsortPathLastStopMnemonic = new DataColumn("TsortPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortPathLastStopMnemonic);
                this.columnServiceIDTsort = new DataColumn("ServiceIDTsort", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceIDTsort);
                this.columnTsortServiceMnemonic = new DataColumn("TsortServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortServiceMnemonic);
                this.columnPathIDReturns = new DataColumn("PathIDReturns", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPathIDReturns);
                this.columnReturnPathMnemonic = new DataColumn("ReturnPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnPathMnemonic);
                this.columnReturnPathLastStopMnemonic = new DataColumn("ReturnPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnPathLastStopMnemonic);
                this.columnServiceIDReturns = new DataColumn("ServiceIDReturns", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceIDReturns);
                this.columnReturnServiceMnemonic = new DataColumn("ReturnServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnServiceMnemonic);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnStatus = new DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnMapID.AllowDBNull = false;
            }
            
            public PostalCodeMappingTable3Row NewPostalCodeMappingTable3Row() {
                return ((PostalCodeMappingTable3Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PostalCodeMappingTable3Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PostalCodeMappingTable3Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PostalCodeMappingTable3RowChanged != null)) {
                    this.PostalCodeMappingTable3RowChanged(this, new PostalCodeMappingTable3RowChangeEvent(((PostalCodeMappingTable3Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PostalCodeMappingTable3RowChanging != null)) {
                    this.PostalCodeMappingTable3RowChanging(this, new PostalCodeMappingTable3RowChangeEvent(((PostalCodeMappingTable3Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PostalCodeMappingTable3RowDeleted != null)) {
                    this.PostalCodeMappingTable3RowDeleted(this, new PostalCodeMappingTable3RowChangeEvent(((PostalCodeMappingTable3Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PostalCodeMappingTable3RowDeleting != null)) {
                    this.PostalCodeMappingTable3RowDeleting(this, new PostalCodeMappingTable3RowChangeEvent(((PostalCodeMappingTable3Row)(e.Row)), e.Action));
                }
            }
            
            public void RemovePostalCodeMappingTable3Row(PostalCodeMappingTable3Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTable3Row : DataRow {
            
            private PostalCodeMappingTable3DataTable tablePostalCodeMappingTable3;
            
            internal PostalCodeMappingTable3Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePostalCodeMappingTable3 = ((PostalCodeMappingTable3DataTable)(this.Table));
            }
            
            public string MapID {
                get {
                    return ((string)(this[this.tablePostalCodeMappingTable3.MapIDColumn]));
                }
                set {
                    this[this.tablePostalCodeMappingTable3.MapIDColumn] = value;
                }
            }
            
            public string SortCenter {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.SortCenterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.SortCenterColumn] = value;
                }
            }
            
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.ClientNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.ClientNameColumn] = value;
                }
            }
            
            public string PostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.PostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.PostalCodeColumn] = value;
                }
            }
            
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable3.CountryIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.CountryIDColumn] = value;
                }
            }
            
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.CountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.CountryColumn] = value;
                }
            }
            
            public string StateOrProvince {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.StateOrProvinceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.StateOrProvinceColumn] = value;
                }
            }
            
            public string PathIDTsort {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.PathIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.PathIDTsortColumn] = value;
                }
            }
            
            public string TsortPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.TsortPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.TsortPathMnemonicColumn] = value;
                }
            }
            
            public string TsortPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.TsortPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.TsortPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int ServiceIDTsort {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable3.ServiceIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.ServiceIDTsortColumn] = value;
                }
            }
            
            public string TsortServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.TsortServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.TsortServiceMnemonicColumn] = value;
                }
            }
            
            public string PathIDReturns {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.PathIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.PathIDReturnsColumn] = value;
                }
            }
            
            public string ReturnPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.ReturnPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.ReturnPathMnemonicColumn] = value;
                }
            }
            
            public string ReturnPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.ReturnPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.ReturnPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int ServiceIDReturns {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable3.ServiceIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.ServiceIDReturnsColumn] = value;
                }
            }
            
            public string ReturnServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.ReturnServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.ReturnServiceMnemonicColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePostalCodeMappingTable3.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.RowVersionColumn] = value;
                }
            }
            
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable3.StatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable3.StatusColumn] = value;
                }
            }
            
            public bool IsSortCenterNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.SortCenterColumn);
            }
            
            public void SetSortCenterNull() {
                this[this.tablePostalCodeMappingTable3.SortCenterColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNameNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.ClientNameColumn);
            }
            
            public void SetClientNameNull() {
                this[this.tablePostalCodeMappingTable3.ClientNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.PostalCodeColumn);
            }
            
            public void SetPostalCodeNull() {
                this[this.tablePostalCodeMappingTable3.PostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.CountryIDColumn);
            }
            
            public void SetCountryIDNull() {
                this[this.tablePostalCodeMappingTable3.CountryIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.CountryColumn);
            }
            
            public void SetCountryNull() {
                this[this.tablePostalCodeMappingTable3.CountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsStateOrProvinceNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.StateOrProvinceColumn);
            }
            
            public void SetStateOrProvinceNull() {
                this[this.tablePostalCodeMappingTable3.StateOrProvinceColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.PathIDTsortColumn);
            }
            
            public void SetPathIDTsortNull() {
                this[this.tablePostalCodeMappingTable3.PathIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.TsortPathMnemonicColumn);
            }
            
            public void SetTsortPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable3.TsortPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.TsortPathLastStopMnemonicColumn);
            }
            
            public void SetTsortPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable3.TsortPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsServiceIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.ServiceIDTsortColumn);
            }
            
            public void SetServiceIDTsortNull() {
                this[this.tablePostalCodeMappingTable3.ServiceIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.TsortServiceMnemonicColumn);
            }
            
            public void SetTsortServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable3.TsortServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.PathIDReturnsColumn);
            }
            
            public void SetPathIDReturnsNull() {
                this[this.tablePostalCodeMappingTable3.PathIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.ReturnPathMnemonicColumn);
            }
            
            public void SetReturnPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable3.ReturnPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.ReturnPathLastStopMnemonicColumn);
            }
            
            public void SetReturnPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable3.ReturnPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsServiceIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.ServiceIDReturnsColumn);
            }
            
            public void SetServiceIDReturnsNull() {
                this[this.tablePostalCodeMappingTable3.ServiceIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.ReturnServiceMnemonicColumn);
            }
            
            public void SetReturnServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable3.ReturnServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tablePostalCodeMappingTable3.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tablePostalCodeMappingTable3.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tablePostalCodeMappingTable3.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusNull() {
                return this.IsNull(this.tablePostalCodeMappingTable3.StatusColumn);
            }
            
            public void SetStatusNull() {
                this[this.tablePostalCodeMappingTable3.StatusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTable3RowChangeEvent : EventArgs {
            
            private PostalCodeMappingTable3Row eventRow;
            
            private DataRowAction eventAction;
            
            public PostalCodeMappingTable3RowChangeEvent(PostalCodeMappingTable3Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PostalCodeMappingTable3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTable5DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMapID;
            
            private DataColumn columnSortCenter;
            
            private DataColumn columnClientName;
            
            private DataColumn columnPostalCode;
            
            private DataColumn columnCountryID;
            
            private DataColumn columnCountry;
            
            private DataColumn columnStateOrProvince;
            
            private DataColumn columnPathIDTsort;
            
            private DataColumn columnTsortPathMnemonic;
            
            private DataColumn columnTsortPathLastStopMnemonic;
            
            private DataColumn columnServiceIDTsort;
            
            private DataColumn columnTsortServiceMnemonic;
            
            private DataColumn columnPathIDReturns;
            
            private DataColumn columnReturnPathMnemonic;
            
            private DataColumn columnReturnPathLastStopMnemonic;
            
            private DataColumn columnServiceIDReturns;
            
            private DataColumn columnReturnServiceMnemonic;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnStatus;
            
            private DataColumn columnPostalCodeID;
            
            internal PostalCodeMappingTable5DataTable() : 
                    base("PostalCodeMappingTable5") {
                this.InitClass();
            }
            
            internal PostalCodeMappingTable5DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MapIDColumn {
                get {
                    return this.columnMapID;
                }
            }
            
            internal DataColumn SortCenterColumn {
                get {
                    return this.columnSortCenter;
                }
            }
            
            internal DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            internal DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            internal DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            internal DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            internal DataColumn StateOrProvinceColumn {
                get {
                    return this.columnStateOrProvince;
                }
            }
            
            internal DataColumn PathIDTsortColumn {
                get {
                    return this.columnPathIDTsort;
                }
            }
            
            internal DataColumn TsortPathMnemonicColumn {
                get {
                    return this.columnTsortPathMnemonic;
                }
            }
            
            internal DataColumn TsortPathLastStopMnemonicColumn {
                get {
                    return this.columnTsortPathLastStopMnemonic;
                }
            }
            
            internal DataColumn ServiceIDTsortColumn {
                get {
                    return this.columnServiceIDTsort;
                }
            }
            
            internal DataColumn TsortServiceMnemonicColumn {
                get {
                    return this.columnTsortServiceMnemonic;
                }
            }
            
            internal DataColumn PathIDReturnsColumn {
                get {
                    return this.columnPathIDReturns;
                }
            }
            
            internal DataColumn ReturnPathMnemonicColumn {
                get {
                    return this.columnReturnPathMnemonic;
                }
            }
            
            internal DataColumn ReturnPathLastStopMnemonicColumn {
                get {
                    return this.columnReturnPathLastStopMnemonic;
                }
            }
            
            internal DataColumn ServiceIDReturnsColumn {
                get {
                    return this.columnServiceIDReturns;
                }
            }
            
            internal DataColumn ReturnServiceMnemonicColumn {
                get {
                    return this.columnReturnServiceMnemonic;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            internal DataColumn PostalCodeIDColumn {
                get {
                    return this.columnPostalCodeID;
                }
            }
            
            public PostalCodeMappingTable5Row this[int index] {
                get {
                    return ((PostalCodeMappingTable5Row)(this.Rows[index]));
                }
            }
            
            public event PostalCodeMappingTable5RowChangeEventHandler PostalCodeMappingTable5RowChanged;
            
            public event PostalCodeMappingTable5RowChangeEventHandler PostalCodeMappingTable5RowChanging;
            
            public event PostalCodeMappingTable5RowChangeEventHandler PostalCodeMappingTable5RowDeleted;
            
            public event PostalCodeMappingTable5RowChangeEventHandler PostalCodeMappingTable5RowDeleting;
            
            public void AddPostalCodeMappingTable5Row(PostalCodeMappingTable5Row row) {
                this.Rows.Add(row);
            }
            
            public PostalCodeMappingTable5Row AddPostalCodeMappingTable5Row(
                        string MapID, 
                        string SortCenter, 
                        string ClientName, 
                        string PostalCode, 
                        int CountryID, 
                        string Country, 
                        string StateOrProvince, 
                        string PathIDTsort, 
                        string TsortPathMnemonic, 
                        string TsortPathLastStopMnemonic, 
                        int ServiceIDTsort, 
                        string TsortServiceMnemonic, 
                        string PathIDReturns, 
                        string ReturnPathMnemonic, 
                        string ReturnPathLastStopMnemonic, 
                        int ServiceIDReturns, 
                        string ReturnServiceMnemonic, 
                        System.DateTime LastUpdated, 
                        string UserID, 
                        string RowVersion, 
                        string Status, 
                        string PostalCodeID) {
                PostalCodeMappingTable5Row rowPostalCodeMappingTable5Row = ((PostalCodeMappingTable5Row)(this.NewRow()));
                rowPostalCodeMappingTable5Row.ItemArray = new object[] {
                        MapID,
                        SortCenter,
                        ClientName,
                        PostalCode,
                        CountryID,
                        Country,
                        StateOrProvince,
                        PathIDTsort,
                        TsortPathMnemonic,
                        TsortPathLastStopMnemonic,
                        ServiceIDTsort,
                        TsortServiceMnemonic,
                        PathIDReturns,
                        ReturnPathMnemonic,
                        ReturnPathLastStopMnemonic,
                        ServiceIDReturns,
                        ReturnServiceMnemonic,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        Status,
                        PostalCodeID};
                this.Rows.Add(rowPostalCodeMappingTable5Row);
                return rowPostalCodeMappingTable5Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PostalCodeMappingTable5DataTable cln = ((PostalCodeMappingTable5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PostalCodeMappingTable5DataTable();
            }
            
            internal void InitVars() {
                this.columnMapID = this.Columns["MapID"];
                this.columnSortCenter = this.Columns["SortCenter"];
                this.columnClientName = this.Columns["ClientName"];
                this.columnPostalCode = this.Columns["PostalCode"];
                this.columnCountryID = this.Columns["CountryID"];
                this.columnCountry = this.Columns["Country"];
                this.columnStateOrProvince = this.Columns["StateOrProvince"];
                this.columnPathIDTsort = this.Columns["PathIDTsort"];
                this.columnTsortPathMnemonic = this.Columns["TsortPathMnemonic"];
                this.columnTsortPathLastStopMnemonic = this.Columns["TsortPathLastStopMnemonic"];
                this.columnServiceIDTsort = this.Columns["ServiceIDTsort"];
                this.columnTsortServiceMnemonic = this.Columns["TsortServiceMnemonic"];
                this.columnPathIDReturns = this.Columns["PathIDReturns"];
                this.columnReturnPathMnemonic = this.Columns["ReturnPathMnemonic"];
                this.columnReturnPathLastStopMnemonic = this.Columns["ReturnPathLastStopMnemonic"];
                this.columnServiceIDReturns = this.Columns["ServiceIDReturns"];
                this.columnReturnServiceMnemonic = this.Columns["ReturnServiceMnemonic"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnStatus = this.Columns["Status"];
                this.columnPostalCodeID = this.Columns["PostalCodeID"];
            }
            
            private void InitClass() {
                this.columnMapID = new DataColumn("MapID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMapID);
                this.columnSortCenter = new DataColumn("SortCenter", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortCenter);
                this.columnClientName = new DataColumn("ClientName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientName);
                this.columnPostalCode = new DataColumn("PostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPostalCode);
                this.columnCountryID = new DataColumn("CountryID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountryID);
                this.columnCountry = new DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCountry);
                this.columnStateOrProvince = new DataColumn("StateOrProvince", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStateOrProvince);
                this.columnPathIDTsort = new DataColumn("PathIDTsort", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPathIDTsort);
                this.columnTsortPathMnemonic = new DataColumn("TsortPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortPathMnemonic);
                this.columnTsortPathLastStopMnemonic = new DataColumn("TsortPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortPathLastStopMnemonic);
                this.columnServiceIDTsort = new DataColumn("ServiceIDTsort", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceIDTsort);
                this.columnTsortServiceMnemonic = new DataColumn("TsortServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTsortServiceMnemonic);
                this.columnPathIDReturns = new DataColumn("PathIDReturns", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPathIDReturns);
                this.columnReturnPathMnemonic = new DataColumn("ReturnPathMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnPathMnemonic);
                this.columnReturnPathLastStopMnemonic = new DataColumn("ReturnPathLastStopMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnPathLastStopMnemonic);
                this.columnServiceIDReturns = new DataColumn("ServiceIDReturns", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceIDReturns);
                this.columnReturnServiceMnemonic = new DataColumn("ReturnServiceMnemonic", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReturnServiceMnemonic);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnStatus = new DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnPostalCodeID = new DataColumn("PostalCodeID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPostalCodeID);
                this.columnMapID.AllowDBNull = false;
            }
            
            public PostalCodeMappingTable5Row NewPostalCodeMappingTable5Row() {
                return ((PostalCodeMappingTable5Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PostalCodeMappingTable5Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PostalCodeMappingTable5Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PostalCodeMappingTable5RowChanged != null)) {
                    this.PostalCodeMappingTable5RowChanged(this, new PostalCodeMappingTable5RowChangeEvent(((PostalCodeMappingTable5Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PostalCodeMappingTable5RowChanging != null)) {
                    this.PostalCodeMappingTable5RowChanging(this, new PostalCodeMappingTable5RowChangeEvent(((PostalCodeMappingTable5Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PostalCodeMappingTable5RowDeleted != null)) {
                    this.PostalCodeMappingTable5RowDeleted(this, new PostalCodeMappingTable5RowChangeEvent(((PostalCodeMappingTable5Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PostalCodeMappingTable5RowDeleting != null)) {
                    this.PostalCodeMappingTable5RowDeleting(this, new PostalCodeMappingTable5RowChangeEvent(((PostalCodeMappingTable5Row)(e.Row)), e.Action));
                }
            }
            
            public void RemovePostalCodeMappingTable5Row(PostalCodeMappingTable5Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTable5Row : DataRow {
            
            private PostalCodeMappingTable5DataTable tablePostalCodeMappingTable5;
            
            internal PostalCodeMappingTable5Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePostalCodeMappingTable5 = ((PostalCodeMappingTable5DataTable)(this.Table));
            }
            
            public string MapID {
                get {
                    return ((string)(this[this.tablePostalCodeMappingTable5.MapIDColumn]));
                }
                set {
                    this[this.tablePostalCodeMappingTable5.MapIDColumn] = value;
                }
            }
            
            public string SortCenter {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.SortCenterColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.SortCenterColumn] = value;
                }
            }
            
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.ClientNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.ClientNameColumn] = value;
                }
            }
            
            public string PostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.PostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.PostalCodeColumn] = value;
                }
            }
            
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable5.CountryIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.CountryIDColumn] = value;
                }
            }
            
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.CountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.CountryColumn] = value;
                }
            }
            
            public string StateOrProvince {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.StateOrProvinceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.StateOrProvinceColumn] = value;
                }
            }
            
            public string PathIDTsort {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.PathIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.PathIDTsortColumn] = value;
                }
            }
            
            public string TsortPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.TsortPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.TsortPathMnemonicColumn] = value;
                }
            }
            
            public string TsortPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.TsortPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.TsortPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int ServiceIDTsort {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable5.ServiceIDTsortColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.ServiceIDTsortColumn] = value;
                }
            }
            
            public string TsortServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.TsortServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.TsortServiceMnemonicColumn] = value;
                }
            }
            
            public string PathIDReturns {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.PathIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.PathIDReturnsColumn] = value;
                }
            }
            
            public string ReturnPathMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.ReturnPathMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.ReturnPathMnemonicColumn] = value;
                }
            }
            
            public string ReturnPathLastStopMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.ReturnPathLastStopMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.ReturnPathLastStopMnemonicColumn] = value;
                }
            }
            
            public int ServiceIDReturns {
                get {
                    try {
                        return ((int)(this[this.tablePostalCodeMappingTable5.ServiceIDReturnsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.ServiceIDReturnsColumn] = value;
                }
            }
            
            public string ReturnServiceMnemonic {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.ReturnServiceMnemonicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.ReturnServiceMnemonicColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePostalCodeMappingTable5.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.RowVersionColumn] = value;
                }
            }
            
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.StatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.StatusColumn] = value;
                }
            }
            
            public string PostalCodeID {
                get {
                    try {
                        return ((string)(this[this.tablePostalCodeMappingTable5.PostalCodeIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostalCodeMappingTable5.PostalCodeIDColumn] = value;
                }
            }
            
            public bool IsSortCenterNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.SortCenterColumn);
            }
            
            public void SetSortCenterNull() {
                this[this.tablePostalCodeMappingTable5.SortCenterColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientNameNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.ClientNameColumn);
            }
            
            public void SetClientNameNull() {
                this[this.tablePostalCodeMappingTable5.ClientNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.PostalCodeColumn);
            }
            
            public void SetPostalCodeNull() {
                this[this.tablePostalCodeMappingTable5.PostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.CountryIDColumn);
            }
            
            public void SetCountryIDNull() {
                this[this.tablePostalCodeMappingTable5.CountryIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.CountryColumn);
            }
            
            public void SetCountryNull() {
                this[this.tablePostalCodeMappingTable5.CountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsStateOrProvinceNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.StateOrProvinceColumn);
            }
            
            public void SetStateOrProvinceNull() {
                this[this.tablePostalCodeMappingTable5.StateOrProvinceColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.PathIDTsortColumn);
            }
            
            public void SetPathIDTsortNull() {
                this[this.tablePostalCodeMappingTable5.PathIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.TsortPathMnemonicColumn);
            }
            
            public void SetTsortPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable5.TsortPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.TsortPathLastStopMnemonicColumn);
            }
            
            public void SetTsortPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable5.TsortPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsServiceIDTsortNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.ServiceIDTsortColumn);
            }
            
            public void SetServiceIDTsortNull() {
                this[this.tablePostalCodeMappingTable5.ServiceIDTsortColumn] = System.Convert.DBNull;
            }
            
            public bool IsTsortServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.TsortServiceMnemonicColumn);
            }
            
            public void SetTsortServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable5.TsortServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsPathIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.PathIDReturnsColumn);
            }
            
            public void SetPathIDReturnsNull() {
                this[this.tablePostalCodeMappingTable5.PathIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnPathMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.ReturnPathMnemonicColumn);
            }
            
            public void SetReturnPathMnemonicNull() {
                this[this.tablePostalCodeMappingTable5.ReturnPathMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnPathLastStopMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.ReturnPathLastStopMnemonicColumn);
            }
            
            public void SetReturnPathLastStopMnemonicNull() {
                this[this.tablePostalCodeMappingTable5.ReturnPathLastStopMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsServiceIDReturnsNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.ServiceIDReturnsColumn);
            }
            
            public void SetServiceIDReturnsNull() {
                this[this.tablePostalCodeMappingTable5.ServiceIDReturnsColumn] = System.Convert.DBNull;
            }
            
            public bool IsReturnServiceMnemonicNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.ReturnServiceMnemonicColumn);
            }
            
            public void SetReturnServiceMnemonicNull() {
                this[this.tablePostalCodeMappingTable5.ReturnServiceMnemonicColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tablePostalCodeMappingTable5.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tablePostalCodeMappingTable5.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tablePostalCodeMappingTable5.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.StatusColumn);
            }
            
            public void SetStatusNull() {
                this[this.tablePostalCodeMappingTable5.StatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostalCodeIDNull() {
                return this.IsNull(this.tablePostalCodeMappingTable5.PostalCodeIDColumn);
            }
            
            public void SetPostalCodeIDNull() {
                this[this.tablePostalCodeMappingTable5.PostalCodeIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PostalCodeMappingTable5RowChangeEvent : EventArgs {
            
            private PostalCodeMappingTable5Row eventRow;
            
            private DataRowAction eventAction;
            
            public PostalCodeMappingTable5RowChangeEvent(PostalCodeMappingTable5Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PostalCodeMappingTable5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
