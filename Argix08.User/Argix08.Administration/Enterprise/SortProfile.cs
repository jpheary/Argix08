//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Enterprise {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class SortProfileDS : DataSet {
        
        private SortProfileTableDataTable tableSortProfileTable;
        
        private SortProfileTerminalTableDataTable tableSortProfileTerminalTable;
        
        private DataRelation relationSortProfileTable_SortProfileTerminalTable;
        
        public SortProfileDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected SortProfileDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["SortProfileTable"] != null)) {
                    this.Tables.Add(new SortProfileTableDataTable(ds.Tables["SortProfileTable"]));
                }
                if ((ds.Tables["SortProfileTerminalTable"] != null)) {
                    this.Tables.Add(new SortProfileTerminalTableDataTable(ds.Tables["SortProfileTerminalTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SortProfileTableDataTable SortProfileTable {
            get {
                return this.tableSortProfileTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SortProfileTerminalTableDataTable SortProfileTerminalTable {
            get {
                return this.tableSortProfileTerminalTable;
            }
        }
        
        public override DataSet Clone() {
            SortProfileDS cln = ((SortProfileDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["SortProfileTable"] != null)) {
                this.Tables.Add(new SortProfileTableDataTable(ds.Tables["SortProfileTable"]));
            }
            if ((ds.Tables["SortProfileTerminalTable"] != null)) {
                this.Tables.Add(new SortProfileTerminalTableDataTable(ds.Tables["SortProfileTerminalTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableSortProfileTable = ((SortProfileTableDataTable)(this.Tables["SortProfileTable"]));
            if ((this.tableSortProfileTable != null)) {
                this.tableSortProfileTable.InitVars();
            }
            this.tableSortProfileTerminalTable = ((SortProfileTerminalTableDataTable)(this.Tables["SortProfileTerminalTable"]));
            if ((this.tableSortProfileTerminalTable != null)) {
                this.tableSortProfileTerminalTable.InitVars();
            }
            this.relationSortProfileTable_SortProfileTerminalTable = this.Relations["SortProfileTable_SortProfileTerminalTable"];
        }
        
        private void InitClass() {
            this.DataSetName = "SortProfileDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/SortProfileDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableSortProfileTable = new SortProfileTableDataTable();
            this.Tables.Add(this.tableSortProfileTable);
            this.tableSortProfileTerminalTable = new SortProfileTerminalTableDataTable();
            this.Tables.Add(this.tableSortProfileTerminalTable);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("SortProfileTable_SortProfileTerminalTable", new DataColumn[] {
                        this.tableSortProfileTable.SortProfileTable_IdColumn}, new DataColumn[] {
                        this.tableSortProfileTerminalTable.SortProfileTable_IdColumn});
            this.tableSortProfileTerminalTable.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationSortProfileTable_SortProfileTerminalTable = new DataRelation("SortProfileTable_SortProfileTerminalTable", new DataColumn[] {
                        this.tableSortProfileTable.SortProfileTable_IdColumn}, new DataColumn[] {
                        this.tableSortProfileTerminalTable.SortProfileTable_IdColumn}, false);
            this.relationSortProfileTable_SortProfileTerminalTable.Nested = true;
            this.Relations.Add(this.relationSortProfileTable_SortProfileTerminalTable);
        }
        
        private bool ShouldSerializeSortProfileTable() {
            return false;
        }
        
        private bool ShouldSerializeSortProfileTerminalTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void SortProfileTableRowChangeEventHandler(object sender, SortProfileTableRowChangeEvent e);
        
        public delegate void SortProfileTerminalTableRowChangeEventHandler(object sender, SortProfileTerminalTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SortProfileTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSelected;
            
            private DataColumn columnProfileID;
            
            private DataColumn columnLinkID;
            
            private DataColumn columnLabelID;
            
            private DataColumn columnSortTypeID;
            
            private DataColumn columnSortType;
            
            private DataColumn columnIsElectronic;
            
            private DataColumn columnManifestPerTrailer;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnSortProfileTable_Id;
            
            internal SortProfileTableDataTable() : 
                    base("SortProfileTable") {
                this.InitClass();
            }
            
            internal SortProfileTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            internal DataColumn ProfileIDColumn {
                get {
                    return this.columnProfileID;
                }
            }
            
            internal DataColumn LinkIDColumn {
                get {
                    return this.columnLinkID;
                }
            }
            
            internal DataColumn LabelIDColumn {
                get {
                    return this.columnLabelID;
                }
            }
            
            internal DataColumn SortTypeIDColumn {
                get {
                    return this.columnSortTypeID;
                }
            }
            
            internal DataColumn SortTypeColumn {
                get {
                    return this.columnSortType;
                }
            }
            
            internal DataColumn IsElectronicColumn {
                get {
                    return this.columnIsElectronic;
                }
            }
            
            internal DataColumn ManifestPerTrailerColumn {
                get {
                    return this.columnManifestPerTrailer;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn SortProfileTable_IdColumn {
                get {
                    return this.columnSortProfileTable_Id;
                }
            }
            
            public SortProfileTableRow this[int index] {
                get {
                    return ((SortProfileTableRow)(this.Rows[index]));
                }
            }
            
            public event SortProfileTableRowChangeEventHandler SortProfileTableRowChanged;
            
            public event SortProfileTableRowChangeEventHandler SortProfileTableRowChanging;
            
            public event SortProfileTableRowChangeEventHandler SortProfileTableRowDeleted;
            
            public event SortProfileTableRowChangeEventHandler SortProfileTableRowDeleting;
            
            public void AddSortProfileTableRow(SortProfileTableRow row) {
                this.Rows.Add(row);
            }
            
            public SortProfileTableRow AddSortProfileTableRow(bool Selected, long ProfileID, int LinkID, int LabelID, int SortTypeID, string SortType, bool IsElectronic, string ManifestPerTrailer, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                SortProfileTableRow rowSortProfileTableRow = ((SortProfileTableRow)(this.NewRow()));
                rowSortProfileTableRow.ItemArray = new object[] {
                        Selected,
                        ProfileID,
                        LinkID,
                        LabelID,
                        SortTypeID,
                        SortType,
                        IsElectronic,
                        ManifestPerTrailer,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        null};
                this.Rows.Add(rowSortProfileTableRow);
                return rowSortProfileTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                SortProfileTableDataTable cln = ((SortProfileTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new SortProfileTableDataTable();
            }
            
            internal void InitVars() {
                this.columnSelected = this.Columns["Selected"];
                this.columnProfileID = this.Columns["ProfileID"];
                this.columnLinkID = this.Columns["LinkID"];
                this.columnLabelID = this.Columns["LabelID"];
                this.columnSortTypeID = this.Columns["SortTypeID"];
                this.columnSortType = this.Columns["SortType"];
                this.columnIsElectronic = this.Columns["IsElectronic"];
                this.columnManifestPerTrailer = this.Columns["ManifestPerTrailer"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnSortProfileTable_Id = this.Columns["SortProfileTable_Id"];
            }
            
            private void InitClass() {
                this.columnSelected = new DataColumn("Selected", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSelected);
                this.columnProfileID = new DataColumn("ProfileID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProfileID);
                this.columnLinkID = new DataColumn("LinkID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLinkID);
                this.columnLabelID = new DataColumn("LabelID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLabelID);
                this.columnSortTypeID = new DataColumn("SortTypeID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortTypeID);
                this.columnSortType = new DataColumn("SortType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortType);
                this.columnIsElectronic = new DataColumn("IsElectronic", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsElectronic);
                this.columnManifestPerTrailer = new DataColumn("ManifestPerTrailer", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManifestPerTrailer);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnSortProfileTable_Id = new DataColumn("SortProfileTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnSortProfileTable_Id);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnSortProfileTable_Id}, true));
                this.columnSortProfileTable_Id.AutoIncrement = true;
                this.columnSortProfileTable_Id.AllowDBNull = false;
                this.columnSortProfileTable_Id.Unique = true;
            }
            
            public SortProfileTableRow NewSortProfileTableRow() {
                return ((SortProfileTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new SortProfileTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(SortProfileTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SortProfileTableRowChanged != null)) {
                    this.SortProfileTableRowChanged(this, new SortProfileTableRowChangeEvent(((SortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SortProfileTableRowChanging != null)) {
                    this.SortProfileTableRowChanging(this, new SortProfileTableRowChangeEvent(((SortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SortProfileTableRowDeleted != null)) {
                    this.SortProfileTableRowDeleted(this, new SortProfileTableRowChangeEvent(((SortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SortProfileTableRowDeleting != null)) {
                    this.SortProfileTableRowDeleting(this, new SortProfileTableRowChangeEvent(((SortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveSortProfileTableRow(SortProfileTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SortProfileTableRow : DataRow {
            
            private SortProfileTableDataTable tableSortProfileTable;
            
            internal SortProfileTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableSortProfileTable = ((SortProfileTableDataTable)(this.Table));
            }
            
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableSortProfileTable.SelectedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.SelectedColumn] = value;
                }
            }
            
            public long ProfileID {
                get {
                    try {
                        return ((long)(this[this.tableSortProfileTable.ProfileIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.ProfileIDColumn] = value;
                }
            }
            
            public int LinkID {
                get {
                    try {
                        return ((int)(this[this.tableSortProfileTable.LinkIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.LinkIDColumn] = value;
                }
            }
            
            public int LabelID {
                get {
                    try {
                        return ((int)(this[this.tableSortProfileTable.LabelIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.LabelIDColumn] = value;
                }
            }
            
            public int SortTypeID {
                get {
                    try {
                        return ((int)(this[this.tableSortProfileTable.SortTypeIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.SortTypeIDColumn] = value;
                }
            }
            
            public string SortType {
                get {
                    try {
                        return ((string)(this[this.tableSortProfileTable.SortTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.SortTypeColumn] = value;
                }
            }
            
            public bool IsElectronic {
                get {
                    try {
                        return ((bool)(this[this.tableSortProfileTable.IsElectronicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.IsElectronicColumn] = value;
                }
            }
            
            public string ManifestPerTrailer {
                get {
                    try {
                        return ((string)(this[this.tableSortProfileTable.ManifestPerTrailerColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.ManifestPerTrailerColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableSortProfileTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSortProfileTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableSortProfileTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableSortProfileTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsSelectedNull() {
                return this.IsNull(this.tableSortProfileTable.SelectedColumn);
            }
            
            public void SetSelectedNull() {
                this[this.tableSortProfileTable.SelectedColumn] = System.Convert.DBNull;
            }
            
            public bool IsProfileIDNull() {
                return this.IsNull(this.tableSortProfileTable.ProfileIDColumn);
            }
            
            public void SetProfileIDNull() {
                this[this.tableSortProfileTable.ProfileIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsLinkIDNull() {
                return this.IsNull(this.tableSortProfileTable.LinkIDColumn);
            }
            
            public void SetLinkIDNull() {
                this[this.tableSortProfileTable.LinkIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsLabelIDNull() {
                return this.IsNull(this.tableSortProfileTable.LabelIDColumn);
            }
            
            public void SetLabelIDNull() {
                this[this.tableSortProfileTable.LabelIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortTypeIDNull() {
                return this.IsNull(this.tableSortProfileTable.SortTypeIDColumn);
            }
            
            public void SetSortTypeIDNull() {
                this[this.tableSortProfileTable.SortTypeIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortTypeNull() {
                return this.IsNull(this.tableSortProfileTable.SortTypeColumn);
            }
            
            public void SetSortTypeNull() {
                this[this.tableSortProfileTable.SortTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsElectronicNull() {
                return this.IsNull(this.tableSortProfileTable.IsElectronicColumn);
            }
            
            public void SetIsElectronicNull() {
                this[this.tableSortProfileTable.IsElectronicColumn] = System.Convert.DBNull;
            }
            
            public bool IsManifestPerTrailerNull() {
                return this.IsNull(this.tableSortProfileTable.ManifestPerTrailerColumn);
            }
            
            public void SetManifestPerTrailerNull() {
                this[this.tableSortProfileTable.ManifestPerTrailerColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableSortProfileTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableSortProfileTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableSortProfileTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableSortProfileTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableSortProfileTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableSortProfileTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableSortProfileTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableSortProfileTable.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public SortProfileTerminalTableRow[] GetSortProfileTerminalTableRows() {
                return ((SortProfileTerminalTableRow[])(this.GetChildRows(this.Table.ChildRelations["SortProfileTable_SortProfileTerminalTable"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SortProfileTableRowChangeEvent : EventArgs {
            
            private SortProfileTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public SortProfileTableRowChangeEvent(SortProfileTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public SortProfileTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SortProfileTerminalTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSelected;
            
            private DataColumn columnProfileID;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnTerminal;
            
            private DataColumn columnSortProfileTable_Id;
            
            internal SortProfileTerminalTableDataTable() : 
                    base("SortProfileTerminalTable") {
                this.InitClass();
            }
            
            internal SortProfileTerminalTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SelectedColumn {
                get {
                    return this.columnSelected;
                }
            }
            
            internal DataColumn ProfileIDColumn {
                get {
                    return this.columnProfileID;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn TerminalColumn {
                get {
                    return this.columnTerminal;
                }
            }
            
            internal DataColumn SortProfileTable_IdColumn {
                get {
                    return this.columnSortProfileTable_Id;
                }
            }
            
            public SortProfileTerminalTableRow this[int index] {
                get {
                    return ((SortProfileTerminalTableRow)(this.Rows[index]));
                }
            }
            
            public event SortProfileTerminalTableRowChangeEventHandler SortProfileTerminalTableRowChanged;
            
            public event SortProfileTerminalTableRowChangeEventHandler SortProfileTerminalTableRowChanging;
            
            public event SortProfileTerminalTableRowChangeEventHandler SortProfileTerminalTableRowDeleted;
            
            public event SortProfileTerminalTableRowChangeEventHandler SortProfileTerminalTableRowDeleting;
            
            public void AddSortProfileTerminalTableRow(SortProfileTerminalTableRow row) {
                this.Rows.Add(row);
            }
            
            public SortProfileTerminalTableRow AddSortProfileTerminalTableRow(bool Selected, long ProfileID, int TerminalID, string Terminal, SortProfileTableRow parentSortProfileTableRowBySortProfileTable_SortProfileTerminalTable) {
                SortProfileTerminalTableRow rowSortProfileTerminalTableRow = ((SortProfileTerminalTableRow)(this.NewRow()));
                rowSortProfileTerminalTableRow.ItemArray = new object[] {
                        Selected,
                        ProfileID,
                        TerminalID,
                        Terminal,
                        parentSortProfileTableRowBySortProfileTable_SortProfileTerminalTable[12]};
                this.Rows.Add(rowSortProfileTerminalTableRow);
                return rowSortProfileTerminalTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                SortProfileTerminalTableDataTable cln = ((SortProfileTerminalTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new SortProfileTerminalTableDataTable();
            }
            
            internal void InitVars() {
                this.columnSelected = this.Columns["Selected"];
                this.columnProfileID = this.Columns["ProfileID"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnTerminal = this.Columns["Terminal"];
                this.columnSortProfileTable_Id = this.Columns["SortProfileTable_Id"];
            }
            
            private void InitClass() {
                this.columnSelected = new DataColumn("Selected", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSelected);
                this.columnProfileID = new DataColumn("ProfileID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProfileID);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnTerminal = new DataColumn("Terminal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminal);
                this.columnSortProfileTable_Id = new DataColumn("SortProfileTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnSortProfileTable_Id);
            }
            
            public SortProfileTerminalTableRow NewSortProfileTerminalTableRow() {
                return ((SortProfileTerminalTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new SortProfileTerminalTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(SortProfileTerminalTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SortProfileTerminalTableRowChanged != null)) {
                    this.SortProfileTerminalTableRowChanged(this, new SortProfileTerminalTableRowChangeEvent(((SortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SortProfileTerminalTableRowChanging != null)) {
                    this.SortProfileTerminalTableRowChanging(this, new SortProfileTerminalTableRowChangeEvent(((SortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SortProfileTerminalTableRowDeleted != null)) {
                    this.SortProfileTerminalTableRowDeleted(this, new SortProfileTerminalTableRowChangeEvent(((SortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SortProfileTerminalTableRowDeleting != null)) {
                    this.SortProfileTerminalTableRowDeleting(this, new SortProfileTerminalTableRowChangeEvent(((SortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveSortProfileTerminalTableRow(SortProfileTerminalTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SortProfileTerminalTableRow : DataRow {
            
            private SortProfileTerminalTableDataTable tableSortProfileTerminalTable;
            
            internal SortProfileTerminalTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableSortProfileTerminalTable = ((SortProfileTerminalTableDataTable)(this.Table));
            }
            
            public bool Selected {
                get {
                    try {
                        return ((bool)(this[this.tableSortProfileTerminalTable.SelectedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTerminalTable.SelectedColumn] = value;
                }
            }
            
            public long ProfileID {
                get {
                    try {
                        return ((long)(this[this.tableSortProfileTerminalTable.ProfileIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTerminalTable.ProfileIDColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableSortProfileTerminalTable.TerminalIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTerminalTable.TerminalIDColumn] = value;
                }
            }
            
            public string Terminal {
                get {
                    try {
                        return ((string)(this[this.tableSortProfileTerminalTable.TerminalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSortProfileTerminalTable.TerminalColumn] = value;
                }
            }
            
            public SortProfileTableRow SortProfileTableRow {
                get {
                    return ((SortProfileTableRow)(this.GetParentRow(this.Table.ParentRelations["SortProfileTable_SortProfileTerminalTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SortProfileTable_SortProfileTerminalTable"]);
                }
            }
            
            public bool IsSelectedNull() {
                return this.IsNull(this.tableSortProfileTerminalTable.SelectedColumn);
            }
            
            public void SetSelectedNull() {
                this[this.tableSortProfileTerminalTable.SelectedColumn] = System.Convert.DBNull;
            }
            
            public bool IsProfileIDNull() {
                return this.IsNull(this.tableSortProfileTerminalTable.ProfileIDColumn);
            }
            
            public void SetProfileIDNull() {
                this[this.tableSortProfileTerminalTable.ProfileIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableSortProfileTerminalTable.TerminalIDColumn);
            }
            
            public void SetTerminalIDNull() {
                this[this.tableSortProfileTerminalTable.TerminalIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalNull() {
                return this.IsNull(this.tableSortProfileTerminalTable.TerminalColumn);
            }
            
            public void SetTerminalNull() {
                this[this.tableSortProfileTerminalTable.TerminalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SortProfileTerminalTableRowChangeEvent : EventArgs {
            
            private SortProfileTerminalTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public SortProfileTerminalTableRowChangeEvent(SortProfileTerminalTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public SortProfileTerminalTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
