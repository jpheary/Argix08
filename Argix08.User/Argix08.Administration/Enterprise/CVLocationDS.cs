//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Enterprise {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class CVLocationDS : DataSet {
        
        private CVLocationViewTableDataTable tableCVLocationViewTable;
        
        private CVLocationDetailTableDataTable tableCVLocationDetailTable;
        
        private CVLocationNumberTableDataTable tableCVLocationNumberTable;
        
        private CVLocationSortProfileTableDataTable tableCVLocationSortProfileTable;
        
        private CVLocationSortProfileTerminalTableDataTable tableCVLocationSortProfileTerminalTable;
        
        private DataRelation relationCVLocationSortProfileTable_CVLocationSortProfileTerminalTable;
        
        private DataRelation relationCVLocationDetailTable_CVLocationNumberTable;
        
        private DataRelation relationCVLocationDetailTable_CVLocationSortProfileTable;
        
        public CVLocationDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected CVLocationDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CVLocationViewTable"] != null)) {
                    this.Tables.Add(new CVLocationViewTableDataTable(ds.Tables["CVLocationViewTable"]));
                }
                if ((ds.Tables["CVLocationDetailTable"] != null)) {
                    this.Tables.Add(new CVLocationDetailTableDataTable(ds.Tables["CVLocationDetailTable"]));
                }
                if ((ds.Tables["CVLocationNumberTable"] != null)) {
                    this.Tables.Add(new CVLocationNumberTableDataTable(ds.Tables["CVLocationNumberTable"]));
                }
                if ((ds.Tables["CVLocationSortProfileTable"] != null)) {
                    this.Tables.Add(new CVLocationSortProfileTableDataTable(ds.Tables["CVLocationSortProfileTable"]));
                }
                if ((ds.Tables["CVLocationSortProfileTerminalTable"] != null)) {
                    this.Tables.Add(new CVLocationSortProfileTerminalTableDataTable(ds.Tables["CVLocationSortProfileTerminalTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CVLocationViewTableDataTable CVLocationViewTable {
            get {
                return this.tableCVLocationViewTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CVLocationDetailTableDataTable CVLocationDetailTable {
            get {
                return this.tableCVLocationDetailTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CVLocationNumberTableDataTable CVLocationNumberTable {
            get {
                return this.tableCVLocationNumberTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CVLocationSortProfileTableDataTable CVLocationSortProfileTable {
            get {
                return this.tableCVLocationSortProfileTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CVLocationSortProfileTerminalTableDataTable CVLocationSortProfileTerminalTable {
            get {
                return this.tableCVLocationSortProfileTerminalTable;
            }
        }
        
        public override DataSet Clone() {
            CVLocationDS cln = ((CVLocationDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["CVLocationViewTable"] != null)) {
                this.Tables.Add(new CVLocationViewTableDataTable(ds.Tables["CVLocationViewTable"]));
            }
            if ((ds.Tables["CVLocationDetailTable"] != null)) {
                this.Tables.Add(new CVLocationDetailTableDataTable(ds.Tables["CVLocationDetailTable"]));
            }
            if ((ds.Tables["CVLocationNumberTable"] != null)) {
                this.Tables.Add(new CVLocationNumberTableDataTable(ds.Tables["CVLocationNumberTable"]));
            }
            if ((ds.Tables["CVLocationSortProfileTable"] != null)) {
                this.Tables.Add(new CVLocationSortProfileTableDataTable(ds.Tables["CVLocationSortProfileTable"]));
            }
            if ((ds.Tables["CVLocationSortProfileTerminalTable"] != null)) {
                this.Tables.Add(new CVLocationSortProfileTerminalTableDataTable(ds.Tables["CVLocationSortProfileTerminalTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableCVLocationViewTable = ((CVLocationViewTableDataTable)(this.Tables["CVLocationViewTable"]));
            if ((this.tableCVLocationViewTable != null)) {
                this.tableCVLocationViewTable.InitVars();
            }
            this.tableCVLocationDetailTable = ((CVLocationDetailTableDataTable)(this.Tables["CVLocationDetailTable"]));
            if ((this.tableCVLocationDetailTable != null)) {
                this.tableCVLocationDetailTable.InitVars();
            }
            this.tableCVLocationNumberTable = ((CVLocationNumberTableDataTable)(this.Tables["CVLocationNumberTable"]));
            if ((this.tableCVLocationNumberTable != null)) {
                this.tableCVLocationNumberTable.InitVars();
            }
            this.tableCVLocationSortProfileTable = ((CVLocationSortProfileTableDataTable)(this.Tables["CVLocationSortProfileTable"]));
            if ((this.tableCVLocationSortProfileTable != null)) {
                this.tableCVLocationSortProfileTable.InitVars();
            }
            this.tableCVLocationSortProfileTerminalTable = ((CVLocationSortProfileTerminalTableDataTable)(this.Tables["CVLocationSortProfileTerminalTable"]));
            if ((this.tableCVLocationSortProfileTerminalTable != null)) {
                this.tableCVLocationSortProfileTerminalTable.InitVars();
            }
            this.relationCVLocationSortProfileTable_CVLocationSortProfileTerminalTable = this.Relations["CVLocationSortProfileTable_CVLocationSortProfileTerminalTable"];
            this.relationCVLocationDetailTable_CVLocationNumberTable = this.Relations["CVLocationDetailTable_CVLocationNumberTable"];
            this.relationCVLocationDetailTable_CVLocationSortProfileTable = this.Relations["CVLocationDetailTable_CVLocationSortProfileTable"];
        }
        
        private void InitClass() {
            this.DataSetName = "CVLocationDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/CVLocationDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCVLocationViewTable = new CVLocationViewTableDataTable();
            this.Tables.Add(this.tableCVLocationViewTable);
            this.tableCVLocationDetailTable = new CVLocationDetailTableDataTable();
            this.Tables.Add(this.tableCVLocationDetailTable);
            this.tableCVLocationNumberTable = new CVLocationNumberTableDataTable();
            this.Tables.Add(this.tableCVLocationNumberTable);
            this.tableCVLocationSortProfileTable = new CVLocationSortProfileTableDataTable();
            this.Tables.Add(this.tableCVLocationSortProfileTable);
            this.tableCVLocationSortProfileTerminalTable = new CVLocationSortProfileTerminalTableDataTable();
            this.Tables.Add(this.tableCVLocationSortProfileTerminalTable);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("CVLocationDetailTable_CVLocationNumberTable", new DataColumn[] {
                        this.tableCVLocationDetailTable.CVLocationDetailTable_IdColumn}, new DataColumn[] {
                        this.tableCVLocationNumberTable.CVLocationDetailTable_IdColumn});
            this.tableCVLocationNumberTable.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("CVLocationDetailTable_CVLocationSortProfileTable", new DataColumn[] {
                        this.tableCVLocationDetailTable.CVLocationDetailTable_IdColumn}, new DataColumn[] {
                        this.tableCVLocationSortProfileTable.CVLocationDetailTable_IdColumn});
            this.tableCVLocationSortProfileTable.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("CVLocationSortProfileTable_CVLocationSortProfileTerminalTable", new DataColumn[] {
                        this.tableCVLocationSortProfileTable.CVLocationSortProfileTable_IdColumn}, new DataColumn[] {
                        this.tableCVLocationSortProfileTerminalTable.CVLocationSortProfileTable_IdColumn});
            this.tableCVLocationSortProfileTerminalTable.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationCVLocationSortProfileTable_CVLocationSortProfileTerminalTable = new DataRelation("CVLocationSortProfileTable_CVLocationSortProfileTerminalTable", new DataColumn[] {
                        this.tableCVLocationSortProfileTable.CVLocationSortProfileTable_IdColumn}, new DataColumn[] {
                        this.tableCVLocationSortProfileTerminalTable.CVLocationSortProfileTable_IdColumn}, false);
            this.relationCVLocationSortProfileTable_CVLocationSortProfileTerminalTable.Nested = true;
            this.Relations.Add(this.relationCVLocationSortProfileTable_CVLocationSortProfileTerminalTable);
            this.relationCVLocationDetailTable_CVLocationNumberTable = new DataRelation("CVLocationDetailTable_CVLocationNumberTable", new DataColumn[] {
                        this.tableCVLocationDetailTable.CVLocationDetailTable_IdColumn}, new DataColumn[] {
                        this.tableCVLocationNumberTable.CVLocationDetailTable_IdColumn}, false);
            this.relationCVLocationDetailTable_CVLocationNumberTable.Nested = true;
            this.Relations.Add(this.relationCVLocationDetailTable_CVLocationNumberTable);
            this.relationCVLocationDetailTable_CVLocationSortProfileTable = new DataRelation("CVLocationDetailTable_CVLocationSortProfileTable", new DataColumn[] {
                        this.tableCVLocationDetailTable.CVLocationDetailTable_IdColumn}, new DataColumn[] {
                        this.tableCVLocationSortProfileTable.CVLocationDetailTable_IdColumn}, false);
            this.relationCVLocationDetailTable_CVLocationSortProfileTable.Nested = true;
            this.Relations.Add(this.relationCVLocationDetailTable_CVLocationSortProfileTable);
        }
        
        private bool ShouldSerializeCVLocationViewTable() {
            return false;
        }
        
        private bool ShouldSerializeCVLocationDetailTable() {
            return false;
        }
        
        private bool ShouldSerializeCVLocationNumberTable() {
            return false;
        }
        
        private bool ShouldSerializeCVLocationSortProfileTable() {
            return false;
        }
        
        private bool ShouldSerializeCVLocationSortProfileTerminalTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void CVLocationViewTableRowChangeEventHandler(object sender, CVLocationViewTableRowChangeEvent e);
        
        public delegate void CVLocationDetailTableRowChangeEventHandler(object sender, CVLocationDetailTableRowChangeEvent e);
        
        public delegate void CVLocationNumberTableRowChangeEventHandler(object sender, CVLocationNumberTableRowChangeEvent e);
        
        public delegate void CVLocationSortProfileTableRowChangeEventHandler(object sender, CVLocationSortProfileTableRowChangeEvent e);
        
        public delegate void CVLocationSortProfileTerminalTableRowChangeEventHandler(object sender, CVLocationSortProfileTerminalTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationViewTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLinkID;
            
            private DataColumn columnClientID;
            
            private DataColumn columnVendorID;
            
            private DataColumn columnVendorName;
            
            private DataColumn columnNumber;
            
            private DataColumn columnLocationID;
            
            private DataColumn columnDescription;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal CVLocationViewTableDataTable() : 
                    base("CVLocationViewTable") {
                this.InitClass();
            }
            
            internal CVLocationViewTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LinkIDColumn {
                get {
                    return this.columnLinkID;
                }
            }
            
            internal DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            internal DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            internal DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn LocationIDColumn {
                get {
                    return this.columnLocationID;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public CVLocationViewTableRow this[int index] {
                get {
                    return ((CVLocationViewTableRow)(this.Rows[index]));
                }
            }
            
            public event CVLocationViewTableRowChangeEventHandler CVLocationViewTableRowChanged;
            
            public event CVLocationViewTableRowChangeEventHandler CVLocationViewTableRowChanging;
            
            public event CVLocationViewTableRowChangeEventHandler CVLocationViewTableRowDeleted;
            
            public event CVLocationViewTableRowChangeEventHandler CVLocationViewTableRowDeleting;
            
            public void AddCVLocationViewTableRow(CVLocationViewTableRow row) {
                this.Rows.Add(row);
            }
            
            public CVLocationViewTableRow AddCVLocationViewTableRow(int LinkID, int ClientID, int VendorID, string VendorName, string Number, int LocationID, string Description, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                CVLocationViewTableRow rowCVLocationViewTableRow = ((CVLocationViewTableRow)(this.NewRow()));
                rowCVLocationViewTableRow.ItemArray = new object[] {
                        LinkID,
                        ClientID,
                        VendorID,
                        VendorName,
                        Number,
                        LocationID,
                        Description,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowCVLocationViewTableRow);
                return rowCVLocationViewTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CVLocationViewTableDataTable cln = ((CVLocationViewTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CVLocationViewTableDataTable();
            }
            
            internal void InitVars() {
                this.columnLinkID = this.Columns["LinkID"];
                this.columnClientID = this.Columns["ClientID"];
                this.columnVendorID = this.Columns["VendorID"];
                this.columnVendorName = this.Columns["VendorName"];
                this.columnNumber = this.Columns["Number"];
                this.columnLocationID = this.Columns["LocationID"];
                this.columnDescription = this.Columns["Description"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnLinkID = new DataColumn("LinkID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLinkID);
                this.columnClientID = new DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientID);
                this.columnVendorID = new DataColumn("VendorID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVendorID);
                this.columnVendorName = new DataColumn("VendorName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVendorName);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnLocationID = new DataColumn("LocationID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationID);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
            }
            
            public CVLocationViewTableRow NewCVLocationViewTableRow() {
                return ((CVLocationViewTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CVLocationViewTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CVLocationViewTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CVLocationViewTableRowChanged != null)) {
                    this.CVLocationViewTableRowChanged(this, new CVLocationViewTableRowChangeEvent(((CVLocationViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CVLocationViewTableRowChanging != null)) {
                    this.CVLocationViewTableRowChanging(this, new CVLocationViewTableRowChangeEvent(((CVLocationViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CVLocationViewTableRowDeleted != null)) {
                    this.CVLocationViewTableRowDeleted(this, new CVLocationViewTableRowChangeEvent(((CVLocationViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CVLocationViewTableRowDeleting != null)) {
                    this.CVLocationViewTableRowDeleting(this, new CVLocationViewTableRowChangeEvent(((CVLocationViewTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCVLocationViewTableRow(CVLocationViewTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationViewTableRow : DataRow {
            
            private CVLocationViewTableDataTable tableCVLocationViewTable;
            
            internal CVLocationViewTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCVLocationViewTable = ((CVLocationViewTableDataTable)(this.Table));
            }
            
            public int LinkID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationViewTable.LinkIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.LinkIDColumn] = value;
                }
            }
            
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationViewTable.ClientIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.ClientIDColumn] = value;
                }
            }
            
            public int VendorID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationViewTable.VendorIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.VendorIDColumn] = value;
                }
            }
            
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationViewTable.VendorNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.VendorNameColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationViewTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.NumberColumn] = value;
                }
            }
            
            public int LocationID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationViewTable.LocationIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.LocationIDColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationViewTable.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.DescriptionColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableCVLocationViewTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCVLocationViewTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationViewTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationViewTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationViewTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsLinkIDNull() {
                return this.IsNull(this.tableCVLocationViewTable.LinkIDColumn);
            }
            
            public void SetLinkIDNull() {
                this[this.tableCVLocationViewTable.LinkIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientIDNull() {
                return this.IsNull(this.tableCVLocationViewTable.ClientIDColumn);
            }
            
            public void SetClientIDNull() {
                this[this.tableCVLocationViewTable.ClientIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableCVLocationViewTable.VendorIDColumn);
            }
            
            public void SetVendorIDNull() {
                this[this.tableCVLocationViewTable.VendorIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableCVLocationViewTable.VendorNameColumn);
            }
            
            public void SetVendorNameNull() {
                this[this.tableCVLocationViewTable.VendorNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableCVLocationViewTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableCVLocationViewTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationIDNull() {
                return this.IsNull(this.tableCVLocationViewTable.LocationIDColumn);
            }
            
            public void SetLocationIDNull() {
                this[this.tableCVLocationViewTable.LocationIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCVLocationViewTable.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableCVLocationViewTable.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableCVLocationViewTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableCVLocationViewTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableCVLocationViewTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableCVLocationViewTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableCVLocationViewTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableCVLocationViewTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableCVLocationViewTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableCVLocationViewTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationViewTableRowChangeEvent : EventArgs {
            
            private CVLocationViewTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public CVLocationViewTableRowChangeEvent(CVLocationViewTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CVLocationViewTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationDetailTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLinkID;
            
            private DataColumn columnClientID;
            
            private DataColumn columnVendorID;
            
            private DataColumn columnVendorName;
            
            private DataColumn columnNumber;
            
            private DataColumn columnLocationID;
            
            private DataColumn columnDescription;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnCVLocationDetailTable_Id;
            
            internal CVLocationDetailTableDataTable() : 
                    base("CVLocationDetailTable") {
                this.InitClass();
            }
            
            internal CVLocationDetailTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LinkIDColumn {
                get {
                    return this.columnLinkID;
                }
            }
            
            internal DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            internal DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            internal DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn LocationIDColumn {
                get {
                    return this.columnLocationID;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn CVLocationDetailTable_IdColumn {
                get {
                    return this.columnCVLocationDetailTable_Id;
                }
            }
            
            public CVLocationDetailTableRow this[int index] {
                get {
                    return ((CVLocationDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event CVLocationDetailTableRowChangeEventHandler CVLocationDetailTableRowChanged;
            
            public event CVLocationDetailTableRowChangeEventHandler CVLocationDetailTableRowChanging;
            
            public event CVLocationDetailTableRowChangeEventHandler CVLocationDetailTableRowDeleted;
            
            public event CVLocationDetailTableRowChangeEventHandler CVLocationDetailTableRowDeleting;
            
            public void AddCVLocationDetailTableRow(CVLocationDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            public CVLocationDetailTableRow AddCVLocationDetailTableRow(int LinkID, int ClientID, int VendorID, string VendorName, string Number, int LocationID, string Description, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                CVLocationDetailTableRow rowCVLocationDetailTableRow = ((CVLocationDetailTableRow)(this.NewRow()));
                rowCVLocationDetailTableRow.ItemArray = new object[] {
                        LinkID,
                        ClientID,
                        VendorID,
                        VendorName,
                        Number,
                        LocationID,
                        Description,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        null};
                this.Rows.Add(rowCVLocationDetailTableRow);
                return rowCVLocationDetailTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CVLocationDetailTableDataTable cln = ((CVLocationDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CVLocationDetailTableDataTable();
            }
            
            internal void InitVars() {
                this.columnLinkID = this.Columns["LinkID"];
                this.columnClientID = this.Columns["ClientID"];
                this.columnVendorID = this.Columns["VendorID"];
                this.columnVendorName = this.Columns["VendorName"];
                this.columnNumber = this.Columns["Number"];
                this.columnLocationID = this.Columns["LocationID"];
                this.columnDescription = this.Columns["Description"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnCVLocationDetailTable_Id = this.Columns["CVLocationDetailTable_Id"];
            }
            
            private void InitClass() {
                this.columnLinkID = new DataColumn("LinkID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLinkID);
                this.columnClientID = new DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientID);
                this.columnVendorID = new DataColumn("VendorID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVendorID);
                this.columnVendorName = new DataColumn("VendorName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVendorName);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnLocationID = new DataColumn("LocationID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLocationID);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnCVLocationDetailTable_Id = new DataColumn("CVLocationDetailTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnCVLocationDetailTable_Id);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnCVLocationDetailTable_Id}, true));
                this.columnCVLocationDetailTable_Id.AutoIncrement = true;
                this.columnCVLocationDetailTable_Id.AllowDBNull = false;
                this.columnCVLocationDetailTable_Id.Unique = true;
            }
            
            public CVLocationDetailTableRow NewCVLocationDetailTableRow() {
                return ((CVLocationDetailTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CVLocationDetailTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CVLocationDetailTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CVLocationDetailTableRowChanged != null)) {
                    this.CVLocationDetailTableRowChanged(this, new CVLocationDetailTableRowChangeEvent(((CVLocationDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CVLocationDetailTableRowChanging != null)) {
                    this.CVLocationDetailTableRowChanging(this, new CVLocationDetailTableRowChangeEvent(((CVLocationDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CVLocationDetailTableRowDeleted != null)) {
                    this.CVLocationDetailTableRowDeleted(this, new CVLocationDetailTableRowChangeEvent(((CVLocationDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CVLocationDetailTableRowDeleting != null)) {
                    this.CVLocationDetailTableRowDeleting(this, new CVLocationDetailTableRowChangeEvent(((CVLocationDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCVLocationDetailTableRow(CVLocationDetailTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationDetailTableRow : DataRow {
            
            private CVLocationDetailTableDataTable tableCVLocationDetailTable;
            
            internal CVLocationDetailTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCVLocationDetailTable = ((CVLocationDetailTableDataTable)(this.Table));
            }
            
            public int LinkID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationDetailTable.LinkIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.LinkIDColumn] = value;
                }
            }
            
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationDetailTable.ClientIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.ClientIDColumn] = value;
                }
            }
            
            public int VendorID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationDetailTable.VendorIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.VendorIDColumn] = value;
                }
            }
            
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationDetailTable.VendorNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.VendorNameColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationDetailTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.NumberColumn] = value;
                }
            }
            
            public int LocationID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationDetailTable.LocationIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.LocationIDColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationDetailTable.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.DescriptionColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableCVLocationDetailTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCVLocationDetailTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationDetailTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationDetailTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationDetailTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsLinkIDNull() {
                return this.IsNull(this.tableCVLocationDetailTable.LinkIDColumn);
            }
            
            public void SetLinkIDNull() {
                this[this.tableCVLocationDetailTable.LinkIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientIDNull() {
                return this.IsNull(this.tableCVLocationDetailTable.ClientIDColumn);
            }
            
            public void SetClientIDNull() {
                this[this.tableCVLocationDetailTable.ClientIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableCVLocationDetailTable.VendorIDColumn);
            }
            
            public void SetVendorIDNull() {
                this[this.tableCVLocationDetailTable.VendorIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableCVLocationDetailTable.VendorNameColumn);
            }
            
            public void SetVendorNameNull() {
                this[this.tableCVLocationDetailTable.VendorNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableCVLocationDetailTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableCVLocationDetailTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsLocationIDNull() {
                return this.IsNull(this.tableCVLocationDetailTable.LocationIDColumn);
            }
            
            public void SetLocationIDNull() {
                this[this.tableCVLocationDetailTable.LocationIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCVLocationDetailTable.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableCVLocationDetailTable.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableCVLocationDetailTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableCVLocationDetailTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableCVLocationDetailTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableCVLocationDetailTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableCVLocationDetailTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableCVLocationDetailTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableCVLocationDetailTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableCVLocationDetailTable.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public CVLocationNumberTableRow[] GetCVLocationNumberTableRows() {
                return ((CVLocationNumberTableRow[])(this.GetChildRows(this.Table.ChildRelations["CVLocationDetailTable_CVLocationNumberTable"])));
            }
            
            public CVLocationSortProfileTableRow[] GetCVLocationSortProfileTableRows() {
                return ((CVLocationSortProfileTableRow[])(this.GetChildRows(this.Table.ChildRelations["CVLocationDetailTable_CVLocationSortProfileTable"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationDetailTableRowChangeEvent : EventArgs {
            
            private CVLocationDetailTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public CVLocationDetailTableRowChangeEvent(CVLocationDetailTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CVLocationDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationNumberTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLinkID;
            
            private DataColumn columnNumber;
            
            private DataColumn columnCVLocationDetailTable_Id;
            
            internal CVLocationNumberTableDataTable() : 
                    base("CVLocationNumberTable") {
                this.InitClass();
            }
            
            internal CVLocationNumberTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LinkIDColumn {
                get {
                    return this.columnLinkID;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn CVLocationDetailTable_IdColumn {
                get {
                    return this.columnCVLocationDetailTable_Id;
                }
            }
            
            public CVLocationNumberTableRow this[int index] {
                get {
                    return ((CVLocationNumberTableRow)(this.Rows[index]));
                }
            }
            
            public event CVLocationNumberTableRowChangeEventHandler CVLocationNumberTableRowChanged;
            
            public event CVLocationNumberTableRowChangeEventHandler CVLocationNumberTableRowChanging;
            
            public event CVLocationNumberTableRowChangeEventHandler CVLocationNumberTableRowDeleted;
            
            public event CVLocationNumberTableRowChangeEventHandler CVLocationNumberTableRowDeleting;
            
            public void AddCVLocationNumberTableRow(CVLocationNumberTableRow row) {
                this.Rows.Add(row);
            }
            
            public CVLocationNumberTableRow AddCVLocationNumberTableRow(int LinkID, string Number, CVLocationDetailTableRow parentCVLocationDetailTableRowByCVLocationDetailTable_CVLocationNumberTable) {
                CVLocationNumberTableRow rowCVLocationNumberTableRow = ((CVLocationNumberTableRow)(this.NewRow()));
                rowCVLocationNumberTableRow.ItemArray = new object[] {
                        LinkID,
                        Number,
                        parentCVLocationDetailTableRowByCVLocationDetailTable_CVLocationNumberTable[11]};
                this.Rows.Add(rowCVLocationNumberTableRow);
                return rowCVLocationNumberTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CVLocationNumberTableDataTable cln = ((CVLocationNumberTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CVLocationNumberTableDataTable();
            }
            
            internal void InitVars() {
                this.columnLinkID = this.Columns["LinkID"];
                this.columnNumber = this.Columns["Number"];
                this.columnCVLocationDetailTable_Id = this.Columns["CVLocationDetailTable_Id"];
            }
            
            private void InitClass() {
                this.columnLinkID = new DataColumn("LinkID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLinkID);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnCVLocationDetailTable_Id = new DataColumn("CVLocationDetailTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnCVLocationDetailTable_Id);
            }
            
            public CVLocationNumberTableRow NewCVLocationNumberTableRow() {
                return ((CVLocationNumberTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CVLocationNumberTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CVLocationNumberTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CVLocationNumberTableRowChanged != null)) {
                    this.CVLocationNumberTableRowChanged(this, new CVLocationNumberTableRowChangeEvent(((CVLocationNumberTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CVLocationNumberTableRowChanging != null)) {
                    this.CVLocationNumberTableRowChanging(this, new CVLocationNumberTableRowChangeEvent(((CVLocationNumberTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CVLocationNumberTableRowDeleted != null)) {
                    this.CVLocationNumberTableRowDeleted(this, new CVLocationNumberTableRowChangeEvent(((CVLocationNumberTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CVLocationNumberTableRowDeleting != null)) {
                    this.CVLocationNumberTableRowDeleting(this, new CVLocationNumberTableRowChangeEvent(((CVLocationNumberTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCVLocationNumberTableRow(CVLocationNumberTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationNumberTableRow : DataRow {
            
            private CVLocationNumberTableDataTable tableCVLocationNumberTable;
            
            internal CVLocationNumberTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCVLocationNumberTable = ((CVLocationNumberTableDataTable)(this.Table));
            }
            
            public int LinkID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationNumberTable.LinkIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationNumberTable.LinkIDColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationNumberTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationNumberTable.NumberColumn] = value;
                }
            }
            
            public CVLocationDetailTableRow CVLocationDetailTableRow {
                get {
                    return ((CVLocationDetailTableRow)(this.GetParentRow(this.Table.ParentRelations["CVLocationDetailTable_CVLocationNumberTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CVLocationDetailTable_CVLocationNumberTable"]);
                }
            }
            
            public bool IsLinkIDNull() {
                return this.IsNull(this.tableCVLocationNumberTable.LinkIDColumn);
            }
            
            public void SetLinkIDNull() {
                this[this.tableCVLocationNumberTable.LinkIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableCVLocationNumberTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableCVLocationNumberTable.NumberColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationNumberTableRowChangeEvent : EventArgs {
            
            private CVLocationNumberTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public CVLocationNumberTableRowChangeEvent(CVLocationNumberTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CVLocationNumberTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationSortProfileTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnProfileID;
            
            private DataColumn columnLinkID;
            
            private DataColumn columnLabelID;
            
            private DataColumn columnSortType;
            
            private DataColumn columnSortTypeID;
            
            private DataColumn columnIsElectronic;
            
            private DataColumn columnManifestPerTrailer;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnCVLocationSortProfileTable_Id;
            
            private DataColumn columnCVLocationDetailTable_Id;
            
            internal CVLocationSortProfileTableDataTable() : 
                    base("CVLocationSortProfileTable") {
                this.InitClass();
            }
            
            internal CVLocationSortProfileTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ProfileIDColumn {
                get {
                    return this.columnProfileID;
                }
            }
            
            internal DataColumn LinkIDColumn {
                get {
                    return this.columnLinkID;
                }
            }
            
            internal DataColumn LabelIDColumn {
                get {
                    return this.columnLabelID;
                }
            }
            
            internal DataColumn SortTypeColumn {
                get {
                    return this.columnSortType;
                }
            }
            
            internal DataColumn SortTypeIDColumn {
                get {
                    return this.columnSortTypeID;
                }
            }
            
            internal DataColumn IsElectronicColumn {
                get {
                    return this.columnIsElectronic;
                }
            }
            
            internal DataColumn ManifestPerTrailerColumn {
                get {
                    return this.columnManifestPerTrailer;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn CVLocationSortProfileTable_IdColumn {
                get {
                    return this.columnCVLocationSortProfileTable_Id;
                }
            }
            
            internal DataColumn CVLocationDetailTable_IdColumn {
                get {
                    return this.columnCVLocationDetailTable_Id;
                }
            }
            
            public CVLocationSortProfileTableRow this[int index] {
                get {
                    return ((CVLocationSortProfileTableRow)(this.Rows[index]));
                }
            }
            
            public event CVLocationSortProfileTableRowChangeEventHandler CVLocationSortProfileTableRowChanged;
            
            public event CVLocationSortProfileTableRowChangeEventHandler CVLocationSortProfileTableRowChanging;
            
            public event CVLocationSortProfileTableRowChangeEventHandler CVLocationSortProfileTableRowDeleted;
            
            public event CVLocationSortProfileTableRowChangeEventHandler CVLocationSortProfileTableRowDeleting;
            
            public void AddCVLocationSortProfileTableRow(CVLocationSortProfileTableRow row) {
                this.Rows.Add(row);
            }
            
            public CVLocationSortProfileTableRow AddCVLocationSortProfileTableRow(long ProfileID, int LinkID, int LabelID, string SortType, int SortTypeID, bool IsElectronic, string ManifestPerTrailer, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion, CVLocationDetailTableRow parentCVLocationDetailTableRowByCVLocationDetailTable_CVLocationSortProfileTable) {
                CVLocationSortProfileTableRow rowCVLocationSortProfileTableRow = ((CVLocationSortProfileTableRow)(this.NewRow()));
                rowCVLocationSortProfileTableRow.ItemArray = new object[] {
                        ProfileID,
                        LinkID,
                        LabelID,
                        SortType,
                        SortTypeID,
                        IsElectronic,
                        ManifestPerTrailer,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        null,
                        parentCVLocationDetailTableRowByCVLocationDetailTable_CVLocationSortProfileTable[11]};
                this.Rows.Add(rowCVLocationSortProfileTableRow);
                return rowCVLocationSortProfileTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CVLocationSortProfileTableDataTable cln = ((CVLocationSortProfileTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CVLocationSortProfileTableDataTable();
            }
            
            internal void InitVars() {
                this.columnProfileID = this.Columns["ProfileID"];
                this.columnLinkID = this.Columns["LinkID"];
                this.columnLabelID = this.Columns["LabelID"];
                this.columnSortType = this.Columns["SortType"];
                this.columnSortTypeID = this.Columns["SortTypeID"];
                this.columnIsElectronic = this.Columns["IsElectronic"];
                this.columnManifestPerTrailer = this.Columns["ManifestPerTrailer"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnCVLocationSortProfileTable_Id = this.Columns["CVLocationSortProfileTable_Id"];
                this.columnCVLocationDetailTable_Id = this.Columns["CVLocationDetailTable_Id"];
            }
            
            private void InitClass() {
                this.columnProfileID = new DataColumn("ProfileID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProfileID);
                this.columnLinkID = new DataColumn("LinkID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLinkID);
                this.columnLabelID = new DataColumn("LabelID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLabelID);
                this.columnSortType = new DataColumn("SortType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortType);
                this.columnSortTypeID = new DataColumn("SortTypeID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSortTypeID);
                this.columnIsElectronic = new DataColumn("IsElectronic", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsElectronic);
                this.columnManifestPerTrailer = new DataColumn("ManifestPerTrailer", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManifestPerTrailer);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnCVLocationSortProfileTable_Id = new DataColumn("CVLocationSortProfileTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnCVLocationSortProfileTable_Id);
                this.columnCVLocationDetailTable_Id = new DataColumn("CVLocationDetailTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnCVLocationDetailTable_Id);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnCVLocationSortProfileTable_Id}, true));
                this.columnCVLocationSortProfileTable_Id.AutoIncrement = true;
                this.columnCVLocationSortProfileTable_Id.AllowDBNull = false;
                this.columnCVLocationSortProfileTable_Id.Unique = true;
            }
            
            public CVLocationSortProfileTableRow NewCVLocationSortProfileTableRow() {
                return ((CVLocationSortProfileTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CVLocationSortProfileTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CVLocationSortProfileTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CVLocationSortProfileTableRowChanged != null)) {
                    this.CVLocationSortProfileTableRowChanged(this, new CVLocationSortProfileTableRowChangeEvent(((CVLocationSortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CVLocationSortProfileTableRowChanging != null)) {
                    this.CVLocationSortProfileTableRowChanging(this, new CVLocationSortProfileTableRowChangeEvent(((CVLocationSortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CVLocationSortProfileTableRowDeleted != null)) {
                    this.CVLocationSortProfileTableRowDeleted(this, new CVLocationSortProfileTableRowChangeEvent(((CVLocationSortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CVLocationSortProfileTableRowDeleting != null)) {
                    this.CVLocationSortProfileTableRowDeleting(this, new CVLocationSortProfileTableRowChangeEvent(((CVLocationSortProfileTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCVLocationSortProfileTableRow(CVLocationSortProfileTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationSortProfileTableRow : DataRow {
            
            private CVLocationSortProfileTableDataTable tableCVLocationSortProfileTable;
            
            internal CVLocationSortProfileTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCVLocationSortProfileTable = ((CVLocationSortProfileTableDataTable)(this.Table));
            }
            
            public long ProfileID {
                get {
                    try {
                        return ((long)(this[this.tableCVLocationSortProfileTable.ProfileIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.ProfileIDColumn] = value;
                }
            }
            
            public int LinkID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationSortProfileTable.LinkIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.LinkIDColumn] = value;
                }
            }
            
            public int LabelID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationSortProfileTable.LabelIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.LabelIDColumn] = value;
                }
            }
            
            public string SortType {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationSortProfileTable.SortTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.SortTypeColumn] = value;
                }
            }
            
            public int SortTypeID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationSortProfileTable.SortTypeIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.SortTypeIDColumn] = value;
                }
            }
            
            public bool IsElectronic {
                get {
                    try {
                        return ((bool)(this[this.tableCVLocationSortProfileTable.IsElectronicColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.IsElectronicColumn] = value;
                }
            }
            
            public string ManifestPerTrailer {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationSortProfileTable.ManifestPerTrailerColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.ManifestPerTrailerColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableCVLocationSortProfileTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCVLocationSortProfileTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationSortProfileTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationSortProfileTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTable.RowVersionColumn] = value;
                }
            }
            
            public CVLocationDetailTableRow CVLocationDetailTableRow {
                get {
                    return ((CVLocationDetailTableRow)(this.GetParentRow(this.Table.ParentRelations["CVLocationDetailTable_CVLocationSortProfileTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CVLocationDetailTable_CVLocationSortProfileTable"]);
                }
            }
            
            public bool IsProfileIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.ProfileIDColumn);
            }
            
            public void SetProfileIDNull() {
                this[this.tableCVLocationSortProfileTable.ProfileIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsLinkIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.LinkIDColumn);
            }
            
            public void SetLinkIDNull() {
                this[this.tableCVLocationSortProfileTable.LinkIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsLabelIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.LabelIDColumn);
            }
            
            public void SetLabelIDNull() {
                this[this.tableCVLocationSortProfileTable.LabelIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortTypeNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.SortTypeColumn);
            }
            
            public void SetSortTypeNull() {
                this[this.tableCVLocationSortProfileTable.SortTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsSortTypeIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.SortTypeIDColumn);
            }
            
            public void SetSortTypeIDNull() {
                this[this.tableCVLocationSortProfileTable.SortTypeIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsElectronicNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.IsElectronicColumn);
            }
            
            public void SetIsElectronicNull() {
                this[this.tableCVLocationSortProfileTable.IsElectronicColumn] = System.Convert.DBNull;
            }
            
            public bool IsManifestPerTrailerNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.ManifestPerTrailerColumn);
            }
            
            public void SetManifestPerTrailerNull() {
                this[this.tableCVLocationSortProfileTable.ManifestPerTrailerColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableCVLocationSortProfileTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableCVLocationSortProfileTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableCVLocationSortProfileTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableCVLocationSortProfileTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableCVLocationSortProfileTable.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public CVLocationSortProfileTerminalTableRow[] GetCVLocationSortProfileTerminalTableRows() {
                return ((CVLocationSortProfileTerminalTableRow[])(this.GetChildRows(this.Table.ChildRelations["CVLocationSortProfileTable_CVLocationSortProfileTerminalTable"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationSortProfileTableRowChangeEvent : EventArgs {
            
            private CVLocationSortProfileTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public CVLocationSortProfileTableRowChangeEvent(CVLocationSortProfileTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CVLocationSortProfileTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationSortProfileTerminalTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnProfileID;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnTerminal;
            
            private DataColumn columnCVLocationSortProfileTable_Id;
            
            internal CVLocationSortProfileTerminalTableDataTable() : 
                    base("CVLocationSortProfileTerminalTable") {
                this.InitClass();
            }
            
            internal CVLocationSortProfileTerminalTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ProfileIDColumn {
                get {
                    return this.columnProfileID;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn TerminalColumn {
                get {
                    return this.columnTerminal;
                }
            }
            
            internal DataColumn CVLocationSortProfileTable_IdColumn {
                get {
                    return this.columnCVLocationSortProfileTable_Id;
                }
            }
            
            public CVLocationSortProfileTerminalTableRow this[int index] {
                get {
                    return ((CVLocationSortProfileTerminalTableRow)(this.Rows[index]));
                }
            }
            
            public event CVLocationSortProfileTerminalTableRowChangeEventHandler CVLocationSortProfileTerminalTableRowChanged;
            
            public event CVLocationSortProfileTerminalTableRowChangeEventHandler CVLocationSortProfileTerminalTableRowChanging;
            
            public event CVLocationSortProfileTerminalTableRowChangeEventHandler CVLocationSortProfileTerminalTableRowDeleted;
            
            public event CVLocationSortProfileTerminalTableRowChangeEventHandler CVLocationSortProfileTerminalTableRowDeleting;
            
            public void AddCVLocationSortProfileTerminalTableRow(CVLocationSortProfileTerminalTableRow row) {
                this.Rows.Add(row);
            }
            
            public CVLocationSortProfileTerminalTableRow AddCVLocationSortProfileTerminalTableRow(long ProfileID, int TerminalID, string Terminal, CVLocationSortProfileTableRow parentCVLocationSortProfileTableRowByCVLocationSortProfileTable_CVLocationSortProfileTerminalTable) {
                CVLocationSortProfileTerminalTableRow rowCVLocationSortProfileTerminalTableRow = ((CVLocationSortProfileTerminalTableRow)(this.NewRow()));
                rowCVLocationSortProfileTerminalTableRow.ItemArray = new object[] {
                        ProfileID,
                        TerminalID,
                        Terminal,
                        parentCVLocationSortProfileTableRowByCVLocationSortProfileTable_CVLocationSortProfileTerminalTable[11]};
                this.Rows.Add(rowCVLocationSortProfileTerminalTableRow);
                return rowCVLocationSortProfileTerminalTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CVLocationSortProfileTerminalTableDataTable cln = ((CVLocationSortProfileTerminalTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CVLocationSortProfileTerminalTableDataTable();
            }
            
            internal void InitVars() {
                this.columnProfileID = this.Columns["ProfileID"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnTerminal = this.Columns["Terminal"];
                this.columnCVLocationSortProfileTable_Id = this.Columns["CVLocationSortProfileTable_Id"];
            }
            
            private void InitClass() {
                this.columnProfileID = new DataColumn("ProfileID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProfileID);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnTerminal = new DataColumn("Terminal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminal);
                this.columnCVLocationSortProfileTable_Id = new DataColumn("CVLocationSortProfileTable_Id", typeof(int), null, System.Data.MappingType.Hidden);
                this.Columns.Add(this.columnCVLocationSortProfileTable_Id);
            }
            
            public CVLocationSortProfileTerminalTableRow NewCVLocationSortProfileTerminalTableRow() {
                return ((CVLocationSortProfileTerminalTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CVLocationSortProfileTerminalTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CVLocationSortProfileTerminalTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CVLocationSortProfileTerminalTableRowChanged != null)) {
                    this.CVLocationSortProfileTerminalTableRowChanged(this, new CVLocationSortProfileTerminalTableRowChangeEvent(((CVLocationSortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CVLocationSortProfileTerminalTableRowChanging != null)) {
                    this.CVLocationSortProfileTerminalTableRowChanging(this, new CVLocationSortProfileTerminalTableRowChangeEvent(((CVLocationSortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CVLocationSortProfileTerminalTableRowDeleted != null)) {
                    this.CVLocationSortProfileTerminalTableRowDeleted(this, new CVLocationSortProfileTerminalTableRowChangeEvent(((CVLocationSortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CVLocationSortProfileTerminalTableRowDeleting != null)) {
                    this.CVLocationSortProfileTerminalTableRowDeleting(this, new CVLocationSortProfileTerminalTableRowChangeEvent(((CVLocationSortProfileTerminalTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCVLocationSortProfileTerminalTableRow(CVLocationSortProfileTerminalTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationSortProfileTerminalTableRow : DataRow {
            
            private CVLocationSortProfileTerminalTableDataTable tableCVLocationSortProfileTerminalTable;
            
            internal CVLocationSortProfileTerminalTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCVLocationSortProfileTerminalTable = ((CVLocationSortProfileTerminalTableDataTable)(this.Table));
            }
            
            public long ProfileID {
                get {
                    try {
                        return ((long)(this[this.tableCVLocationSortProfileTerminalTable.ProfileIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTerminalTable.ProfileIDColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableCVLocationSortProfileTerminalTable.TerminalIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTerminalTable.TerminalIDColumn] = value;
                }
            }
            
            public string Terminal {
                get {
                    try {
                        return ((string)(this[this.tableCVLocationSortProfileTerminalTable.TerminalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCVLocationSortProfileTerminalTable.TerminalColumn] = value;
                }
            }
            
            public CVLocationSortProfileTableRow CVLocationSortProfileTableRow {
                get {
                    return ((CVLocationSortProfileTableRow)(this.GetParentRow(this.Table.ParentRelations["CVLocationSortProfileTable_CVLocationSortProfileTerminalTable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CVLocationSortProfileTable_CVLocationSortProfileTerminalTable"]);
                }
            }
            
            public bool IsProfileIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTerminalTable.ProfileIDColumn);
            }
            
            public void SetProfileIDNull() {
                this[this.tableCVLocationSortProfileTerminalTable.ProfileIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableCVLocationSortProfileTerminalTable.TerminalIDColumn);
            }
            
            public void SetTerminalIDNull() {
                this[this.tableCVLocationSortProfileTerminalTable.TerminalIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalNull() {
                return this.IsNull(this.tableCVLocationSortProfileTerminalTable.TerminalColumn);
            }
            
            public void SetTerminalNull() {
                this[this.tableCVLocationSortProfileTerminalTable.TerminalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CVLocationSortProfileTerminalTableRowChangeEvent : EventArgs {
            
            private CVLocationSortProfileTerminalTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public CVLocationSortProfileTerminalTableRowChangeEvent(CVLocationSortProfileTerminalTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CVLocationSortProfileTerminalTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
