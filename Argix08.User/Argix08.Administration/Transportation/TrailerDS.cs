//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Transportation {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class TrailerDS : DataSet {
        
        private TrailerDetailTableDataTable tableTrailerDetailTable;
        
        private TrailerListTableDataTable tableTrailerListTable;
        
        public TrailerDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected TrailerDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["TrailerDetailTable"] != null)) {
                    this.Tables.Add(new TrailerDetailTableDataTable(ds.Tables["TrailerDetailTable"]));
                }
                if ((ds.Tables["TrailerListTable"] != null)) {
                    this.Tables.Add(new TrailerListTableDataTable(ds.Tables["TrailerListTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrailerDetailTableDataTable TrailerDetailTable {
            get {
                return this.tableTrailerDetailTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrailerListTableDataTable TrailerListTable {
            get {
                return this.tableTrailerListTable;
            }
        }
        
        public override DataSet Clone() {
            TrailerDS cln = ((TrailerDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["TrailerDetailTable"] != null)) {
                this.Tables.Add(new TrailerDetailTableDataTable(ds.Tables["TrailerDetailTable"]));
            }
            if ((ds.Tables["TrailerListTable"] != null)) {
                this.Tables.Add(new TrailerListTableDataTable(ds.Tables["TrailerListTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableTrailerDetailTable = ((TrailerDetailTableDataTable)(this.Tables["TrailerDetailTable"]));
            if ((this.tableTrailerDetailTable != null)) {
                this.tableTrailerDetailTable.InitVars();
            }
            this.tableTrailerListTable = ((TrailerListTableDataTable)(this.Tables["TrailerListTable"]));
            if ((this.tableTrailerListTable != null)) {
                this.tableTrailerListTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "TrailerDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/TrailerDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableTrailerDetailTable = new TrailerDetailTableDataTable();
            this.Tables.Add(this.tableTrailerDetailTable);
            this.tableTrailerListTable = new TrailerListTableDataTable();
            this.Tables.Add(this.tableTrailerListTable);
        }
        
        private bool ShouldSerializeTrailerDetailTable() {
            return false;
        }
        
        private bool ShouldSerializeTrailerListTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void TrailerDetailTableRowChangeEventHandler(object sender, TrailerDetailTableRowChangeEvent e);
        
        public delegate void TrailerListTableRowChangeEventHandler(object sender, TrailerListTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TrailerDetailTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnTrailerID;
            
            private DataColumn columnDefinitionID;
            
            private DataColumn columnCarrierID;
            
            private DataColumn columnDriverID;
            
            private DataColumn columnNumber;
            
            private DataColumn columnState;
            
            private DataColumn columnLicPlateNumber;
            
            private DataColumn columnDescription;
            
            private DataColumn columnIsStorage;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal TrailerDetailTableDataTable() : 
                    base("TrailerDetailTable") {
                this.InitClass();
            }
            
            internal TrailerDetailTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TrailerIDColumn {
                get {
                    return this.columnTrailerID;
                }
            }
            
            internal DataColumn DefinitionIDColumn {
                get {
                    return this.columnDefinitionID;
                }
            }
            
            internal DataColumn CarrierIDColumn {
                get {
                    return this.columnCarrierID;
                }
            }
            
            internal DataColumn DriverIDColumn {
                get {
                    return this.columnDriverID;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            internal DataColumn LicPlateNumberColumn {
                get {
                    return this.columnLicPlateNumber;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn IsStorageColumn {
                get {
                    return this.columnIsStorage;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public TrailerDetailTableRow this[int index] {
                get {
                    return ((TrailerDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event TrailerDetailTableRowChangeEventHandler TrailerDetailTableRowChanged;
            
            public event TrailerDetailTableRowChangeEventHandler TrailerDetailTableRowChanging;
            
            public event TrailerDetailTableRowChangeEventHandler TrailerDetailTableRowDeleted;
            
            public event TrailerDetailTableRowChangeEventHandler TrailerDetailTableRowDeleting;
            
            public void AddTrailerDetailTableRow(TrailerDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            public TrailerDetailTableRow AddTrailerDetailTableRow(int TrailerID, int DefinitionID, int CarrierID, int DriverID, string Number, string State, string LicPlateNumber, string Description, bool IsStorage, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                TrailerDetailTableRow rowTrailerDetailTableRow = ((TrailerDetailTableRow)(this.NewRow()));
                rowTrailerDetailTableRow.ItemArray = new object[] {
                        TrailerID,
                        DefinitionID,
                        CarrierID,
                        DriverID,
                        Number,
                        State,
                        LicPlateNumber,
                        Description,
                        IsStorage,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowTrailerDetailTableRow);
                return rowTrailerDetailTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TrailerDetailTableDataTable cln = ((TrailerDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TrailerDetailTableDataTable();
            }
            
            internal void InitVars() {
                this.columnTrailerID = this.Columns["TrailerID"];
                this.columnDefinitionID = this.Columns["DefinitionID"];
                this.columnCarrierID = this.Columns["CarrierID"];
                this.columnDriverID = this.Columns["DriverID"];
                this.columnNumber = this.Columns["Number"];
                this.columnState = this.Columns["State"];
                this.columnLicPlateNumber = this.Columns["LicPlateNumber"];
                this.columnDescription = this.Columns["Description"];
                this.columnIsStorage = this.Columns["IsStorage"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnTrailerID = new DataColumn("TrailerID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrailerID);
                this.columnDefinitionID = new DataColumn("DefinitionID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDefinitionID);
                this.columnCarrierID = new DataColumn("CarrierID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCarrierID);
                this.columnDriverID = new DataColumn("DriverID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDriverID);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnState = new DataColumn("State", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnState);
                this.columnLicPlateNumber = new DataColumn("LicPlateNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLicPlateNumber);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnIsStorage = new DataColumn("IsStorage", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsStorage);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
            }
            
            public TrailerDetailTableRow NewTrailerDetailTableRow() {
                return ((TrailerDetailTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TrailerDetailTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TrailerDetailTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TrailerDetailTableRowChanged != null)) {
                    this.TrailerDetailTableRowChanged(this, new TrailerDetailTableRowChangeEvent(((TrailerDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TrailerDetailTableRowChanging != null)) {
                    this.TrailerDetailTableRowChanging(this, new TrailerDetailTableRowChangeEvent(((TrailerDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TrailerDetailTableRowDeleted != null)) {
                    this.TrailerDetailTableRowDeleted(this, new TrailerDetailTableRowChangeEvent(((TrailerDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TrailerDetailTableRowDeleting != null)) {
                    this.TrailerDetailTableRowDeleting(this, new TrailerDetailTableRowChangeEvent(((TrailerDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTrailerDetailTableRow(TrailerDetailTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TrailerDetailTableRow : DataRow {
            
            private TrailerDetailTableDataTable tableTrailerDetailTable;
            
            internal TrailerDetailTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTrailerDetailTable = ((TrailerDetailTableDataTable)(this.Table));
            }
            
            public int TrailerID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerDetailTable.TrailerIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.TrailerIDColumn] = value;
                }
            }
            
            public int DefinitionID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerDetailTable.DefinitionIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.DefinitionIDColumn] = value;
                }
            }
            
            public int CarrierID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerDetailTable.CarrierIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.CarrierIDColumn] = value;
                }
            }
            
            public int DriverID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerDetailTable.DriverIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.DriverIDColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableTrailerDetailTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.NumberColumn] = value;
                }
            }
            
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableTrailerDetailTable.StateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.StateColumn] = value;
                }
            }
            
            public string LicPlateNumber {
                get {
                    try {
                        return ((string)(this[this.tableTrailerDetailTable.LicPlateNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.LicPlateNumberColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableTrailerDetailTable.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.DescriptionColumn] = value;
                }
            }
            
            public bool IsStorage {
                get {
                    try {
                        return ((bool)(this[this.tableTrailerDetailTable.IsStorageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.IsStorageColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableTrailerDetailTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTrailerDetailTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableTrailerDetailTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableTrailerDetailTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerDetailTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsTrailerIDNull() {
                return this.IsNull(this.tableTrailerDetailTable.TrailerIDColumn);
            }
            
            public void SetTrailerIDNull() {
                this[this.tableTrailerDetailTable.TrailerIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDefinitionIDNull() {
                return this.IsNull(this.tableTrailerDetailTable.DefinitionIDColumn);
            }
            
            public void SetDefinitionIDNull() {
                this[this.tableTrailerDetailTable.DefinitionIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCarrierIDNull() {
                return this.IsNull(this.tableTrailerDetailTable.CarrierIDColumn);
            }
            
            public void SetCarrierIDNull() {
                this[this.tableTrailerDetailTable.CarrierIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDriverIDNull() {
                return this.IsNull(this.tableTrailerDetailTable.DriverIDColumn);
            }
            
            public void SetDriverIDNull() {
                this[this.tableTrailerDetailTable.DriverIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableTrailerDetailTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableTrailerDetailTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsStateNull() {
                return this.IsNull(this.tableTrailerDetailTable.StateColumn);
            }
            
            public void SetStateNull() {
                this[this.tableTrailerDetailTable.StateColumn] = System.Convert.DBNull;
            }
            
            public bool IsLicPlateNumberNull() {
                return this.IsNull(this.tableTrailerDetailTable.LicPlateNumberColumn);
            }
            
            public void SetLicPlateNumberNull() {
                this[this.tableTrailerDetailTable.LicPlateNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableTrailerDetailTable.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableTrailerDetailTable.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsStorageNull() {
                return this.IsNull(this.tableTrailerDetailTable.IsStorageColumn);
            }
            
            public void SetIsStorageNull() {
                this[this.tableTrailerDetailTable.IsStorageColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableTrailerDetailTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableTrailerDetailTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableTrailerDetailTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableTrailerDetailTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableTrailerDetailTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableTrailerDetailTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableTrailerDetailTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableTrailerDetailTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TrailerDetailTableRowChangeEvent : EventArgs {
            
            private TrailerDetailTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public TrailerDetailTableRowChangeEvent(TrailerDetailTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TrailerDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TrailerListTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnTrailerID;
            
            private DataColumn columnDefinitionID;
            
            private DataColumn columnDefinition;
            
            private DataColumn columnNumber;
            
            private DataColumn columnLicPlateNumber;
            
            private DataColumn columnIsStorage;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            private DataColumn columnCarrierID;
            
            private DataColumn columnCarrierName;
            
            internal TrailerListTableDataTable() : 
                    base("TrailerListTable") {
                this.InitClass();
            }
            
            internal TrailerListTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TrailerIDColumn {
                get {
                    return this.columnTrailerID;
                }
            }
            
            internal DataColumn DefinitionIDColumn {
                get {
                    return this.columnDefinitionID;
                }
            }
            
            internal DataColumn DefinitionColumn {
                get {
                    return this.columnDefinition;
                }
            }
            
            internal DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            internal DataColumn LicPlateNumberColumn {
                get {
                    return this.columnLicPlateNumber;
                }
            }
            
            internal DataColumn IsStorageColumn {
                get {
                    return this.columnIsStorage;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            internal DataColumn CarrierIDColumn {
                get {
                    return this.columnCarrierID;
                }
            }
            
            internal DataColumn CarrierNameColumn {
                get {
                    return this.columnCarrierName;
                }
            }
            
            public TrailerListTableRow this[int index] {
                get {
                    return ((TrailerListTableRow)(this.Rows[index]));
                }
            }
            
            public event TrailerListTableRowChangeEventHandler TrailerListTableRowChanged;
            
            public event TrailerListTableRowChangeEventHandler TrailerListTableRowChanging;
            
            public event TrailerListTableRowChangeEventHandler TrailerListTableRowDeleted;
            
            public event TrailerListTableRowChangeEventHandler TrailerListTableRowDeleting;
            
            public void AddTrailerListTableRow(TrailerListTableRow row) {
                this.Rows.Add(row);
            }
            
            public TrailerListTableRow AddTrailerListTableRow(int TrailerID, int DefinitionID, string Definition, string Number, string LicPlateNumber, bool IsStorage, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion, int CarrierID, string CarrierName) {
                TrailerListTableRow rowTrailerListTableRow = ((TrailerListTableRow)(this.NewRow()));
                rowTrailerListTableRow.ItemArray = new object[] {
                        TrailerID,
                        DefinitionID,
                        Definition,
                        Number,
                        LicPlateNumber,
                        IsStorage,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion,
                        CarrierID,
                        CarrierName};
                this.Rows.Add(rowTrailerListTableRow);
                return rowTrailerListTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TrailerListTableDataTable cln = ((TrailerListTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TrailerListTableDataTable();
            }
            
            internal void InitVars() {
                this.columnTrailerID = this.Columns["TrailerID"];
                this.columnDefinitionID = this.Columns["DefinitionID"];
                this.columnDefinition = this.Columns["Definition"];
                this.columnNumber = this.Columns["Number"];
                this.columnLicPlateNumber = this.Columns["LicPlateNumber"];
                this.columnIsStorage = this.Columns["IsStorage"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
                this.columnCarrierID = this.Columns["CarrierID"];
                this.columnCarrierName = this.Columns["CarrierName"];
            }
            
            private void InitClass() {
                this.columnTrailerID = new DataColumn("TrailerID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTrailerID);
                this.columnDefinitionID = new DataColumn("DefinitionID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDefinitionID);
                this.columnDefinition = new DataColumn("Definition", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDefinition);
                this.columnNumber = new DataColumn("Number", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumber);
                this.columnLicPlateNumber = new DataColumn("LicPlateNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLicPlateNumber);
                this.columnIsStorage = new DataColumn("IsStorage", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsStorage);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnCarrierID = new DataColumn("CarrierID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCarrierID);
                this.columnCarrierName = new DataColumn("CarrierName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCarrierName);
            }
            
            public TrailerListTableRow NewTrailerListTableRow() {
                return ((TrailerListTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TrailerListTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TrailerListTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TrailerListTableRowChanged != null)) {
                    this.TrailerListTableRowChanged(this, new TrailerListTableRowChangeEvent(((TrailerListTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TrailerListTableRowChanging != null)) {
                    this.TrailerListTableRowChanging(this, new TrailerListTableRowChangeEvent(((TrailerListTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TrailerListTableRowDeleted != null)) {
                    this.TrailerListTableRowDeleted(this, new TrailerListTableRowChangeEvent(((TrailerListTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TrailerListTableRowDeleting != null)) {
                    this.TrailerListTableRowDeleting(this, new TrailerListTableRowChangeEvent(((TrailerListTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTrailerListTableRow(TrailerListTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TrailerListTableRow : DataRow {
            
            private TrailerListTableDataTable tableTrailerListTable;
            
            internal TrailerListTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTrailerListTable = ((TrailerListTableDataTable)(this.Table));
            }
            
            public int TrailerID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerListTable.TrailerIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.TrailerIDColumn] = value;
                }
            }
            
            public int DefinitionID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerListTable.DefinitionIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.DefinitionIDColumn] = value;
                }
            }
            
            public string Definition {
                get {
                    try {
                        return ((string)(this[this.tableTrailerListTable.DefinitionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.DefinitionColumn] = value;
                }
            }
            
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableTrailerListTable.NumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.NumberColumn] = value;
                }
            }
            
            public string LicPlateNumber {
                get {
                    try {
                        return ((string)(this[this.tableTrailerListTable.LicPlateNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.LicPlateNumberColumn] = value;
                }
            }
            
            public bool IsStorage {
                get {
                    try {
                        return ((bool)(this[this.tableTrailerListTable.IsStorageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.IsStorageColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableTrailerListTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTrailerListTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableTrailerListTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableTrailerListTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.RowVersionColumn] = value;
                }
            }
            
            public int CarrierID {
                get {
                    try {
                        return ((int)(this[this.tableTrailerListTable.CarrierIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.CarrierIDColumn] = value;
                }
            }
            
            public string CarrierName {
                get {
                    try {
                        return ((string)(this[this.tableTrailerListTable.CarrierNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrailerListTable.CarrierNameColumn] = value;
                }
            }
            
            public bool IsTrailerIDNull() {
                return this.IsNull(this.tableTrailerListTable.TrailerIDColumn);
            }
            
            public void SetTrailerIDNull() {
                this[this.tableTrailerListTable.TrailerIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDefinitionIDNull() {
                return this.IsNull(this.tableTrailerListTable.DefinitionIDColumn);
            }
            
            public void SetDefinitionIDNull() {
                this[this.tableTrailerListTable.DefinitionIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDefinitionNull() {
                return this.IsNull(this.tableTrailerListTable.DefinitionColumn);
            }
            
            public void SetDefinitionNull() {
                this[this.tableTrailerListTable.DefinitionColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumberNull() {
                return this.IsNull(this.tableTrailerListTable.NumberColumn);
            }
            
            public void SetNumberNull() {
                this[this.tableTrailerListTable.NumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsLicPlateNumberNull() {
                return this.IsNull(this.tableTrailerListTable.LicPlateNumberColumn);
            }
            
            public void SetLicPlateNumberNull() {
                this[this.tableTrailerListTable.LicPlateNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsStorageNull() {
                return this.IsNull(this.tableTrailerListTable.IsStorageColumn);
            }
            
            public void SetIsStorageNull() {
                this[this.tableTrailerListTable.IsStorageColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableTrailerListTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableTrailerListTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableTrailerListTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableTrailerListTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableTrailerListTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableTrailerListTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableTrailerListTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableTrailerListTable.RowVersionColumn] = System.Convert.DBNull;
            }
            
            public bool IsCarrierIDNull() {
                return this.IsNull(this.tableTrailerListTable.CarrierIDColumn);
            }
            
            public void SetCarrierIDNull() {
                this[this.tableTrailerListTable.CarrierIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCarrierNameNull() {
                return this.IsNull(this.tableTrailerListTable.CarrierNameColumn);
            }
            
            public void SetCarrierNameNull() {
                this[this.tableTrailerListTable.CarrierNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TrailerListTableRowChangeEvent : EventArgs {
            
            private TrailerListTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public TrailerListTableRowChangeEvent(TrailerListTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TrailerListTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
