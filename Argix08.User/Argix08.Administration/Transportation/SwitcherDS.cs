//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Transportation {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class SwitcherDS : DataSet {
        
        private SwitcherDetailTableDataTable tableSwitcherDetailTable;
        
        private SwitcherViewTableDataTable tableSwitcherViewTable;
        
        public SwitcherDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected SwitcherDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["SwitcherDetailTable"] != null)) {
                    this.Tables.Add(new SwitcherDetailTableDataTable(ds.Tables["SwitcherDetailTable"]));
                }
                if ((ds.Tables["SwitcherViewTable"] != null)) {
                    this.Tables.Add(new SwitcherViewTableDataTable(ds.Tables["SwitcherViewTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SwitcherDetailTableDataTable SwitcherDetailTable {
            get {
                return this.tableSwitcherDetailTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SwitcherViewTableDataTable SwitcherViewTable {
            get {
                return this.tableSwitcherViewTable;
            }
        }
        
        public override DataSet Clone() {
            SwitcherDS cln = ((SwitcherDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["SwitcherDetailTable"] != null)) {
                this.Tables.Add(new SwitcherDetailTableDataTable(ds.Tables["SwitcherDetailTable"]));
            }
            if ((ds.Tables["SwitcherViewTable"] != null)) {
                this.Tables.Add(new SwitcherViewTableDataTable(ds.Tables["SwitcherViewTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableSwitcherDetailTable = ((SwitcherDetailTableDataTable)(this.Tables["SwitcherDetailTable"]));
            if ((this.tableSwitcherDetailTable != null)) {
                this.tableSwitcherDetailTable.InitVars();
            }
            this.tableSwitcherViewTable = ((SwitcherViewTableDataTable)(this.Tables["SwitcherViewTable"]));
            if ((this.tableSwitcherViewTable != null)) {
                this.tableSwitcherViewTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "SwitcherDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/SwitcherDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableSwitcherDetailTable = new SwitcherDetailTableDataTable();
            this.Tables.Add(this.tableSwitcherDetailTable);
            this.tableSwitcherViewTable = new SwitcherViewTableDataTable();
            this.Tables.Add(this.tableSwitcherViewTable);
        }
        
        private bool ShouldSerializeSwitcherDetailTable() {
            return false;
        }
        
        private bool ShouldSerializeSwitcherViewTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void SwitcherDetailTableRowChangeEventHandler(object sender, SwitcherDetailTableRowChangeEvent e);
        
        public delegate void SwitcherViewTableRowChangeEventHandler(object sender, SwitcherViewTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SwitcherDetailTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSwitcherID;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnLastName;
            
            private DataColumn columnFirstName;
            
            private DataColumn columnPhone;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal SwitcherDetailTableDataTable() : 
                    base("SwitcherDetailTable") {
                this.InitClass();
            }
            
            internal SwitcherDetailTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SwitcherIDColumn {
                get {
                    return this.columnSwitcherID;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            internal DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            internal DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public SwitcherDetailTableRow this[int index] {
                get {
                    return ((SwitcherDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event SwitcherDetailTableRowChangeEventHandler SwitcherDetailTableRowChanged;
            
            public event SwitcherDetailTableRowChangeEventHandler SwitcherDetailTableRowChanging;
            
            public event SwitcherDetailTableRowChangeEventHandler SwitcherDetailTableRowDeleted;
            
            public event SwitcherDetailTableRowChangeEventHandler SwitcherDetailTableRowDeleting;
            
            public void AddSwitcherDetailTableRow(SwitcherDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            public SwitcherDetailTableRow AddSwitcherDetailTableRow(int SwitcherID, int TerminalID, string LastName, string FirstName, string Phone, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                SwitcherDetailTableRow rowSwitcherDetailTableRow = ((SwitcherDetailTableRow)(this.NewRow()));
                rowSwitcherDetailTableRow.ItemArray = new object[] {
                        SwitcherID,
                        TerminalID,
                        LastName,
                        FirstName,
                        Phone,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowSwitcherDetailTableRow);
                return rowSwitcherDetailTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                SwitcherDetailTableDataTable cln = ((SwitcherDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new SwitcherDetailTableDataTable();
            }
            
            internal void InitVars() {
                this.columnSwitcherID = this.Columns["SwitcherID"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnLastName = this.Columns["LastName"];
                this.columnFirstName = this.Columns["FirstName"];
                this.columnPhone = this.Columns["Phone"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnSwitcherID = new DataColumn("SwitcherID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitcherID);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnLastName = new DataColumn("LastName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastName);
                this.columnFirstName = new DataColumn("FirstName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFirstName);
                this.columnPhone = new DataColumn("Phone", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhone);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnTerminalID.AllowDBNull = false;
                this.columnLastName.AllowDBNull = false;
                this.columnFirstName.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnLastUpdated.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
            }
            
            public SwitcherDetailTableRow NewSwitcherDetailTableRow() {
                return ((SwitcherDetailTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new SwitcherDetailTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(SwitcherDetailTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SwitcherDetailTableRowChanged != null)) {
                    this.SwitcherDetailTableRowChanged(this, new SwitcherDetailTableRowChangeEvent(((SwitcherDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SwitcherDetailTableRowChanging != null)) {
                    this.SwitcherDetailTableRowChanging(this, new SwitcherDetailTableRowChangeEvent(((SwitcherDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SwitcherDetailTableRowDeleted != null)) {
                    this.SwitcherDetailTableRowDeleted(this, new SwitcherDetailTableRowChangeEvent(((SwitcherDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SwitcherDetailTableRowDeleting != null)) {
                    this.SwitcherDetailTableRowDeleting(this, new SwitcherDetailTableRowChangeEvent(((SwitcherDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveSwitcherDetailTableRow(SwitcherDetailTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SwitcherDetailTableRow : DataRow {
            
            private SwitcherDetailTableDataTable tableSwitcherDetailTable;
            
            internal SwitcherDetailTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableSwitcherDetailTable = ((SwitcherDetailTableDataTable)(this.Table));
            }
            
            public int SwitcherID {
                get {
                    try {
                        return ((int)(this[this.tableSwitcherDetailTable.SwitcherIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherDetailTable.SwitcherIDColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    return ((int)(this[this.tableSwitcherDetailTable.TerminalIDColumn]));
                }
                set {
                    this[this.tableSwitcherDetailTable.TerminalIDColumn] = value;
                }
            }
            
            public string LastName {
                get {
                    return ((string)(this[this.tableSwitcherDetailTable.LastNameColumn]));
                }
                set {
                    this[this.tableSwitcherDetailTable.LastNameColumn] = value;
                }
            }
            
            public string FirstName {
                get {
                    return ((string)(this[this.tableSwitcherDetailTable.FirstNameColumn]));
                }
                set {
                    this[this.tableSwitcherDetailTable.FirstNameColumn] = value;
                }
            }
            
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherDetailTable.PhoneColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherDetailTable.PhoneColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableSwitcherDetailTable.IsActiveColumn]));
                }
                set {
                    this[this.tableSwitcherDetailTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    return ((System.DateTime)(this[this.tableSwitcherDetailTable.LastUpdatedColumn]));
                }
                set {
                    this[this.tableSwitcherDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    return ((string)(this[this.tableSwitcherDetailTable.UserIDColumn]));
                }
                set {
                    this[this.tableSwitcherDetailTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherDetailTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherDetailTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsSwitcherIDNull() {
                return this.IsNull(this.tableSwitcherDetailTable.SwitcherIDColumn);
            }
            
            public void SetSwitcherIDNull() {
                this[this.tableSwitcherDetailTable.SwitcherIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhoneNull() {
                return this.IsNull(this.tableSwitcherDetailTable.PhoneColumn);
            }
            
            public void SetPhoneNull() {
                this[this.tableSwitcherDetailTable.PhoneColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableSwitcherDetailTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableSwitcherDetailTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SwitcherDetailTableRowChangeEvent : EventArgs {
            
            private SwitcherDetailTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public SwitcherDetailTableRowChangeEvent(SwitcherDetailTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public SwitcherDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SwitcherViewTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSwitcherID;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnTerminal;
            
            private DataColumn columnLastName;
            
            private DataColumn columnFirstName;
            
            private DataColumn columnFullName;
            
            private DataColumn columnPhone;
            
            private DataColumn columnIsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal SwitcherViewTableDataTable() : 
                    base("SwitcherViewTable") {
                this.InitClass();
            }
            
            internal SwitcherViewTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SwitcherIDColumn {
                get {
                    return this.columnSwitcherID;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn TerminalColumn {
                get {
                    return this.columnTerminal;
                }
            }
            
            internal DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            internal DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            internal DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            internal DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            internal DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public SwitcherViewTableRow this[int index] {
                get {
                    return ((SwitcherViewTableRow)(this.Rows[index]));
                }
            }
            
            public event SwitcherViewTableRowChangeEventHandler SwitcherViewTableRowChanged;
            
            public event SwitcherViewTableRowChangeEventHandler SwitcherViewTableRowChanging;
            
            public event SwitcherViewTableRowChangeEventHandler SwitcherViewTableRowDeleted;
            
            public event SwitcherViewTableRowChangeEventHandler SwitcherViewTableRowDeleting;
            
            public void AddSwitcherViewTableRow(SwitcherViewTableRow row) {
                this.Rows.Add(row);
            }
            
            public SwitcherViewTableRow AddSwitcherViewTableRow(int SwitcherID, int TerminalID, string Terminal, string LastName, string FirstName, string FullName, string Phone, bool IsActive, System.DateTime LastUpdated, string UserID, string RowVersion) {
                SwitcherViewTableRow rowSwitcherViewTableRow = ((SwitcherViewTableRow)(this.NewRow()));
                rowSwitcherViewTableRow.ItemArray = new object[] {
                        SwitcherID,
                        TerminalID,
                        Terminal,
                        LastName,
                        FirstName,
                        FullName,
                        Phone,
                        IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowSwitcherViewTableRow);
                return rowSwitcherViewTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                SwitcherViewTableDataTable cln = ((SwitcherViewTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new SwitcherViewTableDataTable();
            }
            
            internal void InitVars() {
                this.columnSwitcherID = this.Columns["SwitcherID"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnTerminal = this.Columns["Terminal"];
                this.columnLastName = this.Columns["LastName"];
                this.columnFirstName = this.Columns["FirstName"];
                this.columnFullName = this.Columns["FullName"];
                this.columnPhone = this.Columns["Phone"];
                this.columnIsActive = this.Columns["IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnSwitcherID = new DataColumn("SwitcherID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSwitcherID);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnTerminal = new DataColumn("Terminal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminal);
                this.columnLastName = new DataColumn("LastName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastName);
                this.columnFirstName = new DataColumn("FirstName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFirstName);
                this.columnFullName = new DataColumn("FullName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFullName);
                this.columnPhone = new DataColumn("Phone", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhone);
                this.columnIsActive = new DataColumn("IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
            }
            
            public SwitcherViewTableRow NewSwitcherViewTableRow() {
                return ((SwitcherViewTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new SwitcherViewTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(SwitcherViewTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SwitcherViewTableRowChanged != null)) {
                    this.SwitcherViewTableRowChanged(this, new SwitcherViewTableRowChangeEvent(((SwitcherViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SwitcherViewTableRowChanging != null)) {
                    this.SwitcherViewTableRowChanging(this, new SwitcherViewTableRowChangeEvent(((SwitcherViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SwitcherViewTableRowDeleted != null)) {
                    this.SwitcherViewTableRowDeleted(this, new SwitcherViewTableRowChangeEvent(((SwitcherViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SwitcherViewTableRowDeleting != null)) {
                    this.SwitcherViewTableRowDeleting(this, new SwitcherViewTableRowChangeEvent(((SwitcherViewTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveSwitcherViewTableRow(SwitcherViewTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SwitcherViewTableRow : DataRow {
            
            private SwitcherViewTableDataTable tableSwitcherViewTable;
            
            internal SwitcherViewTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableSwitcherViewTable = ((SwitcherViewTableDataTable)(this.Table));
            }
            
            public int SwitcherID {
                get {
                    try {
                        return ((int)(this[this.tableSwitcherViewTable.SwitcherIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.SwitcherIDColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    try {
                        return ((int)(this[this.tableSwitcherViewTable.TerminalIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.TerminalIDColumn] = value;
                }
            }
            
            public string Terminal {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.TerminalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.TerminalColumn] = value;
                }
            }
            
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.LastNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.LastNameColumn] = value;
                }
            }
            
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.FirstNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.FirstNameColumn] = value;
                }
            }
            
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.FullNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.FullNameColumn] = value;
                }
            }
            
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.PhoneColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.PhoneColumn] = value;
                }
            }
            
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableSwitcherViewTable.IsActiveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSwitcherViewTable.LastUpdatedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.UserIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableSwitcherViewTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSwitcherViewTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsSwitcherIDNull() {
                return this.IsNull(this.tableSwitcherViewTable.SwitcherIDColumn);
            }
            
            public void SetSwitcherIDNull() {
                this[this.tableSwitcherViewTable.SwitcherIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableSwitcherViewTable.TerminalIDColumn);
            }
            
            public void SetTerminalIDNull() {
                this[this.tableSwitcherViewTable.TerminalIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTerminalNull() {
                return this.IsNull(this.tableSwitcherViewTable.TerminalColumn);
            }
            
            public void SetTerminalNull() {
                this[this.tableSwitcherViewTable.TerminalColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastNameNull() {
                return this.IsNull(this.tableSwitcherViewTable.LastNameColumn);
            }
            
            public void SetLastNameNull() {
                this[this.tableSwitcherViewTable.LastNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableSwitcherViewTable.FirstNameColumn);
            }
            
            public void SetFirstNameNull() {
                this[this.tableSwitcherViewTable.FirstNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsFullNameNull() {
                return this.IsNull(this.tableSwitcherViewTable.FullNameColumn);
            }
            
            public void SetFullNameNull() {
                this[this.tableSwitcherViewTable.FullNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhoneNull() {
                return this.IsNull(this.tableSwitcherViewTable.PhoneColumn);
            }
            
            public void SetPhoneNull() {
                this[this.tableSwitcherViewTable.PhoneColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableSwitcherViewTable.IsActiveColumn);
            }
            
            public void SetIsActiveNull() {
                this[this.tableSwitcherViewTable.IsActiveColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableSwitcherViewTable.LastUpdatedColumn);
            }
            
            public void SetLastUpdatedNull() {
                this[this.tableSwitcherViewTable.LastUpdatedColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserIDNull() {
                return this.IsNull(this.tableSwitcherViewTable.UserIDColumn);
            }
            
            public void SetUserIDNull() {
                this[this.tableSwitcherViewTable.UserIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableSwitcherViewTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableSwitcherViewTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SwitcherViewTableRowChangeEvent : EventArgs {
            
            private SwitcherViewTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public SwitcherViewTableRowChangeEvent(SwitcherViewTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public SwitcherViewTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
