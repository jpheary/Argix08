//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Tsort.Freight {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ShiftDS : DataSet {
        
        private ShiftViewTableDataTable tableShiftViewTable;
        
        private ShiftDetailTableDataTable tableShiftDetailTable;
        
        public ShiftDS() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ShiftDS(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ShiftViewTable"] != null)) {
                    this.Tables.Add(new ShiftViewTableDataTable(ds.Tables["ShiftViewTable"]));
                }
                if ((ds.Tables["ShiftDetailTable"] != null)) {
                    this.Tables.Add(new ShiftDetailTableDataTable(ds.Tables["ShiftDetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShiftViewTableDataTable ShiftViewTable {
            get {
                return this.tableShiftViewTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShiftDetailTableDataTable ShiftDetailTable {
            get {
                return this.tableShiftDetailTable;
            }
        }
        
        public override DataSet Clone() {
            ShiftDS cln = ((ShiftDS)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ShiftViewTable"] != null)) {
                this.Tables.Add(new ShiftViewTableDataTable(ds.Tables["ShiftViewTable"]));
            }
            if ((ds.Tables["ShiftDetailTable"] != null)) {
                this.Tables.Add(new ShiftDetailTableDataTable(ds.Tables["ShiftDetailTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableShiftViewTable = ((ShiftViewTableDataTable)(this.Tables["ShiftViewTable"]));
            if ((this.tableShiftViewTable != null)) {
                this.tableShiftViewTable.InitVars();
            }
            this.tableShiftDetailTable = ((ShiftDetailTableDataTable)(this.Tables["ShiftDetailTable"]));
            if ((this.tableShiftDetailTable != null)) {
                this.tableShiftDetailTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ShiftDS";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/ShiftDS.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableShiftViewTable = new ShiftViewTableDataTable();
            this.Tables.Add(this.tableShiftViewTable);
            this.tableShiftDetailTable = new ShiftDetailTableDataTable();
            this.Tables.Add(this.tableShiftDetailTable);
        }
        
        private bool ShouldSerializeShiftViewTable() {
            return false;
        }
        
        private bool ShouldSerializeShiftDetailTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ShiftViewTableRowChangeEventHandler(object sender, ShiftViewTableRowChangeEvent e);
        
        public delegate void ShiftDetailTableRowChangeEventHandler(object sender, ShiftDetailTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShiftViewTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDayOfTheWeek;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnTerminal;
            
            private DataColumn columnShift1Number;
            
            private DataColumn columnShift1StartTime;
            
            private DataColumn columnShift1EndTime;
            
            private DataColumn columnShift1BreakDuration;
            
            private DataColumn columnShift1IsActive;
            
            private DataColumn columnShift2Number;
            
            private DataColumn columnShift2StartTime;
            
            private DataColumn columnShift2EndTime;
            
            private DataColumn columnShift2BreakDuration;
            
            private DataColumn columnShift2IsActive;
            
            private DataColumn columnShift3Number;
            
            private DataColumn columnShift3StartTime;
            
            private DataColumn columnShift3EndTime;
            
            private DataColumn columnShift3BreakDuration;
            
            private DataColumn columnShift3IsActive;
            
            internal ShiftViewTableDataTable() : 
                    base("ShiftViewTable") {
                this.InitClass();
            }
            
            internal ShiftViewTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DayOfTheWeekColumn {
                get {
                    return this.columnDayOfTheWeek;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn TerminalColumn {
                get {
                    return this.columnTerminal;
                }
            }
            
            internal DataColumn Shift1NumberColumn {
                get {
                    return this.columnShift1Number;
                }
            }
            
            internal DataColumn Shift1StartTimeColumn {
                get {
                    return this.columnShift1StartTime;
                }
            }
            
            internal DataColumn Shift1EndTimeColumn {
                get {
                    return this.columnShift1EndTime;
                }
            }
            
            internal DataColumn Shift1BreakDurationColumn {
                get {
                    return this.columnShift1BreakDuration;
                }
            }
            
            internal DataColumn Shift1IsActiveColumn {
                get {
                    return this.columnShift1IsActive;
                }
            }
            
            internal DataColumn Shift2NumberColumn {
                get {
                    return this.columnShift2Number;
                }
            }
            
            internal DataColumn Shift2StartTimeColumn {
                get {
                    return this.columnShift2StartTime;
                }
            }
            
            internal DataColumn Shift2EndTimeColumn {
                get {
                    return this.columnShift2EndTime;
                }
            }
            
            internal DataColumn Shift2BreakDurationColumn {
                get {
                    return this.columnShift2BreakDuration;
                }
            }
            
            internal DataColumn Shift2IsActiveColumn {
                get {
                    return this.columnShift2IsActive;
                }
            }
            
            internal DataColumn Shift3NumberColumn {
                get {
                    return this.columnShift3Number;
                }
            }
            
            internal DataColumn Shift3StartTimeColumn {
                get {
                    return this.columnShift3StartTime;
                }
            }
            
            internal DataColumn Shift3EndTimeColumn {
                get {
                    return this.columnShift3EndTime;
                }
            }
            
            internal DataColumn Shift3BreakDurationColumn {
                get {
                    return this.columnShift3BreakDuration;
                }
            }
            
            internal DataColumn Shift3IsActiveColumn {
                get {
                    return this.columnShift3IsActive;
                }
            }
            
            public ShiftViewTableRow this[int index] {
                get {
                    return ((ShiftViewTableRow)(this.Rows[index]));
                }
            }
            
            public event ShiftViewTableRowChangeEventHandler ShiftViewTableRowChanged;
            
            public event ShiftViewTableRowChangeEventHandler ShiftViewTableRowChanging;
            
            public event ShiftViewTableRowChangeEventHandler ShiftViewTableRowDeleted;
            
            public event ShiftViewTableRowChangeEventHandler ShiftViewTableRowDeleting;
            
            public void AddShiftViewTableRow(ShiftViewTableRow row) {
                this.Rows.Add(row);
            }
            
            public ShiftViewTableRow AddShiftViewTableRow(
                        string DayOfTheWeek, 
                        int TerminalID, 
                        string Terminal, 
                        System.Byte Shift1Number, 
                        System.DateTime Shift1StartTime, 
                        System.DateTime Shift1EndTime, 
                        int Shift1BreakDuration, 
                        bool Shift1IsActive, 
                        System.Byte Shift2Number, 
                        System.DateTime Shift2StartTime, 
                        System.DateTime Shift2EndTime, 
                        int Shift2BreakDuration, 
                        bool Shift2IsActive, 
                        System.Byte Shift3Number, 
                        System.DateTime Shift3StartTime, 
                        System.DateTime Shift3EndTime, 
                        int Shift3BreakDuration, 
                        bool Shift3IsActive) {
                ShiftViewTableRow rowShiftViewTableRow = ((ShiftViewTableRow)(this.NewRow()));
                rowShiftViewTableRow.ItemArray = new object[] {
                        DayOfTheWeek,
                        TerminalID,
                        Terminal,
                        Shift1Number,
                        Shift1StartTime,
                        Shift1EndTime,
                        Shift1BreakDuration,
                        Shift1IsActive,
                        Shift2Number,
                        Shift2StartTime,
                        Shift2EndTime,
                        Shift2BreakDuration,
                        Shift2IsActive,
                        Shift3Number,
                        Shift3StartTime,
                        Shift3EndTime,
                        Shift3BreakDuration,
                        Shift3IsActive};
                this.Rows.Add(rowShiftViewTableRow);
                return rowShiftViewTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ShiftViewTableDataTable cln = ((ShiftViewTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ShiftViewTableDataTable();
            }
            
            internal void InitVars() {
                this.columnDayOfTheWeek = this.Columns["DayOfTheWeek"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnTerminal = this.Columns["Terminal"];
                this.columnShift1Number = this.Columns["Shift1Number"];
                this.columnShift1StartTime = this.Columns["Shift1StartTime"];
                this.columnShift1EndTime = this.Columns["Shift1EndTime"];
                this.columnShift1BreakDuration = this.Columns["Shift1BreakDuration"];
                this.columnShift1IsActive = this.Columns["Shift1IsActive"];
                this.columnShift2Number = this.Columns["Shift2Number"];
                this.columnShift2StartTime = this.Columns["Shift2StartTime"];
                this.columnShift2EndTime = this.Columns["Shift2EndTime"];
                this.columnShift2BreakDuration = this.Columns["Shift2BreakDuration"];
                this.columnShift2IsActive = this.Columns["Shift2IsActive"];
                this.columnShift3Number = this.Columns["Shift3Number"];
                this.columnShift3StartTime = this.Columns["Shift3StartTime"];
                this.columnShift3EndTime = this.Columns["Shift3EndTime"];
                this.columnShift3BreakDuration = this.Columns["Shift3BreakDuration"];
                this.columnShift3IsActive = this.Columns["Shift3IsActive"];
            }
            
            private void InitClass() {
                this.columnDayOfTheWeek = new DataColumn("DayOfTheWeek", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDayOfTheWeek);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnTerminal = new DataColumn("Terminal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminal);
                this.columnShift1Number = new DataColumn("Shift1Number", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1Number);
                this.columnShift1StartTime = new DataColumn("Shift1StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1StartTime);
                this.columnShift1EndTime = new DataColumn("Shift1EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1EndTime);
                this.columnShift1BreakDuration = new DataColumn("Shift1BreakDuration", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1BreakDuration);
                this.columnShift1IsActive = new DataColumn("Shift1IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1IsActive);
                this.columnShift2Number = new DataColumn("Shift2Number", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2Number);
                this.columnShift2StartTime = new DataColumn("Shift2StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2StartTime);
                this.columnShift2EndTime = new DataColumn("Shift2EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2EndTime);
                this.columnShift2BreakDuration = new DataColumn("Shift2BreakDuration", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2BreakDuration);
                this.columnShift2IsActive = new DataColumn("Shift2IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2IsActive);
                this.columnShift3Number = new DataColumn("Shift3Number", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3Number);
                this.columnShift3StartTime = new DataColumn("Shift3StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3StartTime);
                this.columnShift3EndTime = new DataColumn("Shift3EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3EndTime);
                this.columnShift3BreakDuration = new DataColumn("Shift3BreakDuration", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3BreakDuration);
                this.columnShift3IsActive = new DataColumn("Shift3IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3IsActive);
                this.columnDayOfTheWeek.AllowDBNull = false;
                this.columnTerminalID.AllowDBNull = false;
                this.columnTerminal.AllowDBNull = false;
                this.columnShift1Number.AllowDBNull = false;
                this.columnShift1StartTime.AllowDBNull = false;
                this.columnShift1EndTime.AllowDBNull = false;
                this.columnShift1BreakDuration.AllowDBNull = false;
                this.columnShift1IsActive.AllowDBNull = false;
                this.columnShift2Number.AllowDBNull = false;
                this.columnShift2StartTime.AllowDBNull = false;
                this.columnShift2EndTime.AllowDBNull = false;
                this.columnShift2BreakDuration.AllowDBNull = false;
                this.columnShift2IsActive.AllowDBNull = false;
                this.columnShift3Number.AllowDBNull = false;
                this.columnShift3StartTime.AllowDBNull = false;
                this.columnShift3EndTime.AllowDBNull = false;
                this.columnShift3BreakDuration.AllowDBNull = false;
                this.columnShift3IsActive.AllowDBNull = false;
            }
            
            public ShiftViewTableRow NewShiftViewTableRow() {
                return ((ShiftViewTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ShiftViewTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ShiftViewTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShiftViewTableRowChanged != null)) {
                    this.ShiftViewTableRowChanged(this, new ShiftViewTableRowChangeEvent(((ShiftViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShiftViewTableRowChanging != null)) {
                    this.ShiftViewTableRowChanging(this, new ShiftViewTableRowChangeEvent(((ShiftViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShiftViewTableRowDeleted != null)) {
                    this.ShiftViewTableRowDeleted(this, new ShiftViewTableRowChangeEvent(((ShiftViewTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShiftViewTableRowDeleting != null)) {
                    this.ShiftViewTableRowDeleting(this, new ShiftViewTableRowChangeEvent(((ShiftViewTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveShiftViewTableRow(ShiftViewTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShiftViewTableRow : DataRow {
            
            private ShiftViewTableDataTable tableShiftViewTable;
            
            internal ShiftViewTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableShiftViewTable = ((ShiftViewTableDataTable)(this.Table));
            }
            
            public string DayOfTheWeek {
                get {
                    return ((string)(this[this.tableShiftViewTable.DayOfTheWeekColumn]));
                }
                set {
                    this[this.tableShiftViewTable.DayOfTheWeekColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    return ((int)(this[this.tableShiftViewTable.TerminalIDColumn]));
                }
                set {
                    this[this.tableShiftViewTable.TerminalIDColumn] = value;
                }
            }
            
            public string Terminal {
                get {
                    return ((string)(this[this.tableShiftViewTable.TerminalColumn]));
                }
                set {
                    this[this.tableShiftViewTable.TerminalColumn] = value;
                }
            }
            
            public System.Byte Shift1Number {
                get {
                    return ((System.Byte)(this[this.tableShiftViewTable.Shift1NumberColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift1NumberColumn] = value;
                }
            }
            
            public System.DateTime Shift1StartTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftViewTable.Shift1StartTimeColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift1StartTimeColumn] = value;
                }
            }
            
            public System.DateTime Shift1EndTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftViewTable.Shift1EndTimeColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift1EndTimeColumn] = value;
                }
            }
            
            public int Shift1BreakDuration {
                get {
                    return ((int)(this[this.tableShiftViewTable.Shift1BreakDurationColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift1BreakDurationColumn] = value;
                }
            }
            
            public bool Shift1IsActive {
                get {
                    return ((bool)(this[this.tableShiftViewTable.Shift1IsActiveColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift1IsActiveColumn] = value;
                }
            }
            
            public System.Byte Shift2Number {
                get {
                    return ((System.Byte)(this[this.tableShiftViewTable.Shift2NumberColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift2NumberColumn] = value;
                }
            }
            
            public System.DateTime Shift2StartTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftViewTable.Shift2StartTimeColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift2StartTimeColumn] = value;
                }
            }
            
            public System.DateTime Shift2EndTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftViewTable.Shift2EndTimeColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift2EndTimeColumn] = value;
                }
            }
            
            public int Shift2BreakDuration {
                get {
                    return ((int)(this[this.tableShiftViewTable.Shift2BreakDurationColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift2BreakDurationColumn] = value;
                }
            }
            
            public bool Shift2IsActive {
                get {
                    return ((bool)(this[this.tableShiftViewTable.Shift2IsActiveColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift2IsActiveColumn] = value;
                }
            }
            
            public System.Byte Shift3Number {
                get {
                    return ((System.Byte)(this[this.tableShiftViewTable.Shift3NumberColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift3NumberColumn] = value;
                }
            }
            
            public System.DateTime Shift3StartTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftViewTable.Shift3StartTimeColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift3StartTimeColumn] = value;
                }
            }
            
            public System.DateTime Shift3EndTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftViewTable.Shift3EndTimeColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift3EndTimeColumn] = value;
                }
            }
            
            public int Shift3BreakDuration {
                get {
                    return ((int)(this[this.tableShiftViewTable.Shift3BreakDurationColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift3BreakDurationColumn] = value;
                }
            }
            
            public bool Shift3IsActive {
                get {
                    return ((bool)(this[this.tableShiftViewTable.Shift3IsActiveColumn]));
                }
                set {
                    this[this.tableShiftViewTable.Shift3IsActiveColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShiftViewTableRowChangeEvent : EventArgs {
            
            private ShiftViewTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public ShiftViewTableRowChangeEvent(ShiftViewTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ShiftViewTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShiftDetailTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDayOfTheWeek;
            
            private DataColumn columnTerminalID;
            
            private DataColumn columnTerminal;
            
            private DataColumn columnShift1ID;
            
            private DataColumn columnShift1Number;
            
            private DataColumn columnShift1StartTime;
            
            private DataColumn columnShift1EndTime;
            
            private DataColumn columnShift1BreakDuration;
            
            private DataColumn columnShift1IsActive;
            
            private DataColumn columnShift2ID;
            
            private DataColumn columnShift2Number;
            
            private DataColumn columnShift2StartTime;
            
            private DataColumn columnShift2EndTime;
            
            private DataColumn columnShift2BreakDuration;
            
            private DataColumn columnShift2IsActive;
            
            private DataColumn columnShift3ID;
            
            private DataColumn columnShift3Number;
            
            private DataColumn columnShift3StartTime;
            
            private DataColumn columnShift3EndTime;
            
            private DataColumn columnShift3BreakDuration;
            
            private DataColumn columnShift3IsActive;
            
            private DataColumn columnLastUpdated;
            
            private DataColumn columnUserID;
            
            private DataColumn columnRowVersion;
            
            internal ShiftDetailTableDataTable() : 
                    base("ShiftDetailTable") {
                this.InitClass();
            }
            
            internal ShiftDetailTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DayOfTheWeekColumn {
                get {
                    return this.columnDayOfTheWeek;
                }
            }
            
            internal DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            internal DataColumn TerminalColumn {
                get {
                    return this.columnTerminal;
                }
            }
            
            internal DataColumn Shift1IDColumn {
                get {
                    return this.columnShift1ID;
                }
            }
            
            internal DataColumn Shift1NumberColumn {
                get {
                    return this.columnShift1Number;
                }
            }
            
            internal DataColumn Shift1StartTimeColumn {
                get {
                    return this.columnShift1StartTime;
                }
            }
            
            internal DataColumn Shift1EndTimeColumn {
                get {
                    return this.columnShift1EndTime;
                }
            }
            
            internal DataColumn Shift1BreakDurationColumn {
                get {
                    return this.columnShift1BreakDuration;
                }
            }
            
            internal DataColumn Shift1IsActiveColumn {
                get {
                    return this.columnShift1IsActive;
                }
            }
            
            internal DataColumn Shift2IDColumn {
                get {
                    return this.columnShift2ID;
                }
            }
            
            internal DataColumn Shift2NumberColumn {
                get {
                    return this.columnShift2Number;
                }
            }
            
            internal DataColumn Shift2StartTimeColumn {
                get {
                    return this.columnShift2StartTime;
                }
            }
            
            internal DataColumn Shift2EndTimeColumn {
                get {
                    return this.columnShift2EndTime;
                }
            }
            
            internal DataColumn Shift2BreakDurationColumn {
                get {
                    return this.columnShift2BreakDuration;
                }
            }
            
            internal DataColumn Shift2IsActiveColumn {
                get {
                    return this.columnShift2IsActive;
                }
            }
            
            internal DataColumn Shift3IDColumn {
                get {
                    return this.columnShift3ID;
                }
            }
            
            internal DataColumn Shift3NumberColumn {
                get {
                    return this.columnShift3Number;
                }
            }
            
            internal DataColumn Shift3StartTimeColumn {
                get {
                    return this.columnShift3StartTime;
                }
            }
            
            internal DataColumn Shift3EndTimeColumn {
                get {
                    return this.columnShift3EndTime;
                }
            }
            
            internal DataColumn Shift3BreakDurationColumn {
                get {
                    return this.columnShift3BreakDuration;
                }
            }
            
            internal DataColumn Shift3IsActiveColumn {
                get {
                    return this.columnShift3IsActive;
                }
            }
            
            internal DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            internal DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            internal DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            public ShiftDetailTableRow this[int index] {
                get {
                    return ((ShiftDetailTableRow)(this.Rows[index]));
                }
            }
            
            public event ShiftDetailTableRowChangeEventHandler ShiftDetailTableRowChanged;
            
            public event ShiftDetailTableRowChangeEventHandler ShiftDetailTableRowChanging;
            
            public event ShiftDetailTableRowChangeEventHandler ShiftDetailTableRowDeleted;
            
            public event ShiftDetailTableRowChangeEventHandler ShiftDetailTableRowDeleting;
            
            public void AddShiftDetailTableRow(ShiftDetailTableRow row) {
                this.Rows.Add(row);
            }
            
            public ShiftDetailTableRow AddShiftDetailTableRow(
                        string DayOfTheWeek, 
                        int TerminalID, 
                        string Terminal, 
                        int Shift1ID, 
                        System.Byte Shift1Number, 
                        System.DateTime Shift1StartTime, 
                        System.DateTime Shift1EndTime, 
                        int Shift1BreakDuration, 
                        bool Shift1IsActive, 
                        int Shift2ID, 
                        System.Byte Shift2Number, 
                        System.DateTime Shift2StartTime, 
                        System.DateTime Shift2EndTime, 
                        int Shift2BreakDuration, 
                        bool Shift2IsActive, 
                        int Shift3ID, 
                        System.Byte Shift3Number, 
                        System.DateTime Shift3StartTime, 
                        System.DateTime Shift3EndTime, 
                        int Shift3BreakDuration, 
                        bool Shift3IsActive, 
                        System.DateTime LastUpdated, 
                        string UserID, 
                        string RowVersion) {
                ShiftDetailTableRow rowShiftDetailTableRow = ((ShiftDetailTableRow)(this.NewRow()));
                rowShiftDetailTableRow.ItemArray = new object[] {
                        DayOfTheWeek,
                        TerminalID,
                        Terminal,
                        Shift1ID,
                        Shift1Number,
                        Shift1StartTime,
                        Shift1EndTime,
                        Shift1BreakDuration,
                        Shift1IsActive,
                        Shift2ID,
                        Shift2Number,
                        Shift2StartTime,
                        Shift2EndTime,
                        Shift2BreakDuration,
                        Shift2IsActive,
                        Shift3ID,
                        Shift3Number,
                        Shift3StartTime,
                        Shift3EndTime,
                        Shift3BreakDuration,
                        Shift3IsActive,
                        LastUpdated,
                        UserID,
                        RowVersion};
                this.Rows.Add(rowShiftDetailTableRow);
                return rowShiftDetailTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ShiftDetailTableDataTable cln = ((ShiftDetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ShiftDetailTableDataTable();
            }
            
            internal void InitVars() {
                this.columnDayOfTheWeek = this.Columns["DayOfTheWeek"];
                this.columnTerminalID = this.Columns["TerminalID"];
                this.columnTerminal = this.Columns["Terminal"];
                this.columnShift1ID = this.Columns["Shift1ID"];
                this.columnShift1Number = this.Columns["Shift1Number"];
                this.columnShift1StartTime = this.Columns["Shift1StartTime"];
                this.columnShift1EndTime = this.Columns["Shift1EndTime"];
                this.columnShift1BreakDuration = this.Columns["Shift1BreakDuration"];
                this.columnShift1IsActive = this.Columns["Shift1IsActive"];
                this.columnShift2ID = this.Columns["Shift2ID"];
                this.columnShift2Number = this.Columns["Shift2Number"];
                this.columnShift2StartTime = this.Columns["Shift2StartTime"];
                this.columnShift2EndTime = this.Columns["Shift2EndTime"];
                this.columnShift2BreakDuration = this.Columns["Shift2BreakDuration"];
                this.columnShift2IsActive = this.Columns["Shift2IsActive"];
                this.columnShift3ID = this.Columns["Shift3ID"];
                this.columnShift3Number = this.Columns["Shift3Number"];
                this.columnShift3StartTime = this.Columns["Shift3StartTime"];
                this.columnShift3EndTime = this.Columns["Shift3EndTime"];
                this.columnShift3BreakDuration = this.Columns["Shift3BreakDuration"];
                this.columnShift3IsActive = this.Columns["Shift3IsActive"];
                this.columnLastUpdated = this.Columns["LastUpdated"];
                this.columnUserID = this.Columns["UserID"];
                this.columnRowVersion = this.Columns["RowVersion"];
            }
            
            private void InitClass() {
                this.columnDayOfTheWeek = new DataColumn("DayOfTheWeek", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDayOfTheWeek);
                this.columnTerminalID = new DataColumn("TerminalID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminalID);
                this.columnTerminal = new DataColumn("Terminal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTerminal);
                this.columnShift1ID = new DataColumn("Shift1ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1ID);
                this.columnShift1Number = new DataColumn("Shift1Number", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1Number);
                this.columnShift1StartTime = new DataColumn("Shift1StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1StartTime);
                this.columnShift1EndTime = new DataColumn("Shift1EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1EndTime);
                this.columnShift1BreakDuration = new DataColumn("Shift1BreakDuration", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1BreakDuration);
                this.columnShift1IsActive = new DataColumn("Shift1IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift1IsActive);
                this.columnShift2ID = new DataColumn("Shift2ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2ID);
                this.columnShift2Number = new DataColumn("Shift2Number", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2Number);
                this.columnShift2StartTime = new DataColumn("Shift2StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2StartTime);
                this.columnShift2EndTime = new DataColumn("Shift2EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2EndTime);
                this.columnShift2BreakDuration = new DataColumn("Shift2BreakDuration", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2BreakDuration);
                this.columnShift2IsActive = new DataColumn("Shift2IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift2IsActive);
                this.columnShift3ID = new DataColumn("Shift3ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3ID);
                this.columnShift3Number = new DataColumn("Shift3Number", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3Number);
                this.columnShift3StartTime = new DataColumn("Shift3StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3StartTime);
                this.columnShift3EndTime = new DataColumn("Shift3EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3EndTime);
                this.columnShift3BreakDuration = new DataColumn("Shift3BreakDuration", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3BreakDuration);
                this.columnShift3IsActive = new DataColumn("Shift3IsActive", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnShift3IsActive);
                this.columnLastUpdated = new DataColumn("LastUpdated", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastUpdated);
                this.columnUserID = new DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserID);
                this.columnRowVersion = new DataColumn("RowVersion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowVersion);
                this.columnDayOfTheWeek.AllowDBNull = false;
                this.columnTerminalID.AllowDBNull = false;
                this.columnTerminal.AllowDBNull = false;
                this.columnShift1ID.AllowDBNull = false;
                this.columnShift1Number.AllowDBNull = false;
                this.columnShift1StartTime.AllowDBNull = false;
                this.columnShift1EndTime.AllowDBNull = false;
                this.columnShift1BreakDuration.AllowDBNull = false;
                this.columnShift1IsActive.AllowDBNull = false;
                this.columnShift2ID.AllowDBNull = false;
                this.columnShift2Number.AllowDBNull = false;
                this.columnShift2StartTime.AllowDBNull = false;
                this.columnShift2EndTime.AllowDBNull = false;
                this.columnShift2BreakDuration.AllowDBNull = false;
                this.columnShift2IsActive.AllowDBNull = false;
                this.columnShift3ID.AllowDBNull = false;
                this.columnShift3Number.AllowDBNull = false;
                this.columnShift3StartTime.AllowDBNull = false;
                this.columnShift3EndTime.AllowDBNull = false;
                this.columnShift3BreakDuration.AllowDBNull = false;
                this.columnShift3IsActive.AllowDBNull = false;
                this.columnLastUpdated.AllowDBNull = false;
                this.columnUserID.AllowDBNull = false;
                this.columnRowVersion.ReadOnly = true;
            }
            
            public ShiftDetailTableRow NewShiftDetailTableRow() {
                return ((ShiftDetailTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ShiftDetailTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ShiftDetailTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShiftDetailTableRowChanged != null)) {
                    this.ShiftDetailTableRowChanged(this, new ShiftDetailTableRowChangeEvent(((ShiftDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShiftDetailTableRowChanging != null)) {
                    this.ShiftDetailTableRowChanging(this, new ShiftDetailTableRowChangeEvent(((ShiftDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShiftDetailTableRowDeleted != null)) {
                    this.ShiftDetailTableRowDeleted(this, new ShiftDetailTableRowChangeEvent(((ShiftDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShiftDetailTableRowDeleting != null)) {
                    this.ShiftDetailTableRowDeleting(this, new ShiftDetailTableRowChangeEvent(((ShiftDetailTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveShiftDetailTableRow(ShiftDetailTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShiftDetailTableRow : DataRow {
            
            private ShiftDetailTableDataTable tableShiftDetailTable;
            
            internal ShiftDetailTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableShiftDetailTable = ((ShiftDetailTableDataTable)(this.Table));
            }
            
            public string DayOfTheWeek {
                get {
                    return ((string)(this[this.tableShiftDetailTable.DayOfTheWeekColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.DayOfTheWeekColumn] = value;
                }
            }
            
            public int TerminalID {
                get {
                    return ((int)(this[this.tableShiftDetailTable.TerminalIDColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.TerminalIDColumn] = value;
                }
            }
            
            public string Terminal {
                get {
                    return ((string)(this[this.tableShiftDetailTable.TerminalColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.TerminalColumn] = value;
                }
            }
            
            public int Shift1ID {
                get {
                    return ((int)(this[this.tableShiftDetailTable.Shift1IDColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift1IDColumn] = value;
                }
            }
            
            public System.Byte Shift1Number {
                get {
                    return ((System.Byte)(this[this.tableShiftDetailTable.Shift1NumberColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift1NumberColumn] = value;
                }
            }
            
            public System.DateTime Shift1StartTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.Shift1StartTimeColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift1StartTimeColumn] = value;
                }
            }
            
            public System.DateTime Shift1EndTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.Shift1EndTimeColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift1EndTimeColumn] = value;
                }
            }
            
            public int Shift1BreakDuration {
                get {
                    return ((int)(this[this.tableShiftDetailTable.Shift1BreakDurationColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift1BreakDurationColumn] = value;
                }
            }
            
            public bool Shift1IsActive {
                get {
                    return ((bool)(this[this.tableShiftDetailTable.Shift1IsActiveColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift1IsActiveColumn] = value;
                }
            }
            
            public int Shift2ID {
                get {
                    return ((int)(this[this.tableShiftDetailTable.Shift2IDColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift2IDColumn] = value;
                }
            }
            
            public System.Byte Shift2Number {
                get {
                    return ((System.Byte)(this[this.tableShiftDetailTable.Shift2NumberColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift2NumberColumn] = value;
                }
            }
            
            public System.DateTime Shift2StartTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.Shift2StartTimeColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift2StartTimeColumn] = value;
                }
            }
            
            public System.DateTime Shift2EndTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.Shift2EndTimeColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift2EndTimeColumn] = value;
                }
            }
            
            public int Shift2BreakDuration {
                get {
                    return ((int)(this[this.tableShiftDetailTable.Shift2BreakDurationColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift2BreakDurationColumn] = value;
                }
            }
            
            public bool Shift2IsActive {
                get {
                    return ((bool)(this[this.tableShiftDetailTable.Shift2IsActiveColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift2IsActiveColumn] = value;
                }
            }
            
            public int Shift3ID {
                get {
                    return ((int)(this[this.tableShiftDetailTable.Shift3IDColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift3IDColumn] = value;
                }
            }
            
            public System.Byte Shift3Number {
                get {
                    return ((System.Byte)(this[this.tableShiftDetailTable.Shift3NumberColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift3NumberColumn] = value;
                }
            }
            
            public System.DateTime Shift3StartTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.Shift3StartTimeColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift3StartTimeColumn] = value;
                }
            }
            
            public System.DateTime Shift3EndTime {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.Shift3EndTimeColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift3EndTimeColumn] = value;
                }
            }
            
            public int Shift3BreakDuration {
                get {
                    return ((int)(this[this.tableShiftDetailTable.Shift3BreakDurationColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift3BreakDurationColumn] = value;
                }
            }
            
            public bool Shift3IsActive {
                get {
                    return ((bool)(this[this.tableShiftDetailTable.Shift3IsActiveColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.Shift3IsActiveColumn] = value;
                }
            }
            
            public System.DateTime LastUpdated {
                get {
                    return ((System.DateTime)(this[this.tableShiftDetailTable.LastUpdatedColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.LastUpdatedColumn] = value;
                }
            }
            
            public string UserID {
                get {
                    return ((string)(this[this.tableShiftDetailTable.UserIDColumn]));
                }
                set {
                    this[this.tableShiftDetailTable.UserIDColumn] = value;
                }
            }
            
            public string RowVersion {
                get {
                    try {
                        return ((string)(this[this.tableShiftDetailTable.RowVersionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShiftDetailTable.RowVersionColumn] = value;
                }
            }
            
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableShiftDetailTable.RowVersionColumn);
            }
            
            public void SetRowVersionNull() {
                this[this.tableShiftDetailTable.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ShiftDetailTableRowChangeEvent : EventArgs {
            
            private ShiftDetailTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public ShiftDetailTableRowChangeEvent(ShiftDetailTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ShiftDetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
