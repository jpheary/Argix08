//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4963
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Argix.Customers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Argix.Customers", ConfigurationName="Customers.IIssueMgtService")]
    public interface IIssueMgtService {
        
        // CODEGEN: Parameter 'GetOSDScansResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetOSDScans", ReplyAction="http://Argix.Customers/IIssueMgtService/GetOSDScansResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Argix.Customers.GetOSDScansResponse GetOSDScans(Argix.Customers.GetOSDScansRequest request);
        
        // CODEGEN: Parameter 'GetPODScansResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetPODScans", ReplyAction="http://Argix.Customers/IIssueMgtService/GetPODScansResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Argix.Customers.GetPODScansResponse GetPODScans(Argix.Customers.GetPODScansRequest request);
        
        // CODEGEN: Parameter 'GetContactsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetContacts", ReplyAction="http://Argix.Customers/IIssueMgtService/GetContactsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Argix.Customers.GetContactsResponse GetContacts(Argix.Customers.GetContactsRequest request);
        
        // CODEGEN: Parameter 'GetContactsForLocationResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetContactsForLocation", ReplyAction="http://Argix.Customers/IIssueMgtService/GetContactsForLocationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Argix.Customers.GetContactsForLocationResponse GetContactsForLocation(Argix.Customers.GetContactsForLocationRequest request);
        
        // CODEGEN: Parameter 'GetContactResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetContact", ReplyAction="http://Argix.Customers/IIssueMgtService/GetContactResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetContactResponse GetContact(Argix.Customers.GetContactRequest request);
        
        // CODEGEN: Parameter 'contact' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/CreateContact", ReplyAction="http://Argix.Customers/IIssueMgtService/CreateContactResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.CreateContactResponse CreateContact(Argix.Customers.CreateContactRequest request);
        
        // CODEGEN: Parameter 'contact' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/UpdateContact", ReplyAction="http://Argix.Customers/IIssueMgtService/UpdateContactResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.UpdateContactResponse UpdateContact(Argix.Customers.UpdateContactRequest request);
        
        // CODEGEN: Parameter 'GetTerminalInfoResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetTerminalInfo", ReplyAction="http://Argix.Customers/IIssueMgtService/GetTerminalInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetTerminalInfoResponse GetTerminalInfo(Argix.Customers.GetTerminalInfoRequest request);
        
        // CODEGEN: Parameter 'GetIssueCategorysResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssueCategorys", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueCategorysResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueCategorysResponse GetIssueCategorys(Argix.Customers.GetIssueCategorysRequest request);
        
        // CODEGEN: Parameter 'GetIssueTypesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssueTypes", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueTypesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueTypesResponse GetIssueTypes(Argix.Customers.GetIssueTypesRequest request);
        
        // CODEGEN: Parameter 'GetIssueTypeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssueType", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueTypeResponse GetIssueType(Argix.Customers.GetIssueTypeRequest request);
        
        // CODEGEN: Parameter 'GetActionTypesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetActionTypes", ReplyAction="http://Argix.Customers/IIssueMgtService/GetActionTypesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetActionTypesResponse GetActionTypes(Argix.Customers.GetActionTypesRequest request);
        
        // CODEGEN: Parameter 'GetIssueActionTypesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssueActionTypes", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueActionTypesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueActionTypesResponse GetIssueActionTypes(Argix.Customers.GetIssueActionTypesRequest request);
        
        // CODEGEN: Parameter 'GetActionTypeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetActionType", ReplyAction="http://Argix.Customers/IIssueMgtService/GetActionTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetActionTypeResponse GetActionType(Argix.Customers.GetActionTypeRequest request);
        
        // CODEGEN: Parameter 'GetIssuesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssues", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssuesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssuesResponse GetIssues(Argix.Customers.GetIssuesRequest request);
        
        // CODEGEN: Parameter 'GetIssuesForDateResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssuesForDate", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssuesForDateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssuesForDateResponse GetIssuesForDate(Argix.Customers.GetIssuesForDateRequest request);
        
        // CODEGEN: Parameter 'GetIssueResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssue", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueResponse GetIssue(Argix.Customers.GetIssueRequest request);
        
        // CODEGEN: Parameter 'GetIssueActionsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssueActions", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueActionsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueActionsResponse GetIssueActions(Argix.Customers.GetIssueActionsRequest request);
        
        // CODEGEN: Parameter 'GetActionsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetActions", ReplyAction="http://Argix.Customers/IIssueMgtService/GetActionsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetActionsResponse GetActions(Argix.Customers.GetActionsRequest request);
        
        // CODEGEN: Parameter 'GetIssueAttachmentsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetIssueAttachments", ReplyAction="http://Argix.Customers/IIssueMgtService/GetIssueAttachmentsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetIssueAttachmentsResponse GetIssueAttachments(Argix.Customers.GetIssueAttachmentsRequest request);
        
        // CODEGEN: Parameter 'GetAttachmentsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetAttachments", ReplyAction="http://Argix.Customers/IIssueMgtService/GetAttachmentsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetAttachmentsResponse GetAttachments(Argix.Customers.GetAttachmentsRequest request);
        
        // CODEGEN: Parameter 'GetAttachmentResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetAttachment", ReplyAction="http://Argix.Customers/IIssueMgtService/GetAttachmentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetAttachmentResponse GetAttachment(Argix.Customers.GetAttachmentRequest request);
        
        // CODEGEN: Parameter 'issue' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/CreateIssue", ReplyAction="http://Argix.Customers/IIssueMgtService/CreateIssueResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.CreateIssueResponse CreateIssue(Argix.Customers.CreateIssueRequest request);
        
        // CODEGEN: Parameter 'userID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/CreateIssueAction", ReplyAction="http://Argix.Customers/IIssueMgtService/CreateIssueActionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.CreateIssueActionResponse CreateIssueAction(Argix.Customers.CreateIssueActionRequest request);
        
        // CODEGEN: Parameter 'filename' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/CreateIssueAttachment", ReplyAction="http://Argix.Customers/IIssueMgtService/CreateIssueAttachmentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.CreateIssueAttachmentResponse CreateIssueAttachment(Argix.Customers.CreateIssueAttachmentRequest request);
        
        // CODEGEN: Parameter 'issue' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/UpdateIssue", ReplyAction="http://Argix.Customers/IIssueMgtService/UpdateIssueResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.UpdateIssueResponse UpdateIssue(Argix.Customers.UpdateIssueRequest request);
        
        // CODEGEN: Parameter 'SearchIssuesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/SearchIssues", ReplyAction="http://Argix.Customers/IIssueMgtService/SearchIssuesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.SearchIssuesResponse SearchIssues(Argix.Customers.SearchIssuesRequest request);
        
        // CODEGEN: Parameter 'SearchIssuesAdvancedResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/SearchIssuesAdvanced", ReplyAction="http://Argix.Customers/IIssueMgtService/SearchIssuesAdvancedResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.SearchIssuesAdvancedResponse SearchIssuesAdvanced(Argix.Customers.SearchIssuesAdvancedRequest request);
        
        // CODEGEN: Parameter 'GetCompaniesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetCompanies", ReplyAction="http://Argix.Customers/IIssueMgtService/GetCompaniesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetCompaniesResponse GetCompanies(Argix.Customers.GetCompaniesRequest request);
        
        // CODEGEN: Parameter 'GetActiveCompaniesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetActiveCompanies", ReplyAction="http://Argix.Customers/IIssueMgtService/GetActiveCompaniesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetActiveCompaniesResponse GetActiveCompanies(Argix.Customers.GetActiveCompaniesRequest request);
        
        // CODEGEN: Parameter 'GetCompanyResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetCompany", ReplyAction="http://Argix.Customers/IIssueMgtService/GetCompanyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetCompanyResponse GetCompany(Argix.Customers.GetCompanyRequest request);
        
        // CODEGEN: Parameter 'GetDistrictsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetDistricts", ReplyAction="http://Argix.Customers/IIssueMgtService/GetDistrictsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetDistrictsResponse GetDistricts(Argix.Customers.GetDistrictsRequest request);
        
        // CODEGEN: Parameter 'GetRegionsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetRegions", ReplyAction="http://Argix.Customers/IIssueMgtService/GetRegionsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetRegionsResponse GetRegions(Argix.Customers.GetRegionsRequest request);
        
        // CODEGEN: Parameter 'GetAgentsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetAgents", ReplyAction="http://Argix.Customers/IIssueMgtService/GetAgentsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetAgentsResponse GetAgents(Argix.Customers.GetAgentsRequest request);
        
        // CODEGEN: Parameter 'GetAgentsForClientResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetAgentsForClient", ReplyAction="http://Argix.Customers/IIssueMgtService/GetAgentsForClientResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetAgentsForClientResponse GetAgentsForClient(Argix.Customers.GetAgentsForClientRequest request);
        
        // CODEGEN: Parameter 'GetStoreDetailResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetStoreDetail", ReplyAction="http://Argix.Customers/IIssueMgtService/GetStoreDetailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetStoreDetailResponse GetStoreDetail(Argix.Customers.GetStoreDetailRequest request);
        
        // CODEGEN: Parameter 'GetSubStoreDetailResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetSubStoreDetail", ReplyAction="http://Argix.Customers/IIssueMgtService/GetSubStoreDetailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetSubStoreDetailResponse GetSubStoreDetail(Argix.Customers.GetSubStoreDetailRequest request);
        
        // CODEGEN: Parameter 'GetDeliveriesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetDeliveries", ReplyAction="http://Argix.Customers/IIssueMgtService/GetDeliveriesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetDeliveriesResponse GetDeliveries(Argix.Customers.GetDeliveriesRequest request);
        
        // CODEGEN: Parameter 'GetDeliveryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Customers/IIssueMgtService/GetDelivery", ReplyAction="http://Argix.Customers/IIssueMgtService/GetDeliveryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Argix.Customers.GetDeliveryResponse GetDelivery(Argix.Customers.GetDeliveryRequest request);
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ScanDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ScanDS : global::System.Data.DataSet {
        
        private ScanTableDataTable tableScanTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScanDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ScanDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ScanTable"] != null)) {
                    base.Tables.Add(new ScanTableDataTable(ds.Tables["ScanTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScanTableDataTable ScanTable {
            get {
                return this.tableScanTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ScanDS cln = ((ScanDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ScanTable"] != null)) {
                    base.Tables.Add(new ScanTableDataTable(ds.Tables["ScanTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableScanTable = ((ScanTableDataTable)(base.Tables["ScanTable"]));
            if ((initTable == true)) {
                if ((this.tableScanTable != null)) {
                    this.tableScanTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ScanDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ScanDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableScanTable = new ScanTableDataTable();
            base.Tables.Add(this.tableScanTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeScanTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ScanDS ds = new ScanDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ScanTableRowChangeEventHandler(object sender, ScanTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScanTableDataTable : global::System.Data.TypedTableBase<ScanTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLabelSequenceNumber;
            
            private global::System.Data.DataColumn columnScanStatus;
            
            private global::System.Data.DataColumn columnCartonStatus;
            
            private global::System.Data.DataColumn columnDamage;
            
            private global::System.Data.DataColumn columnScanDate;
            
            private global::System.Data.DataColumn columnScanTime;
            
            private global::System.Data.DataColumn columnTrackingNumber;
            
            private global::System.Data.DataColumn columnVendorNumber;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnZoneCode;
            
            private global::System.Data.DataColumn columnTLNumber;
            
            private global::System.Data.DataColumn columnBLNumber;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupNumber;
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnVendorKey;
            
            private global::System.Data.DataColumn columnSortDate;
            
            private global::System.Data.DataColumn columnSortTime;
            
            private global::System.Data.DataColumn columnSortedLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableDataTable() {
                this.TableName = "ScanTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScanTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ScanTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelSequenceNumberColumn {
                get {
                    return this.columnLabelSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanStatusColumn {
                get {
                    return this.columnScanStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonStatusColumn {
                get {
                    return this.columnCartonStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DamageColumn {
                get {
                    return this.columnDamage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanDateColumn {
                get {
                    return this.columnScanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanTimeColumn {
                get {
                    return this.columnScanTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrackingNumberColumn {
                get {
                    return this.columnTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNumberColumn {
                get {
                    return this.columnVendorNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneCodeColumn {
                get {
                    return this.columnZoneCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLNumberColumn {
                get {
                    return this.columnTLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLNumberColumn {
                get {
                    return this.columnBLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDateColumn {
                get {
                    return this.columnSortDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortTimeColumn {
                get {
                    return this.columnSortTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortedLocationColumn {
                get {
                    return this.columnSortedLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow this[int index] {
                get {
                    return ((ScanTableRow)(this.Rows[index]));
                }
            }
            
            public event ScanTableRowChangeEventHandler ScanTableRowChanging;
            
            public event ScanTableRowChangeEventHandler ScanTableRowChanged;
            
            public event ScanTableRowChangeEventHandler ScanTableRowDeleting;
            
            public event ScanTableRowChangeEventHandler ScanTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddScanTableRow(ScanTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow AddScanTableRow(
                        long ID, 
                        long LabelSequenceNumber, 
                        string ScanStatus, 
                        string CartonStatus, 
                        string Damage, 
                        System.DateTime ScanDate, 
                        System.DateTime ScanTime, 
                        string TrackingNumber, 
                        string VendorNumber, 
                        string VendorName, 
                        int Weight, 
                        string ZoneCode, 
                        string TLNumber, 
                        int BLNumber, 
                        System.DateTime PickupDate, 
                        int PickupNumber, 
                        string ItemNumber, 
                        string VendorKey, 
                        System.DateTime SortDate, 
                        System.DateTime SortTime, 
                        string SortedLocation) {
                ScanTableRow rowScanTableRow = ((ScanTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        LabelSequenceNumber,
                        ScanStatus,
                        CartonStatus,
                        Damage,
                        ScanDate,
                        ScanTime,
                        TrackingNumber,
                        VendorNumber,
                        VendorName,
                        Weight,
                        ZoneCode,
                        TLNumber,
                        BLNumber,
                        PickupDate,
                        PickupNumber,
                        ItemNumber,
                        VendorKey,
                        SortDate,
                        SortTime,
                        SortedLocation};
                rowScanTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScanTableRow);
                return rowScanTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ScanTableDataTable cln = ((ScanTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ScanTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLabelSequenceNumber = base.Columns["LabelSequenceNumber"];
                this.columnScanStatus = base.Columns["ScanStatus"];
                this.columnCartonStatus = base.Columns["CartonStatus"];
                this.columnDamage = base.Columns["Damage"];
                this.columnScanDate = base.Columns["ScanDate"];
                this.columnScanTime = base.Columns["ScanTime"];
                this.columnTrackingNumber = base.Columns["TrackingNumber"];
                this.columnVendorNumber = base.Columns["VendorNumber"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnWeight = base.Columns["Weight"];
                this.columnZoneCode = base.Columns["ZoneCode"];
                this.columnTLNumber = base.Columns["TLNumber"];
                this.columnBLNumber = base.Columns["BLNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnSortDate = base.Columns["SortDate"];
                this.columnSortTime = base.Columns["SortTime"];
                this.columnSortedLocation = base.Columns["SortedLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLabelSequenceNumber = new global::System.Data.DataColumn("LabelSequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelSequenceNumber);
                this.columnScanStatus = new global::System.Data.DataColumn("ScanStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanStatus);
                this.columnCartonStatus = new global::System.Data.DataColumn("CartonStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonStatus);
                this.columnDamage = new global::System.Data.DataColumn("Damage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDamage);
                this.columnScanDate = new global::System.Data.DataColumn("ScanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanDate);
                this.columnScanTime = new global::System.Data.DataColumn("ScanTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanTime);
                this.columnTrackingNumber = new global::System.Data.DataColumn("TrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingNumber);
                this.columnVendorNumber = new global::System.Data.DataColumn("VendorNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorNumber);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnZoneCode = new global::System.Data.DataColumn("ZoneCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneCode);
                this.columnTLNumber = new global::System.Data.DataColumn("TLNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLNumber);
                this.columnBLNumber = new global::System.Data.DataColumn("BLNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLNumber);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new global::System.Data.DataColumn("PickupNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnVendorKey = new global::System.Data.DataColumn("VendorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnSortDate = new global::System.Data.DataColumn("SortDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortDate);
                this.columnSortTime = new global::System.Data.DataColumn("SortTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortTime);
                this.columnSortedLocation = new global::System.Data.DataColumn("SortedLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortedLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow NewScanTableRow() {
                return ((ScanTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ScanTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ScanTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ScanTableRowChanged != null)) {
                    this.ScanTableRowChanged(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ScanTableRowChanging != null)) {
                    this.ScanTableRowChanging(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ScanTableRowDeleted != null)) {
                    this.ScanTableRowDeleted(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ScanTableRowDeleting != null)) {
                    this.ScanTableRowDeleting(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveScanTableRow(ScanTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScanDS ds = new ScanDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScanTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ScanTableRow : global::System.Data.DataRow {
            
            private ScanTableDataTable tableScanTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScanTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableScanTable = ((ScanTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableScanTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LabelSequenceNumber {
                get {
                    try {
                        return ((long)(this[this.tableScanTable.LabelSequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelSequenceNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.LabelSequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScanStatus {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.ScanStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanStatus\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ScanStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CartonStatus {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.CartonStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonStatus\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.CartonStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Damage {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Damage\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.ScanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanDate\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ScanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.ScanTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanTime\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ScanTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.TrackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.TrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.VendorNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.VendorNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableScanTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZoneCode {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.ZoneCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneCode\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ZoneCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.TLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.TLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLNumber {
                get {
                    try {
                        return ((int)(this[this.tableScanTable.BLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.BLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PickupNumber {
                get {
                    try {
                        return ((int)(this[this.tableScanTable.PickupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.PickupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.ItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.VendorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.VendorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.SortDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortDate\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.SortDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.SortTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortTime\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.SortTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SortedLocation {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.SortedLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortedLocation\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.SortedLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableScanTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableScanTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelSequenceNumberNull() {
                return this.IsNull(this.tableScanTable.LabelSequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelSequenceNumberNull() {
                this[this.tableScanTable.LabelSequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanStatusNull() {
                return this.IsNull(this.tableScanTable.ScanStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanStatusNull() {
                this[this.tableScanTable.ScanStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonStatusNull() {
                return this.IsNull(this.tableScanTable.CartonStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonStatusNull() {
                this[this.tableScanTable.CartonStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDamageNull() {
                return this.IsNull(this.tableScanTable.DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDamageNull() {
                this[this.tableScanTable.DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanDateNull() {
                return this.IsNull(this.tableScanTable.ScanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanDateNull() {
                this[this.tableScanTable.ScanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanTimeNull() {
                return this.IsNull(this.tableScanTable.ScanTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanTimeNull() {
                this[this.tableScanTable.ScanTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrackingNumberNull() {
                return this.IsNull(this.tableScanTable.TrackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrackingNumberNull() {
                this[this.tableScanTable.TrackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNumberNull() {
                return this.IsNull(this.tableScanTable.VendorNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNumberNull() {
                this[this.tableScanTable.VendorNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableScanTable.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableScanTable.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableScanTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableScanTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneCodeNull() {
                return this.IsNull(this.tableScanTable.ZoneCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneCodeNull() {
                this[this.tableScanTable.ZoneCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLNumberNull() {
                return this.IsNull(this.tableScanTable.TLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLNumberNull() {
                this[this.tableScanTable.TLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLNumberNull() {
                return this.IsNull(this.tableScanTable.BLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLNumberNull() {
                this[this.tableScanTable.BLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableScanTable.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableScanTable.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableScanTable.PickupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tableScanTable.PickupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNumberNull() {
                return this.IsNull(this.tableScanTable.ItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNumberNull() {
                this[this.tableScanTable.ItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableScanTable.VendorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tableScanTable.VendorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDateNull() {
                return this.IsNull(this.tableScanTable.SortDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDateNull() {
                this[this.tableScanTable.SortDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTimeNull() {
                return this.IsNull(this.tableScanTable.SortTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTimeNull() {
                this[this.tableScanTable.SortTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortedLocationNull() {
                return this.IsNull(this.tableScanTable.SortedLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortedLocationNull() {
                this[this.tableScanTable.SortedLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ScanTableRowChangeEvent : global::System.EventArgs {
            
            private ScanTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRowChangeEvent(ScanTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOSDScans", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetOSDScansRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long cProID;
        
        public GetOSDScansRequest() {
        }
        
        public GetOSDScansRequest(long cProID) {
            this.cProID = cProID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOSDScansResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetOSDScansResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.ScanDS GetOSDScansResult;
        
        public GetOSDScansResponse() {
        }
        
        public GetOSDScansResponse(Argix.Customers.ScanDS GetOSDScansResult) {
            this.GetOSDScansResult = GetOSDScansResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPODScans", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetPODScansRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long cProID;
        
        public GetPODScansRequest() {
        }
        
        public GetPODScansRequest(long cProID) {
            this.cProID = cProID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPODScansResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetPODScansResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.ScanDS GetPODScansResult;
        
        public GetPODScansResponse() {
        }
        
        public GetPODScansResponse(Argix.Customers.ScanDS GetPODScansResult) {
            this.GetPODScansResult = GetPODScansResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ContactDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ContactDS : global::System.Data.DataSet {
        
        private ContactTableDataTable tableContactTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContactDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ContactDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ContactTable"] != null)) {
                    base.Tables.Add(new ContactTableDataTable(ds.Tables["ContactTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContactTableDataTable ContactTable {
            get {
                return this.tableContactTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ContactDS cln = ((ContactDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ContactTable"] != null)) {
                    base.Tables.Add(new ContactTableDataTable(ds.Tables["ContactTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableContactTable = ((ContactTableDataTable)(base.Tables["ContactTable"]));
            if ((initTable == true)) {
                if ((this.tableContactTable != null)) {
                    this.tableContactTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ContactDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ContactDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableContactTable = new ContactTableDataTable();
            base.Tables.Add(this.tableContactTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContactTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ContactDS ds = new ContactDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ContactTableRowChangeEventHandler(object sender, ContactTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContactTableDataTable : global::System.Data.TypedTableBase<ContactTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactTableDataTable() {
                this.TableName = "ContactTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContactTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContactTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactTableRow this[int index] {
                get {
                    return ((ContactTableRow)(this.Rows[index]));
                }
            }
            
            public event ContactTableRowChangeEventHandler ContactTableRowChanging;
            
            public event ContactTableRowChangeEventHandler ContactTableRowChanged;
            
            public event ContactTableRowChangeEventHandler ContactTableRowDeleting;
            
            public event ContactTableRowChangeEventHandler ContactTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContactTableRow(ContactTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactTableRow AddContactTableRow(int ID, string FirstName, string LastName, string FullName, string Phone, string Mobile, string Fax, string Email) {
                ContactTableRow rowContactTableRow = ((ContactTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FirstName,
                        LastName,
                        FullName,
                        Phone,
                        Mobile,
                        Fax,
                        Email};
                rowContactTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContactTableRow);
                return rowContactTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContactTableDataTable cln = ((ContactTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContactTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFullName = base.Columns["FullName"];
                this.columnPhone = base.Columns["Phone"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmail = base.Columns["Email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactTableRow NewContactTableRow() {
                return ((ContactTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContactTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContactTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContactTableRowChanged != null)) {
                    this.ContactTableRowChanged(this, new ContactTableRowChangeEvent(((ContactTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContactTableRowChanging != null)) {
                    this.ContactTableRowChanging(this, new ContactTableRowChangeEvent(((ContactTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContactTableRowDeleted != null)) {
                    this.ContactTableRowDeleted(this, new ContactTableRowChangeEvent(((ContactTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContactTableRowDeleting != null)) {
                    this.ContactTableRowDeleting(this, new ContactTableRowChangeEvent(((ContactTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContactTableRow(ContactTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ContactDS ds = new ContactDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContactTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContactTableRow : global::System.Data.DataRow {
            
            private ContactTableDataTable tableContactTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContactTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContactTable = ((ContactTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableContactTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableContactTable.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'ContactTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactTable.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableContactTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableContactTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableContactTable.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableContactTable.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableContactTable.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableContactTable.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableContactTable.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullNameNull() {
                this[this.tableContactTable.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableContactTable.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableContactTable.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableContactTable.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableContactTable.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableContactTable.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableContactTable.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableContactTable.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableContactTable.EmailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContactTableRowChangeEvent : global::System.EventArgs {
            
            private ContactTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactTableRowChangeEvent(ContactTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContacts", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetContactsRequest {
        
        public GetContactsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetContactsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.ContactDS GetContactsResult;
        
        public GetContactsResponse() {
        }
        
        public GetContactsResponse(Argix.Customers.ContactDS GetContactsResult) {
            this.GetContactsResult = GetContactsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactsForLocation", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetContactsForLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int companyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string regionNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string districtNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string agentNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string storeNumber;
        
        public GetContactsForLocationRequest() {
        }
        
        public GetContactsForLocationRequest(int companyID, string regionNumber, string districtNumber, string agentNumber, string storeNumber) {
            this.companyID = companyID;
            this.regionNumber = regionNumber;
            this.districtNumber = districtNumber;
            this.agentNumber = agentNumber;
            this.storeNumber = storeNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactsForLocationResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetContactsForLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.ContactDS GetContactsForLocationResult;
        
        public GetContactsForLocationResponse() {
        }
        
        public GetContactsForLocationResponse(Argix.Customers.ContactDS GetContactsForLocationResult) {
            this.GetContactsForLocationResult = GetContactsForLocationResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Enterprise")]
    public partial class Contact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailField;
        
        private string faxField;
        
        private string firstNameField;
        
        private string fullNameField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string lastNameField;
        
        private string mobileField;
        
        private string phoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("IDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
                this.RaisePropertyChanged("Mobile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
    public partial class Attachment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long actionIDField;
        
        private bool actionIDFieldSpecified;
        
        private byte[] fileField;
        
        private string filenameField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ActionID {
            get {
                return this.actionIDField;
            }
            set {
                this.actionIDField = value;
                this.RaisePropertyChanged("ActionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionIDSpecified {
            get {
                return this.actionIDFieldSpecified;
            }
            set {
                this.actionIDFieldSpecified = value;
                this.RaisePropertyChanged("ActionIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=1)]
        public byte[] File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
                this.RaisePropertyChanged("File");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("Filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("IDSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
    public partial class Action : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int attachmentsField;
        
        private bool attachmentsFieldSpecified;
        
        private string commentField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private long issueIDField;
        
        private bool issueIDFieldSpecified;
        
        private byte typeIDField;
        
        private bool typeIDFieldSpecified;
        
        private string typeNameField;
        
        private string userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
                this.RaisePropertyChanged("Attachments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttachmentsSpecified {
            get {
                return this.attachmentsFieldSpecified;
            }
            set {
                this.attachmentsFieldSpecified = value;
                this.RaisePropertyChanged("AttachmentsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
                this.RaisePropertyChanged("CreatedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("IDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long IssueID {
            get {
                return this.issueIDField;
            }
            set {
                this.issueIDField = value;
                this.RaisePropertyChanged("IssueID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IssueIDSpecified {
            get {
                return this.issueIDFieldSpecified;
            }
            set {
                this.issueIDFieldSpecified = value;
                this.RaisePropertyChanged("IssueIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public byte TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
                this.RaisePropertyChanged("TypeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeIDSpecified {
            get {
                return this.typeIDFieldSpecified;
            }
            set {
                this.typeIDFieldSpecified = value;
                this.RaisePropertyChanged("TypeIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
                this.RaisePropertyChanged("TypeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
    public partial class Issue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string agentNumberField;
        
        private int companyIDField;
        
        private bool companyIDFieldSpecified;
        
        private string companyNameField;
        
        private int contactIDField;
        
        private bool contactIDFieldSpecified;
        
        private string contactNameField;
        
        private string coordinatorField;
        
        private string districtNumberField;
        
        private System.DateTime firstActionCreatedField;
        
        private bool firstActionCreatedFieldSpecified;
        
        private string firstActionDescriptionField;
        
        private long firstActionIDField;
        
        private bool firstActionIDFieldSpecified;
        
        private string firstActionUserIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private System.DateTime lastActionCreatedField;
        
        private bool lastActionCreatedFieldSpecified;
        
        private string lastActionDescriptionField;
        
        private long lastActionIDField;
        
        private bool lastActionIDFieldSpecified;
        
        private string lastActionUserIDField;
        
        private System.DateTime oFD1FromDateField;
        
        private bool oFD1FromDateFieldSpecified;
        
        private System.DateTime oFD1ToDateField;
        
        private bool oFD1ToDateFieldSpecified;
        
        private long pROIDField;
        
        private bool pROIDFieldSpecified;
        
        private string regionNumberField;
        
        private int storeNumberField;
        
        private bool storeNumberFieldSpecified;
        
        private string subjectField;
        
        private string typeField;
        
        private int typeIDField;
        
        private bool typeIDFieldSpecified;
        
        private string zoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string AgentNumber {
            get {
                return this.agentNumberField;
            }
            set {
                this.agentNumberField = value;
                this.RaisePropertyChanged("AgentNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
                this.RaisePropertyChanged("CompanyID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyIDSpecified {
            get {
                return this.companyIDFieldSpecified;
            }
            set {
                this.companyIDFieldSpecified = value;
                this.RaisePropertyChanged("CompanyIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
                this.RaisePropertyChanged("ContactID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContactIDSpecified {
            get {
                return this.contactIDFieldSpecified;
            }
            set {
                this.contactIDFieldSpecified = value;
                this.RaisePropertyChanged("ContactIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
                this.RaisePropertyChanged("ContactName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string Coordinator {
            get {
                return this.coordinatorField;
            }
            set {
                this.coordinatorField = value;
                this.RaisePropertyChanged("Coordinator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string DistrictNumber {
            get {
                return this.districtNumberField;
            }
            set {
                this.districtNumberField = value;
                this.RaisePropertyChanged("DistrictNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime FirstActionCreated {
            get {
                return this.firstActionCreatedField;
            }
            set {
                this.firstActionCreatedField = value;
                this.RaisePropertyChanged("FirstActionCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstActionCreatedSpecified {
            get {
                return this.firstActionCreatedFieldSpecified;
            }
            set {
                this.firstActionCreatedFieldSpecified = value;
                this.RaisePropertyChanged("FirstActionCreatedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public string FirstActionDescription {
            get {
                return this.firstActionDescriptionField;
            }
            set {
                this.firstActionDescriptionField = value;
                this.RaisePropertyChanged("FirstActionDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public long FirstActionID {
            get {
                return this.firstActionIDField;
            }
            set {
                this.firstActionIDField = value;
                this.RaisePropertyChanged("FirstActionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstActionIDSpecified {
            get {
                return this.firstActionIDFieldSpecified;
            }
            set {
                this.firstActionIDFieldSpecified = value;
                this.RaisePropertyChanged("FirstActionIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public string FirstActionUserID {
            get {
                return this.firstActionUserIDField;
            }
            set {
                this.firstActionUserIDField = value;
                this.RaisePropertyChanged("FirstActionUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("IDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime LastActionCreated {
            get {
                return this.lastActionCreatedField;
            }
            set {
                this.lastActionCreatedField = value;
                this.RaisePropertyChanged("LastActionCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastActionCreatedSpecified {
            get {
                return this.lastActionCreatedFieldSpecified;
            }
            set {
                this.lastActionCreatedFieldSpecified = value;
                this.RaisePropertyChanged("LastActionCreatedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public string LastActionDescription {
            get {
                return this.lastActionDescriptionField;
            }
            set {
                this.lastActionDescriptionField = value;
                this.RaisePropertyChanged("LastActionDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public long LastActionID {
            get {
                return this.lastActionIDField;
            }
            set {
                this.lastActionIDField = value;
                this.RaisePropertyChanged("LastActionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastActionIDSpecified {
            get {
                return this.lastActionIDFieldSpecified;
            }
            set {
                this.lastActionIDFieldSpecified = value;
                this.RaisePropertyChanged("LastActionIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=15)]
        public string LastActionUserID {
            get {
                return this.lastActionUserIDField;
            }
            set {
                this.lastActionUserIDField = value;
                this.RaisePropertyChanged("LastActionUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public System.DateTime OFD1FromDate {
            get {
                return this.oFD1FromDateField;
            }
            set {
                this.oFD1FromDateField = value;
                this.RaisePropertyChanged("OFD1FromDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OFD1FromDateSpecified {
            get {
                return this.oFD1FromDateFieldSpecified;
            }
            set {
                this.oFD1FromDateFieldSpecified = value;
                this.RaisePropertyChanged("OFD1FromDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public System.DateTime OFD1ToDate {
            get {
                return this.oFD1ToDateField;
            }
            set {
                this.oFD1ToDateField = value;
                this.RaisePropertyChanged("OFD1ToDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OFD1ToDateSpecified {
            get {
                return this.oFD1ToDateFieldSpecified;
            }
            set {
                this.oFD1ToDateFieldSpecified = value;
                this.RaisePropertyChanged("OFD1ToDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public long PROID {
            get {
                return this.pROIDField;
            }
            set {
                this.pROIDField = value;
                this.RaisePropertyChanged("PROID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PROIDSpecified {
            get {
                return this.pROIDFieldSpecified;
            }
            set {
                this.pROIDFieldSpecified = value;
                this.RaisePropertyChanged("PROIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=19)]
        public string RegionNumber {
            get {
                return this.regionNumberField;
            }
            set {
                this.regionNumberField = value;
                this.RaisePropertyChanged("RegionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public int StoreNumber {
            get {
                return this.storeNumberField;
            }
            set {
                this.storeNumberField = value;
                this.RaisePropertyChanged("StoreNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StoreNumberSpecified {
            get {
                return this.storeNumberFieldSpecified;
            }
            set {
                this.storeNumberFieldSpecified = value;
                this.RaisePropertyChanged("StoreNumberSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=21)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=22)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public int TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
                this.RaisePropertyChanged("TypeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeIDSpecified {
            get {
                return this.typeIDFieldSpecified;
            }
            set {
                this.typeIDFieldSpecified = value;
                this.RaisePropertyChanged("TypeIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=24)]
        public string Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
                this.RaisePropertyChanged("Zone");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Enterprise")]
    public partial class TerminalInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string connectionField;
        
        private string descriptionField;
        
        private string numberField;
        
        private int terminalIDField;
        
        private bool terminalIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
                this.RaisePropertyChanged("Connection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
                this.RaisePropertyChanged("Number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int TerminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
                this.RaisePropertyChanged("TerminalID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TerminalIDSpecified {
            get {
                return this.terminalIDFieldSpecified;
            }
            set {
                this.terminalIDFieldSpecified = value;
                this.RaisePropertyChanged("TerminalIDSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContact", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int contactID;
        
        public GetContactRequest() {
        }
        
        public GetContactRequest(int contactID) {
            this.contactID = contactID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.Contact GetContactResult;
        
        public GetContactResponse() {
        }
        
        public GetContactResponse(Argix.Customers.Contact GetContactResult) {
            this.GetContactResult = GetContactResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateContact", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.Contact contact;
        
        public CreateContactRequest() {
        }
        
        public CreateContactRequest(Argix.Customers.Contact contact) {
            this.contact = contact;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateContactResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int CreateContactResult;
        
        public CreateContactResponse() {
        }
        
        public CreateContactResponse(int CreateContactResult) {
            this.CreateContactResult = CreateContactResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateContact", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class UpdateContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.Contact contact;
        
        public UpdateContactRequest() {
        }
        
        public UpdateContactRequest(Argix.Customers.Contact contact) {
            this.contact = contact;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateContactResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class UpdateContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public bool UpdateContactResult;
        
        public UpdateContactResponse() {
        }
        
        public UpdateContactResponse(bool UpdateContactResult) {
            this.UpdateContactResult = UpdateContactResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTerminalInfo", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetTerminalInfoRequest {
        
        public GetTerminalInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTerminalInfoResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetTerminalInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.TerminalInfo GetTerminalInfoResult;
        
        public GetTerminalInfoResponse() {
        }
        
        public GetTerminalInfoResponse(Argix.Customers.TerminalInfo GetTerminalInfoResult) {
            this.GetTerminalInfoResult = GetTerminalInfoResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("IssueTypeDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class IssueTypeDS : global::System.Data.DataSet {
        
        private IssueTypeTableDataTable tableIssueTypeTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public IssueTypeDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected IssueTypeDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["IssueTypeTable"] != null)) {
                    base.Tables.Add(new IssueTypeTableDataTable(ds.Tables["IssueTypeTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IssueTypeTableDataTable IssueTypeTable {
            get {
                return this.tableIssueTypeTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            IssueTypeDS cln = ((IssueTypeDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["IssueTypeTable"] != null)) {
                    base.Tables.Add(new IssueTypeTableDataTable(ds.Tables["IssueTypeTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableIssueTypeTable = ((IssueTypeTableDataTable)(base.Tables["IssueTypeTable"]));
            if ((initTable == true)) {
                if ((this.tableIssueTypeTable != null)) {
                    this.tableIssueTypeTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "IssueTypeDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/IssueTypeDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIssueTypeTable = new IssueTypeTableDataTable();
            base.Tables.Add(this.tableIssueTypeTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIssueTypeTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            IssueTypeDS ds = new IssueTypeDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void IssueTypeTableRowChangeEventHandler(object sender, IssueTypeTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IssueTypeTableDataTable : global::System.Data.TypedTableBase<IssueTypeTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTypeTableDataTable() {
                this.TableName = "IssueTypeTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IssueTypeTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IssueTypeTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTypeTableRow this[int index] {
                get {
                    return ((IssueTypeTableRow)(this.Rows[index]));
                }
            }
            
            public event IssueTypeTableRowChangeEventHandler IssueTypeTableRowChanging;
            
            public event IssueTypeTableRowChangeEventHandler IssueTypeTableRowChanged;
            
            public event IssueTypeTableRowChangeEventHandler IssueTypeTableRowDeleting;
            
            public event IssueTypeTableRowChangeEventHandler IssueTypeTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIssueTypeTableRow(IssueTypeTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTypeTableRow AddIssueTypeTableRow(int ID, string Type, string Category, string Description) {
                IssueTypeTableRow rowIssueTypeTableRow = ((IssueTypeTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Type,
                        Category,
                        Description};
                rowIssueTypeTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIssueTypeTableRow);
                return rowIssueTypeTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IssueTypeTableDataTable cln = ((IssueTypeTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IssueTypeTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnType = base.Columns["Type"];
                this.columnCategory = base.Columns["Category"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTypeTableRow NewIssueTypeTableRow() {
                return ((IssueTypeTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IssueTypeTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IssueTypeTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IssueTypeTableRowChanged != null)) {
                    this.IssueTypeTableRowChanged(this, new IssueTypeTableRowChangeEvent(((IssueTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IssueTypeTableRowChanging != null)) {
                    this.IssueTypeTableRowChanging(this, new IssueTypeTableRowChangeEvent(((IssueTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IssueTypeTableRowDeleted != null)) {
                    this.IssueTypeTableRowDeleted(this, new IssueTypeTableRowChangeEvent(((IssueTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IssueTypeTableRowDeleting != null)) {
                    this.IssueTypeTableRowDeleting(this, new IssueTypeTableRowChangeEvent(((IssueTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIssueTypeTableRow(IssueTypeTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                IssueTypeDS ds = new IssueTypeDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IssueTypeTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IssueTypeTableRow : global::System.Data.DataRow {
            
            private IssueTypeTableDataTable tableIssueTypeTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IssueTypeTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIssueTypeTable = ((IssueTypeTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableIssueTypeTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'IssueTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTypeTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableIssueTypeTable.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'IssueTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTypeTable.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableIssueTypeTable.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'IssueTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTypeTable.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableIssueTypeTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'IssueTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTypeTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableIssueTypeTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableIssueTypeTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableIssueTypeTable.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableIssueTypeTable.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableIssueTypeTable.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableIssueTypeTable.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableIssueTypeTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableIssueTypeTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IssueTypeTableRowChangeEvent : global::System.EventArgs {
            
            private IssueTypeTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTypeTableRowChangeEvent(IssueTypeTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTypeTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueCategorys", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueCategorysRequest {
        
        public GetIssueCategorysRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueCategorysResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueCategorysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.IssueTypeDS GetIssueCategorysResult;
        
        public GetIssueCategorysResponse() {
        }
        
        public GetIssueCategorysResponse(Argix.Customers.IssueTypeDS GetIssueCategorysResult) {
            this.GetIssueCategorysResult = GetIssueCategorysResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueTypes", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string issueCategory;
        
        public GetIssueTypesRequest() {
        }
        
        public GetIssueTypesRequest(string issueCategory) {
            this.issueCategory = issueCategory;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueTypesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.IssueTypeDS GetIssueTypesResult;
        
        public GetIssueTypesResponse() {
        }
        
        public GetIssueTypesResponse(Argix.Customers.IssueTypeDS GetIssueTypesResult) {
            this.GetIssueTypesResult = GetIssueTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueType", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int typeID;
        
        public GetIssueTypeRequest() {
        }
        
        public GetIssueTypeRequest(int typeID) {
            this.typeID = typeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueTypeResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetIssueTypeResult;
        
        public GetIssueTypeResponse() {
        }
        
        public GetIssueTypeResponse(string GetIssueTypeResult) {
            this.GetIssueTypeResult = GetIssueTypeResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ActionTypeDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ActionTypeDS : global::System.Data.DataSet {
        
        private ActionTypeTableDataTable tableActionTypeTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActionTypeDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ActionTypeDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ActionTypeTable"] != null)) {
                    base.Tables.Add(new ActionTypeTableDataTable(ds.Tables["ActionTypeTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ActionTypeTableDataTable ActionTypeTable {
            get {
                return this.tableActionTypeTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ActionTypeDS cln = ((ActionTypeDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ActionTypeTable"] != null)) {
                    base.Tables.Add(new ActionTypeTableDataTable(ds.Tables["ActionTypeTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableActionTypeTable = ((ActionTypeTableDataTable)(base.Tables["ActionTypeTable"]));
            if ((initTable == true)) {
                if ((this.tableActionTypeTable != null)) {
                    this.tableActionTypeTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ActionTypeDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ActionTypeDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableActionTypeTable = new ActionTypeTableDataTable();
            base.Tables.Add(this.tableActionTypeTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeActionTypeTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ActionTypeDS ds = new ActionTypeDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ActionTypeTableRowChangeEventHandler(object sender, ActionTypeTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ActionTypeTableDataTable : global::System.Data.TypedTableBase<ActionTypeTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTypeTableDataTable() {
                this.TableName = "ActionTypeTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ActionTypeTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ActionTypeTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTypeTableRow this[int index] {
                get {
                    return ((ActionTypeTableRow)(this.Rows[index]));
                }
            }
            
            public event ActionTypeTableRowChangeEventHandler ActionTypeTableRowChanging;
            
            public event ActionTypeTableRowChangeEventHandler ActionTypeTableRowChanged;
            
            public event ActionTypeTableRowChangeEventHandler ActionTypeTableRowDeleting;
            
            public event ActionTypeTableRowChangeEventHandler ActionTypeTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddActionTypeTableRow(ActionTypeTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTypeTableRow AddActionTypeTableRow(byte ID, string Type, string Description) {
                ActionTypeTableRow rowActionTypeTableRow = ((ActionTypeTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Type,
                        Description};
                rowActionTypeTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowActionTypeTableRow);
                return rowActionTypeTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ActionTypeTableDataTable cln = ((ActionTypeTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ActionTypeTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnType = base.Columns["Type"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTypeTableRow NewActionTypeTableRow() {
                return ((ActionTypeTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ActionTypeTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ActionTypeTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ActionTypeTableRowChanged != null)) {
                    this.ActionTypeTableRowChanged(this, new ActionTypeTableRowChangeEvent(((ActionTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ActionTypeTableRowChanging != null)) {
                    this.ActionTypeTableRowChanging(this, new ActionTypeTableRowChangeEvent(((ActionTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ActionTypeTableRowDeleted != null)) {
                    this.ActionTypeTableRowDeleted(this, new ActionTypeTableRowChangeEvent(((ActionTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ActionTypeTableRowDeleting != null)) {
                    this.ActionTypeTableRowDeleting(this, new ActionTypeTableRowChangeEvent(((ActionTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveActionTypeTableRow(ActionTypeTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ActionTypeDS ds = new ActionTypeDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ActionTypeTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ActionTypeTableRow : global::System.Data.DataRow {
            
            private ActionTypeTableDataTable tableActionTypeTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ActionTypeTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableActionTypeTable = ((ActionTypeTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ID {
                get {
                    try {
                        return ((byte)(this[this.tableActionTypeTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'ActionTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTypeTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableActionTypeTable.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'ActionTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTypeTable.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableActionTypeTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ActionTypeTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTypeTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableActionTypeTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableActionTypeTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableActionTypeTable.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableActionTypeTable.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableActionTypeTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableActionTypeTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ActionTypeTableRowChangeEvent : global::System.EventArgs {
            
            private ActionTypeTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTypeTableRowChangeEvent(ActionTypeTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTypeTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionTypes", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActionTypesRequest {
        
        public GetActionTypesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionTypesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActionTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.ActionTypeDS GetActionTypesResult;
        
        public GetActionTypesResponse() {
        }
        
        public GetActionTypesResponse(Argix.Customers.ActionTypeDS GetActionTypesResult) {
            this.GetActionTypesResult = GetActionTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueActionTypes", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueActionTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long issueID;
        
        public GetIssueActionTypesRequest() {
        }
        
        public GetIssueActionTypesRequest(long issueID) {
            this.issueID = issueID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueActionTypesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueActionTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.ActionTypeDS GetIssueActionTypesResult;
        
        public GetIssueActionTypesResponse() {
        }
        
        public GetIssueActionTypesResponse(Argix.Customers.ActionTypeDS GetIssueActionTypesResult) {
            this.GetIssueActionTypesResult = GetIssueActionTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionType", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActionTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int typeID;
        
        public GetActionTypeRequest() {
        }
        
        public GetActionTypeRequest(int typeID) {
            this.typeID = typeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionTypeResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActionTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetActionTypeResult;
        
        public GetActionTypeResponse() {
        }
        
        public GetActionTypeResponse(string GetActionTypeResult) {
            this.GetActionTypeResult = GetActionTypeResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("IssueDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class IssueDS : global::System.Data.DataSet {
        
        private IssueTableDataTable tableIssueTable;
        
        private ActionTableDataTable tableActionTable;
        
        private AttachmentTableDataTable tableAttachmentTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public IssueDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected IssueDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["IssueTable"] != null)) {
                    base.Tables.Add(new IssueTableDataTable(ds.Tables["IssueTable"]));
                }
                if ((ds.Tables["ActionTable"] != null)) {
                    base.Tables.Add(new ActionTableDataTable(ds.Tables["ActionTable"]));
                }
                if ((ds.Tables["AttachmentTable"] != null)) {
                    base.Tables.Add(new AttachmentTableDataTable(ds.Tables["AttachmentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IssueTableDataTable IssueTable {
            get {
                return this.tableIssueTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ActionTableDataTable ActionTable {
            get {
                return this.tableActionTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AttachmentTableDataTable AttachmentTable {
            get {
                return this.tableAttachmentTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            IssueDS cln = ((IssueDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["IssueTable"] != null)) {
                    base.Tables.Add(new IssueTableDataTable(ds.Tables["IssueTable"]));
                }
                if ((ds.Tables["ActionTable"] != null)) {
                    base.Tables.Add(new ActionTableDataTable(ds.Tables["ActionTable"]));
                }
                if ((ds.Tables["AttachmentTable"] != null)) {
                    base.Tables.Add(new AttachmentTableDataTable(ds.Tables["AttachmentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableIssueTable = ((IssueTableDataTable)(base.Tables["IssueTable"]));
            if ((initTable == true)) {
                if ((this.tableIssueTable != null)) {
                    this.tableIssueTable.InitVars();
                }
            }
            this.tableActionTable = ((ActionTableDataTable)(base.Tables["ActionTable"]));
            if ((initTable == true)) {
                if ((this.tableActionTable != null)) {
                    this.tableActionTable.InitVars();
                }
            }
            this.tableAttachmentTable = ((AttachmentTableDataTable)(base.Tables["AttachmentTable"]));
            if ((initTable == true)) {
                if ((this.tableAttachmentTable != null)) {
                    this.tableAttachmentTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "IssueDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/IssueDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIssueTable = new IssueTableDataTable();
            base.Tables.Add(this.tableIssueTable);
            this.tableActionTable = new ActionTableDataTable();
            base.Tables.Add(this.tableActionTable);
            this.tableAttachmentTable = new AttachmentTableDataTable();
            base.Tables.Add(this.tableAttachmentTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIssueTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeActionTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAttachmentTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            IssueDS ds = new IssueDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void IssueTableRowChangeEventHandler(object sender, IssueTableRowChangeEvent e);
        
        public delegate void ActionTableRowChangeEventHandler(object sender, ActionTableRowChangeEvent e);
        
        public delegate void AttachmentTableRowChangeEventHandler(object sender, AttachmentTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IssueTableDataTable : global::System.Data.TypedTableBase<IssueTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTypeID;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnContactID;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnRegionNumber;
            
            private global::System.Data.DataColumn columnDistrictNumber;
            
            private global::System.Data.DataColumn columnAgentNumber;
            
            private global::System.Data.DataColumn columnStoreNumber;
            
            private global::System.Data.DataColumn columnOFD1FromDate;
            
            private global::System.Data.DataColumn columnOFD1ToDate;
            
            private global::System.Data.DataColumn columnPROID;
            
            private global::System.Data.DataColumn columnFirstActionID;
            
            private global::System.Data.DataColumn columnFirstActionDescription;
            
            private global::System.Data.DataColumn columnFirstActionCreated;
            
            private global::System.Data.DataColumn columnFirstActionUserID;
            
            private global::System.Data.DataColumn columnLastActionID;
            
            private global::System.Data.DataColumn columnLastActionDescription;
            
            private global::System.Data.DataColumn columnLastActionCreated;
            
            private global::System.Data.DataColumn columnLastActionUserID;
            
            private global::System.Data.DataColumn columnZone;
            
            private global::System.Data.DataColumn columnCoordinator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTableDataTable() {
                this.TableName = "IssueTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IssueTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IssueTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeIDColumn {
                get {
                    return this.columnTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactIDColumn {
                get {
                    return this.columnContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionNumberColumn {
                get {
                    return this.columnRegionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNumberColumn {
                get {
                    return this.columnDistrictNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNumberColumn {
                get {
                    return this.columnAgentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNumberColumn {
                get {
                    return this.columnStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD1FromDateColumn {
                get {
                    return this.columnOFD1FromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD1ToDateColumn {
                get {
                    return this.columnOFD1ToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROIDColumn {
                get {
                    return this.columnPROID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstActionIDColumn {
                get {
                    return this.columnFirstActionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstActionDescriptionColumn {
                get {
                    return this.columnFirstActionDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstActionCreatedColumn {
                get {
                    return this.columnFirstActionCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstActionUserIDColumn {
                get {
                    return this.columnFirstActionUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastActionIDColumn {
                get {
                    return this.columnLastActionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastActionDescriptionColumn {
                get {
                    return this.columnLastActionDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastActionCreatedColumn {
                get {
                    return this.columnLastActionCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastActionUserIDColumn {
                get {
                    return this.columnLastActionUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneColumn {
                get {
                    return this.columnZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoordinatorColumn {
                get {
                    return this.columnCoordinator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTableRow this[int index] {
                get {
                    return ((IssueTableRow)(this.Rows[index]));
                }
            }
            
            public event IssueTableRowChangeEventHandler IssueTableRowChanging;
            
            public event IssueTableRowChangeEventHandler IssueTableRowChanged;
            
            public event IssueTableRowChangeEventHandler IssueTableRowDeleting;
            
            public event IssueTableRowChangeEventHandler IssueTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIssueTableRow(IssueTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTableRow AddIssueTableRow(
                        long ID, 
                        int TypeID, 
                        string Type, 
                        string Subject, 
                        int ContactID, 
                        string ContactName, 
                        int CompanyID, 
                        string CompanyName, 
                        string RegionNumber, 
                        string DistrictNumber, 
                        string AgentNumber, 
                        int StoreNumber, 
                        System.DateTime OFD1FromDate, 
                        System.DateTime OFD1ToDate, 
                        long PROID, 
                        long FirstActionID, 
                        string FirstActionDescription, 
                        System.DateTime FirstActionCreated, 
                        string FirstActionUserID, 
                        long LastActionID, 
                        string LastActionDescription, 
                        System.DateTime LastActionCreated, 
                        string LastActionUserID, 
                        string Zone, 
                        string Coordinator) {
                IssueTableRow rowIssueTableRow = ((IssueTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        TypeID,
                        Type,
                        Subject,
                        ContactID,
                        ContactName,
                        CompanyID,
                        CompanyName,
                        RegionNumber,
                        DistrictNumber,
                        AgentNumber,
                        StoreNumber,
                        OFD1FromDate,
                        OFD1ToDate,
                        PROID,
                        FirstActionID,
                        FirstActionDescription,
                        FirstActionCreated,
                        FirstActionUserID,
                        LastActionID,
                        LastActionDescription,
                        LastActionCreated,
                        LastActionUserID,
                        Zone,
                        Coordinator};
                rowIssueTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIssueTableRow);
                return rowIssueTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IssueTableDataTable cln = ((IssueTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IssueTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTypeID = base.Columns["TypeID"];
                this.columnType = base.Columns["Type"];
                this.columnSubject = base.Columns["Subject"];
                this.columnContactID = base.Columns["ContactID"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnRegionNumber = base.Columns["RegionNumber"];
                this.columnDistrictNumber = base.Columns["DistrictNumber"];
                this.columnAgentNumber = base.Columns["AgentNumber"];
                this.columnStoreNumber = base.Columns["StoreNumber"];
                this.columnOFD1FromDate = base.Columns["OFD1FromDate"];
                this.columnOFD1ToDate = base.Columns["OFD1ToDate"];
                this.columnPROID = base.Columns["PROID"];
                this.columnFirstActionID = base.Columns["FirstActionID"];
                this.columnFirstActionDescription = base.Columns["FirstActionDescription"];
                this.columnFirstActionCreated = base.Columns["FirstActionCreated"];
                this.columnFirstActionUserID = base.Columns["FirstActionUserID"];
                this.columnLastActionID = base.Columns["LastActionID"];
                this.columnLastActionDescription = base.Columns["LastActionDescription"];
                this.columnLastActionCreated = base.Columns["LastActionCreated"];
                this.columnLastActionUserID = base.Columns["LastActionUserID"];
                this.columnZone = base.Columns["Zone"];
                this.columnCoordinator = base.Columns["Coordinator"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTypeID = new global::System.Data.DataColumn("TypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnContactID = new global::System.Data.DataColumn("ContactID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactID);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnRegionNumber = new global::System.Data.DataColumn("RegionNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionNumber);
                this.columnDistrictNumber = new global::System.Data.DataColumn("DistrictNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNumber);
                this.columnAgentNumber = new global::System.Data.DataColumn("AgentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNumber);
                this.columnStoreNumber = new global::System.Data.DataColumn("StoreNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreNumber);
                this.columnOFD1FromDate = new global::System.Data.DataColumn("OFD1FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD1FromDate);
                this.columnOFD1ToDate = new global::System.Data.DataColumn("OFD1ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD1ToDate);
                this.columnPROID = new global::System.Data.DataColumn("PROID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROID);
                this.columnFirstActionID = new global::System.Data.DataColumn("FirstActionID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstActionID);
                this.columnFirstActionDescription = new global::System.Data.DataColumn("FirstActionDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstActionDescription);
                this.columnFirstActionCreated = new global::System.Data.DataColumn("FirstActionCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstActionCreated);
                this.columnFirstActionUserID = new global::System.Data.DataColumn("FirstActionUserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstActionUserID);
                this.columnLastActionID = new global::System.Data.DataColumn("LastActionID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastActionID);
                this.columnLastActionDescription = new global::System.Data.DataColumn("LastActionDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastActionDescription);
                this.columnLastActionCreated = new global::System.Data.DataColumn("LastActionCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastActionCreated);
                this.columnLastActionUserID = new global::System.Data.DataColumn("LastActionUserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastActionUserID);
                this.columnZone = new global::System.Data.DataColumn("Zone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone);
                this.columnCoordinator = new global::System.Data.DataColumn("Coordinator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoordinator);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTableRow NewIssueTableRow() {
                return ((IssueTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IssueTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IssueTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IssueTableRowChanged != null)) {
                    this.IssueTableRowChanged(this, new IssueTableRowChangeEvent(((IssueTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IssueTableRowChanging != null)) {
                    this.IssueTableRowChanging(this, new IssueTableRowChangeEvent(((IssueTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IssueTableRowDeleted != null)) {
                    this.IssueTableRowDeleted(this, new IssueTableRowChangeEvent(((IssueTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IssueTableRowDeleting != null)) {
                    this.IssueTableRowDeleting(this, new IssueTableRowChangeEvent(((IssueTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIssueTableRow(IssueTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                IssueDS ds = new IssueDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IssueTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ActionTableDataTable : global::System.Data.TypedTableBase<ActionTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTypeID;
            
            private global::System.Data.DataColumn columnIssueID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnAttachments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTableDataTable() {
                this.TableName = "ActionTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ActionTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ActionTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeIDColumn {
                get {
                    return this.columnTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueIDColumn {
                get {
                    return this.columnIssueID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttachmentsColumn {
                get {
                    return this.columnAttachments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTableRow this[int index] {
                get {
                    return ((ActionTableRow)(this.Rows[index]));
                }
            }
            
            public event ActionTableRowChangeEventHandler ActionTableRowChanging;
            
            public event ActionTableRowChangeEventHandler ActionTableRowChanged;
            
            public event ActionTableRowChangeEventHandler ActionTableRowDeleting;
            
            public event ActionTableRowChangeEventHandler ActionTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddActionTableRow(ActionTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTableRow AddActionTableRow(long ID, byte TypeID, long IssueID, string UserID, System.DateTime Created, string Comment, int Attachments) {
                ActionTableRow rowActionTableRow = ((ActionTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        TypeID,
                        IssueID,
                        UserID,
                        Created,
                        Comment,
                        Attachments};
                rowActionTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowActionTableRow);
                return rowActionTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ActionTableDataTable cln = ((ActionTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ActionTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTypeID = base.Columns["TypeID"];
                this.columnIssueID = base.Columns["IssueID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnCreated = base.Columns["Created"];
                this.columnComment = base.Columns["Comment"];
                this.columnAttachments = base.Columns["Attachments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTypeID = new global::System.Data.DataColumn("TypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeID);
                this.columnIssueID = new global::System.Data.DataColumn("IssueID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAttachments = new global::System.Data.DataColumn("Attachments", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttachments);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTableRow NewActionTableRow() {
                return ((ActionTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ActionTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ActionTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ActionTableRowChanged != null)) {
                    this.ActionTableRowChanged(this, new ActionTableRowChangeEvent(((ActionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ActionTableRowChanging != null)) {
                    this.ActionTableRowChanging(this, new ActionTableRowChangeEvent(((ActionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ActionTableRowDeleted != null)) {
                    this.ActionTableRowDeleted(this, new ActionTableRowChangeEvent(((ActionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ActionTableRowDeleting != null)) {
                    this.ActionTableRowDeleting(this, new ActionTableRowChangeEvent(((ActionTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveActionTableRow(ActionTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                IssueDS ds = new IssueDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ActionTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AttachmentTableDataTable : global::System.Data.TypedTableBase<AttachmentTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFileName;
            
            private global::System.Data.DataColumn columnFile;
            
            private global::System.Data.DataColumn columnActionID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AttachmentTableDataTable() {
                this.TableName = "AttachmentTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AttachmentTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AttachmentTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileNameColumn {
                get {
                    return this.columnFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileColumn {
                get {
                    return this.columnFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActionIDColumn {
                get {
                    return this.columnActionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AttachmentTableRow this[int index] {
                get {
                    return ((AttachmentTableRow)(this.Rows[index]));
                }
            }
            
            public event AttachmentTableRowChangeEventHandler AttachmentTableRowChanging;
            
            public event AttachmentTableRowChangeEventHandler AttachmentTableRowChanged;
            
            public event AttachmentTableRowChangeEventHandler AttachmentTableRowDeleting;
            
            public event AttachmentTableRowChangeEventHandler AttachmentTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAttachmentTableRow(AttachmentTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AttachmentTableRow AddAttachmentTableRow(int ID, string FileName, byte[] File, long ActionID) {
                AttachmentTableRow rowAttachmentTableRow = ((AttachmentTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FileName,
                        File,
                        ActionID};
                rowAttachmentTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttachmentTableRow);
                return rowAttachmentTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AttachmentTableDataTable cln = ((AttachmentTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AttachmentTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFileName = base.Columns["FileName"];
                this.columnFile = base.Columns["File"];
                this.columnActionID = base.Columns["ActionID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFileName = new global::System.Data.DataColumn("FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnFile = new global::System.Data.DataColumn("File", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFile);
                this.columnActionID = new global::System.Data.DataColumn("ActionID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AttachmentTableRow NewAttachmentTableRow() {
                return ((AttachmentTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AttachmentTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AttachmentTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AttachmentTableRowChanged != null)) {
                    this.AttachmentTableRowChanged(this, new AttachmentTableRowChangeEvent(((AttachmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AttachmentTableRowChanging != null)) {
                    this.AttachmentTableRowChanging(this, new AttachmentTableRowChangeEvent(((AttachmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AttachmentTableRowDeleted != null)) {
                    this.AttachmentTableRowDeleted(this, new AttachmentTableRowChangeEvent(((AttachmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AttachmentTableRowDeleting != null)) {
                    this.AttachmentTableRowDeleting(this, new AttachmentTableRowChangeEvent(((AttachmentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAttachmentTableRow(AttachmentTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                IssueDS ds = new IssueDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AttachmentTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IssueTableRow : global::System.Data.DataRow {
            
            private IssueTableDataTable tableIssueTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IssueTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIssueTable = ((IssueTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableIssueTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TypeID {
                get {
                    try {
                        return ((int)(this[this.tableIssueTable.TypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.TypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactID {
                get {
                    try {
                        return ((int)(this[this.tableIssueTable.ContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.ContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableIssueTable.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegionNumber {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.RegionNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionNumber\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.RegionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictNumber {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.DistrictNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNumber\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.DistrictNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNumber {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.AgentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentNumber\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.AgentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreNumber {
                get {
                    try {
                        return ((int)(this[this.tableIssueTable.StoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreNumber\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.StoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD1FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIssueTable.OFD1FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD1FromDate\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.OFD1FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD1ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIssueTable.OFD1ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD1ToDate\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.OFD1ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PROID {
                get {
                    try {
                        return ((long)(this[this.tableIssueTable.PROIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.PROIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FirstActionID {
                get {
                    try {
                        return ((long)(this[this.tableIssueTable.FirstActionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstActionID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.FirstActionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstActionDescription {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.FirstActionDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstActionDescription\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.FirstActionDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FirstActionCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIssueTable.FirstActionCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstActionCreated\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.FirstActionCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstActionUserID {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.FirstActionUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstActionUserID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.FirstActionUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LastActionID {
                get {
                    try {
                        return ((long)(this[this.tableIssueTable.LastActionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastActionID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.LastActionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastActionDescription {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.LastActionDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastActionDescription\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.LastActionDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastActionCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIssueTable.LastActionCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastActionCreated\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.LastActionCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastActionUserID {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.LastActionUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastActionUserID\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.LastActionUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.ZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.ZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Coordinator {
                get {
                    try {
                        return ((string)(this[this.tableIssueTable.CoordinatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coordinator\' in table \'IssueTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIssueTable.CoordinatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableIssueTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableIssueTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeIDNull() {
                return this.IsNull(this.tableIssueTable.TypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeIDNull() {
                this[this.tableIssueTable.TypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableIssueTable.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableIssueTable.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableIssueTable.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNull() {
                this[this.tableIssueTable.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactIDNull() {
                return this.IsNull(this.tableIssueTable.ContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactIDNull() {
                this[this.tableIssueTable.ContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableIssueTable.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableIssueTable.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableIssueTable.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableIssueTable.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableIssueTable.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableIssueTable.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNumberNull() {
                return this.IsNull(this.tableIssueTable.RegionNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNumberNull() {
                this[this.tableIssueTable.RegionNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNumberNull() {
                return this.IsNull(this.tableIssueTable.DistrictNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNumberNull() {
                this[this.tableIssueTable.DistrictNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNumberNull() {
                return this.IsNull(this.tableIssueTable.AgentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNumberNull() {
                this[this.tableIssueTable.AgentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNumberNull() {
                return this.IsNull(this.tableIssueTable.StoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNumberNull() {
                this[this.tableIssueTable.StoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD1FromDateNull() {
                return this.IsNull(this.tableIssueTable.OFD1FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD1FromDateNull() {
                this[this.tableIssueTable.OFD1FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD1ToDateNull() {
                return this.IsNull(this.tableIssueTable.OFD1ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD1ToDateNull() {
                this[this.tableIssueTable.OFD1ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROIDNull() {
                return this.IsNull(this.tableIssueTable.PROIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROIDNull() {
                this[this.tableIssueTable.PROIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstActionIDNull() {
                return this.IsNull(this.tableIssueTable.FirstActionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstActionIDNull() {
                this[this.tableIssueTable.FirstActionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstActionDescriptionNull() {
                return this.IsNull(this.tableIssueTable.FirstActionDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstActionDescriptionNull() {
                this[this.tableIssueTable.FirstActionDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstActionCreatedNull() {
                return this.IsNull(this.tableIssueTable.FirstActionCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstActionCreatedNull() {
                this[this.tableIssueTable.FirstActionCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstActionUserIDNull() {
                return this.IsNull(this.tableIssueTable.FirstActionUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstActionUserIDNull() {
                this[this.tableIssueTable.FirstActionUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastActionIDNull() {
                return this.IsNull(this.tableIssueTable.LastActionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastActionIDNull() {
                this[this.tableIssueTable.LastActionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastActionDescriptionNull() {
                return this.IsNull(this.tableIssueTable.LastActionDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastActionDescriptionNull() {
                this[this.tableIssueTable.LastActionDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastActionCreatedNull() {
                return this.IsNull(this.tableIssueTable.LastActionCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastActionCreatedNull() {
                this[this.tableIssueTable.LastActionCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastActionUserIDNull() {
                return this.IsNull(this.tableIssueTable.LastActionUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastActionUserIDNull() {
                this[this.tableIssueTable.LastActionUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneNull() {
                return this.IsNull(this.tableIssueTable.ZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneNull() {
                this[this.tableIssueTable.ZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoordinatorNull() {
                return this.IsNull(this.tableIssueTable.CoordinatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoordinatorNull() {
                this[this.tableIssueTable.CoordinatorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ActionTableRow : global::System.Data.DataRow {
            
            private ActionTableDataTable tableActionTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ActionTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableActionTable = ((ActionTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableActionTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TypeID {
                get {
                    try {
                        return ((byte)(this[this.tableActionTable.TypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeID\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.TypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IssueID {
                get {
                    try {
                        return ((long)(this[this.tableActionTable.IssueIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueID\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.IssueIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableActionTable.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableActionTable.CreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableActionTable.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Attachments {
                get {
                    try {
                        return ((int)(this[this.tableActionTable.AttachmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attachments\' in table \'ActionTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActionTable.AttachmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableActionTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableActionTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeIDNull() {
                return this.IsNull(this.tableActionTable.TypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeIDNull() {
                this[this.tableActionTable.TypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueIDNull() {
                return this.IsNull(this.tableActionTable.IssueIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueIDNull() {
                this[this.tableActionTable.IssueIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableActionTable.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableActionTable.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedNull() {
                return this.IsNull(this.tableActionTable.CreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedNull() {
                this[this.tableActionTable.CreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableActionTable.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableActionTable.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttachmentsNull() {
                return this.IsNull(this.tableActionTable.AttachmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttachmentsNull() {
                this[this.tableActionTable.AttachmentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AttachmentTableRow : global::System.Data.DataRow {
            
            private AttachmentTableDataTable tableAttachmentTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AttachmentTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttachmentTable = ((AttachmentTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableAttachmentTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'AttachmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttachmentTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileName {
                get {
                    try {
                        return ((string)(this[this.tableAttachmentTable.FileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileName\' in table \'AttachmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttachmentTable.FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] File {
                get {
                    try {
                        return ((byte[])(this[this.tableAttachmentTable.FileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'File\' in table \'AttachmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttachmentTable.FileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ActionID {
                get {
                    try {
                        return ((long)(this[this.tableAttachmentTable.ActionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionID\' in table \'AttachmentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAttachmentTable.ActionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableAttachmentTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableAttachmentTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileNameNull() {
                return this.IsNull(this.tableAttachmentTable.FileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileNameNull() {
                this[this.tableAttachmentTable.FileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileNull() {
                return this.IsNull(this.tableAttachmentTable.FileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileNull() {
                this[this.tableAttachmentTable.FileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActionIDNull() {
                return this.IsNull(this.tableAttachmentTable.ActionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActionIDNull() {
                this[this.tableAttachmentTable.ActionIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IssueTableRowChangeEvent : global::System.EventArgs {
            
            private IssueTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTableRowChangeEvent(IssueTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IssueTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ActionTableRowChangeEvent : global::System.EventArgs {
            
            private ActionTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTableRowChangeEvent(ActionTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ActionTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AttachmentTableRowChangeEvent : global::System.EventArgs {
            
            private AttachmentTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AttachmentTableRowChangeEvent(AttachmentTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AttachmentTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssues", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssuesRequest {
        
        public GetIssuesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssuesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssuesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.IssueDS GetIssuesResult;
        
        public GetIssuesResponse() {
        }
        
        public GetIssuesResponse(Argix.Customers.IssueDS GetIssuesResult) {
            this.GetIssuesResult = GetIssuesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssuesForDate", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssuesForDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public System.DateTime fromDate;
        
        public GetIssuesForDateRequest() {
        }
        
        public GetIssuesForDateRequest(System.DateTime fromDate) {
            this.fromDate = fromDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssuesForDateResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssuesForDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.IssueDS GetIssuesForDateResult;
        
        public GetIssuesForDateResponse() {
        }
        
        public GetIssuesForDateResponse(Argix.Customers.IssueDS GetIssuesForDateResult) {
            this.GetIssuesForDateResult = GetIssuesForDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssue", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long issueID;
        
        public GetIssueRequest() {
        }
        
        public GetIssueRequest(long issueID) {
            this.issueID = issueID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.Issue GetIssueResult;
        
        public GetIssueResponse() {
        }
        
        public GetIssueResponse(Argix.Customers.Issue GetIssueResult) {
            this.GetIssueResult = GetIssueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueActions", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueActionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long issueID;
        
        public GetIssueActionsRequest() {
        }
        
        public GetIssueActionsRequest(long issueID) {
            this.issueID = issueID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueActionsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueActionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
        public Action[] GetIssueActionsResult;
        
        public GetIssueActionsResponse() {
        }
        
        public GetIssueActionsResponse(Action[] GetIssueActionsResult) {
            this.GetIssueActionsResult = GetIssueActionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActions", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long issueID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        public long actionID;
        
        public GetActionsRequest() {
        }
        
        public GetActionsRequest(long issueID, long actionID) {
            this.issueID = issueID;
            this.actionID = actionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
        public Action[] GetActionsResult;
        
        public GetActionsResponse() {
        }
        
        public GetActionsResponse(Action[] GetActionsResult) {
            this.GetActionsResult = GetActionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueAttachments", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueAttachmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long issueID;
        
        public GetIssueAttachmentsRequest() {
        }
        
        public GetIssueAttachmentsRequest(long issueID) {
            this.issueID = issueID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIssueAttachmentsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetIssueAttachmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
        public Attachment[] GetIssueAttachmentsResult;
        
        public GetIssueAttachmentsResponse() {
        }
        
        public GetIssueAttachmentsResponse(Attachment[] GetIssueAttachmentsResult) {
            this.GetIssueAttachmentsResult = GetIssueAttachmentsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAttachments", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAttachmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long issueID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        public long actionID;
        
        public GetAttachmentsRequest() {
        }
        
        public GetAttachmentsRequest(long issueID, long actionID) {
            this.issueID = issueID;
            this.actionID = actionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAttachmentsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAttachmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Argix.Customers")]
        public Attachment[] GetAttachmentsResult;
        
        public GetAttachmentsResponse() {
        }
        
        public GetAttachmentsResponse(Attachment[] GetAttachmentsResult) {
            this.GetAttachmentsResult = GetAttachmentsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAttachment", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int id;
        
        public GetAttachmentRequest() {
        }
        
        public GetAttachmentRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAttachmentResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] GetAttachmentResult;
        
        public GetAttachmentResponse() {
        }
        
        public GetAttachmentResponse(byte[] GetAttachmentResult) {
            this.GetAttachmentResult = GetAttachmentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateIssue", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.Issue issue;
        
        public CreateIssueRequest() {
        }
        
        public CreateIssueRequest(Argix.Customers.Issue issue) {
            this.issue = issue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateIssueResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateIssueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public long CreateIssueResult;
        
        public CreateIssueResponse() {
        }
        
        public CreateIssueResponse(long CreateIssueResult) {
            this.CreateIssueResult = CreateIssueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateIssueAction", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateIssueActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public byte typeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        public long issueID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment;
        
        public CreateIssueActionRequest() {
        }
        
        public CreateIssueActionRequest(byte typeID, long issueID, string userID, string comment) {
            this.typeID = typeID;
            this.issueID = issueID;
            this.userID = userID;
            this.comment = comment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateIssueActionResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateIssueActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public bool CreateIssueActionResult;
        
        public CreateIssueActionResponse() {
        }
        
        public CreateIssueActionResponse(bool CreateIssueActionResult) {
            this.CreateIssueActionResult = CreateIssueActionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateIssueAttachment", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateIssueAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string filename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] bytes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=2)]
        public long issueID;
        
        public CreateIssueAttachmentRequest() {
        }
        
        public CreateIssueAttachmentRequest(string filename, byte[] bytes, long issueID) {
            this.filename = filename;
            this.bytes = bytes;
            this.issueID = issueID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateIssueAttachmentResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class CreateIssueAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public bool CreateIssueAttachmentResult;
        
        public CreateIssueAttachmentResponse() {
        }
        
        public CreateIssueAttachmentResponse(bool CreateIssueAttachmentResult) {
            this.CreateIssueAttachmentResult = CreateIssueAttachmentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateIssue", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class UpdateIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.Issue issue;
        
        public UpdateIssueRequest() {
        }
        
        public UpdateIssueRequest(Argix.Customers.Issue issue) {
            this.issue = issue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateIssueResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class UpdateIssueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public bool UpdateIssueResult;
        
        public UpdateIssueResponse() {
        }
        
        public UpdateIssueResponse(bool UpdateIssueResult) {
            this.UpdateIssueResult = UpdateIssueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchIssues", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class SearchIssuesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string searchText;
        
        public SearchIssuesRequest() {
        }
        
        public SearchIssuesRequest(string searchText) {
            this.searchText = searchText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchIssuesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class SearchIssuesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.IssueDS SearchIssuesResult;
        
        public SearchIssuesResponse() {
        }
        
        public SearchIssuesResponse(Argix.Customers.IssueDS SearchIssuesResult) {
            this.SearchIssuesResult = SearchIssuesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchIssuesAdvanced", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class SearchIssuesAdvancedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] criteria;
        
        public SearchIssuesAdvancedRequest() {
        }
        
        public SearchIssuesAdvancedRequest(object[] criteria) {
            this.criteria = criteria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchIssuesAdvancedResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class SearchIssuesAdvancedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.IssueDS SearchIssuesAdvancedResult;
        
        public SearchIssuesAdvancedResponse() {
        }
        
        public SearchIssuesAdvancedResponse(Argix.Customers.IssueDS SearchIssuesAdvancedResult) {
            this.SearchIssuesAdvancedResult = SearchIssuesAdvancedResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CompanyDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CompanyDS : global::System.Data.DataSet {
        
        private CompanyTableDataTable tableCompanyTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CompanyDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CompanyDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CompanyTable"] != null)) {
                    base.Tables.Add(new CompanyTableDataTable(ds.Tables["CompanyTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyTableDataTable CompanyTable {
            get {
                return this.tableCompanyTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CompanyDS cln = ((CompanyDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CompanyTable"] != null)) {
                    base.Tables.Add(new CompanyTableDataTable(ds.Tables["CompanyTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCompanyTable = ((CompanyTableDataTable)(base.Tables["CompanyTable"]));
            if ((initTable == true)) {
                if ((this.tableCompanyTable != null)) {
                    this.tableCompanyTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CompanyDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CompanyDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCompanyTable = new CompanyTableDataTable();
            base.Tables.Add(this.tableCompanyTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompanyTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CompanyDS ds = new CompanyDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CompanyTableRowChangeEventHandler(object sender, CompanyTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyTableDataTable : global::System.Data.TypedTableBase<CompanyTableRow> {
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnCompanyType;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableDataTable() {
                this.TableName = "CompanyTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTypeColumn {
                get {
                    return this.columnCompanyType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow this[int index] {
                get {
                    return ((CompanyTableRow)(this.Rows[index]));
                }
            }
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowChanging;
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowChanged;
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowDeleting;
            
            public event CompanyTableRowChangeEventHandler CompanyTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyTableRow(CompanyTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow AddCompanyTableRow(int CompanyID, string CompanyName, string Number, string CompanyType, byte Status) {
                CompanyTableRow rowCompanyTableRow = ((CompanyTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompanyID,
                        CompanyName,
                        Number,
                        CompanyType,
                        Status};
                rowCompanyTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyTableRow);
                return rowCompanyTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyTableDataTable cln = ((CompanyTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnNumber = base.Columns["Number"];
                this.columnCompanyType = base.Columns["CompanyType"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnCompanyType = new global::System.Data.DataColumn("CompanyType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyType);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow NewCompanyTableRow() {
                return ((CompanyTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyTableRowChanged != null)) {
                    this.CompanyTableRowChanged(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyTableRowChanging != null)) {
                    this.CompanyTableRowChanging(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyTableRowDeleted != null)) {
                    this.CompanyTableRowDeleted(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyTableRowDeleting != null)) {
                    this.CompanyTableRowDeleting(this, new CompanyTableRowChangeEvent(((CompanyTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyTableRow(CompanyTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CompanyDS ds = new CompanyDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyTableRow : global::System.Data.DataRow {
            
            private CompanyTableDataTable tableCompanyTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompanyTable = ((CompanyTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableCompanyTable.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTable.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTable.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyType {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTable.CompanyTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyType\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.CompanyTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Status {
                get {
                    try {
                        return ((byte)(this[this.tableCompanyTable.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'CompanyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTable.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableCompanyTable.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableCompanyTable.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableCompanyTable.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableCompanyTable.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tableCompanyTable.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tableCompanyTable.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTypeNull() {
                return this.IsNull(this.tableCompanyTable.CompanyTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTypeNull() {
                this[this.tableCompanyTable.CompanyTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableCompanyTable.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableCompanyTable.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyTableRowChangeEvent : global::System.EventArgs {
            
            private CompanyTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRowChangeEvent(CompanyTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanies", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetCompaniesRequest {
        
        public GetCompaniesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompaniesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetCompaniesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.CompanyDS GetCompaniesResult;
        
        public GetCompaniesResponse() {
        }
        
        public GetCompaniesResponse(Argix.Customers.CompanyDS GetCompaniesResult) {
            this.GetCompaniesResult = GetCompaniesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveCompanies", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActiveCompaniesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public bool activeOnly;
        
        public GetActiveCompaniesRequest() {
        }
        
        public GetActiveCompaniesRequest(bool activeOnly) {
            this.activeOnly = activeOnly;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveCompaniesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetActiveCompaniesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.CompanyDS GetActiveCompaniesResult;
        
        public GetActiveCompaniesResponse() {
        }
        
        public GetActiveCompaniesResponse(Argix.Customers.CompanyDS GetActiveCompaniesResult) {
            this.GetActiveCompaniesResult = GetActiveCompaniesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompany", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int companyID;
        
        public GetCompanyRequest() {
        }
        
        public GetCompanyRequest(int companyID) {
            this.companyID = companyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetCompanyResult;
        
        public GetCompanyResponse() {
        }
        
        public GetCompanyResponse(string GetCompanyResult) {
            this.GetCompanyResult = GetCompanyResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LocationDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LocationDS : global::System.Data.DataSet {
        
        private LocationTableDataTable tableLocationTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LocationDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected LocationDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LocationTable"] != null)) {
                    base.Tables.Add(new LocationTableDataTable(ds.Tables["LocationTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LocationTableDataTable LocationTable {
            get {
                return this.tableLocationTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            LocationDS cln = ((LocationDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LocationTable"] != null)) {
                    base.Tables.Add(new LocationTableDataTable(ds.Tables["LocationTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableLocationTable = ((LocationTableDataTable)(base.Tables["LocationTable"]));
            if ((initTable == true)) {
                if ((this.tableLocationTable != null)) {
                    this.tableLocationTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "LocationDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LocationDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLocationTable = new LocationTableDataTable();
            base.Tables.Add(this.tableLocationTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLocationTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LocationDS ds = new LocationDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void LocationTableRowChangeEventHandler(object sender, LocationTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LocationTableDataTable : global::System.Data.TypedTableBase<LocationTableRow> {
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnLocationName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTableDataTable() {
                this.TableName = "LocationTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocationTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LocationTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationNameColumn {
                get {
                    return this.columnLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTableRow this[int index] {
                get {
                    return ((LocationTableRow)(this.Rows[index]));
                }
            }
            
            public event LocationTableRowChangeEventHandler LocationTableRowChanging;
            
            public event LocationTableRowChangeEventHandler LocationTableRowChanged;
            
            public event LocationTableRowChangeEventHandler LocationTableRowDeleting;
            
            public event LocationTableRowChangeEventHandler LocationTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLocationTableRow(LocationTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTableRow AddLocationTableRow(string Location, string LocationName) {
                LocationTableRow rowLocationTableRow = ((LocationTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Location,
                        LocationName};
                rowLocationTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLocationTableRow);
                return rowLocationTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LocationTableDataTable cln = ((LocationTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LocationTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLocation = base.Columns["Location"];
                this.columnLocationName = base.Columns["LocationName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnLocationName = new global::System.Data.DataColumn("LocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTableRow NewLocationTableRow() {
                return ((LocationTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LocationTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LocationTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LocationTableRowChanged != null)) {
                    this.LocationTableRowChanged(this, new LocationTableRowChangeEvent(((LocationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LocationTableRowChanging != null)) {
                    this.LocationTableRowChanging(this, new LocationTableRowChangeEvent(((LocationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LocationTableRowDeleted != null)) {
                    this.LocationTableRowDeleted(this, new LocationTableRowChangeEvent(((LocationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LocationTableRowDeleting != null)) {
                    this.LocationTableRowDeleting(this, new LocationTableRowChangeEvent(((LocationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLocationTableRow(LocationTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocationDS ds = new LocationDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LocationTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LocationTableRow : global::System.Data.DataRow {
            
            private LocationTableDataTable tableLocationTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocationTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLocationTable = ((LocationTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableLocationTable.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'LocationTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTable.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationName {
                get {
                    try {
                        return ((string)(this[this.tableLocationTable.LocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationName\' in table \'LocationTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTable.LocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableLocationTable.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableLocationTable.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNameNull() {
                return this.IsNull(this.tableLocationTable.LocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNameNull() {
                this[this.tableLocationTable.LocationNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LocationTableRowChangeEvent : global::System.EventArgs {
            
            private LocationTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTableRowChangeEvent(LocationTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDistricts", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetDistrictsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string clientNumber;
        
        public GetDistrictsRequest() {
        }
        
        public GetDistrictsRequest(string clientNumber) {
            this.clientNumber = clientNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDistrictsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetDistrictsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.LocationDS GetDistrictsResult;
        
        public GetDistrictsResponse() {
        }
        
        public GetDistrictsResponse(Argix.Customers.LocationDS GetDistrictsResult) {
            this.GetDistrictsResult = GetDistrictsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRegions", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetRegionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string clientNumber;
        
        public GetRegionsRequest() {
        }
        
        public GetRegionsRequest(string clientNumber) {
            this.clientNumber = clientNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRegionsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetRegionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.LocationDS GetRegionsResult;
        
        public GetRegionsResponse() {
        }
        
        public GetRegionsResponse(Argix.Customers.LocationDS GetRegionsResult) {
            this.GetRegionsResult = GetRegionsResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AgentDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AgentDS : global::System.Data.DataSet {
        
        private AgentTableDataTable tableAgentTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AgentDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AgentDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AgentTable"] != null)) {
                    base.Tables.Add(new AgentTableDataTable(ds.Tables["AgentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgentTableDataTable AgentTable {
            get {
                return this.tableAgentTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            AgentDS cln = ((AgentDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AgentTable"] != null)) {
                    base.Tables.Add(new AgentTableDataTable(ds.Tables["AgentTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAgentTable = ((AgentTableDataTable)(base.Tables["AgentTable"]));
            if ((initTable == true)) {
                if ((this.tableAgentTable != null)) {
                    this.tableAgentTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AgentDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AgentDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAgentTable = new AgentTableDataTable();
            base.Tables.Add(this.tableAgentTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAgentTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AgentDS ds = new AgentDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AgentTableRowChangeEventHandler(object sender, AgentTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AgentTableDataTable : global::System.Data.TypedTableBase<AgentTableRow> {
            
            private global::System.Data.DataColumn columnAgentNumber;
            
            private global::System.Data.DataColumn columnAgentName;
            
            private global::System.Data.DataColumn columnMainZone;
            
            private global::System.Data.DataColumn columnAgentParentNumber;
            
            private global::System.Data.DataColumn columnAgentSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableDataTable() {
                this.TableName = "AgentTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AgentTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNumberColumn {
                get {
                    return this.columnAgentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNameColumn {
                get {
                    return this.columnAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MainZoneColumn {
                get {
                    return this.columnMainZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentParentNumberColumn {
                get {
                    return this.columnAgentParentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentSummaryColumn {
                get {
                    return this.columnAgentSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow this[int index] {
                get {
                    return ((AgentTableRow)(this.Rows[index]));
                }
            }
            
            public event AgentTableRowChangeEventHandler AgentTableRowChanging;
            
            public event AgentTableRowChangeEventHandler AgentTableRowChanged;
            
            public event AgentTableRowChangeEventHandler AgentTableRowDeleting;
            
            public event AgentTableRowChangeEventHandler AgentTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAgentTableRow(AgentTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow AddAgentTableRow(string AgentNumber, string AgentName, string MainZone, string AgentParentNumber, string AgentSummary) {
                AgentTableRow rowAgentTableRow = ((AgentTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AgentNumber,
                        AgentName,
                        MainZone,
                        AgentParentNumber,
                        AgentSummary};
                rowAgentTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAgentTableRow);
                return rowAgentTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AgentTableDataTable cln = ((AgentTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AgentTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAgentNumber = base.Columns["AgentNumber"];
                this.columnAgentName = base.Columns["AgentName"];
                this.columnMainZone = base.Columns["MainZone"];
                this.columnAgentParentNumber = base.Columns["AgentParentNumber"];
                this.columnAgentSummary = base.Columns["AgentSummary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAgentNumber = new global::System.Data.DataColumn("AgentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNumber);
                this.columnAgentName = new global::System.Data.DataColumn("AgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentName);
                this.columnMainZone = new global::System.Data.DataColumn("MainZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainZone);
                this.columnAgentParentNumber = new global::System.Data.DataColumn("AgentParentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentParentNumber);
                this.columnAgentSummary = new global::System.Data.DataColumn("AgentSummary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentSummary);
                this.columnAgentNumber.AllowDBNull = false;
                this.columnAgentName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow NewAgentTableRow() {
                return ((AgentTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AgentTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AgentTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgentTableRowChanged != null)) {
                    this.AgentTableRowChanged(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgentTableRowChanging != null)) {
                    this.AgentTableRowChanging(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgentTableRowDeleted != null)) {
                    this.AgentTableRowDeleted(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgentTableRowDeleting != null)) {
                    this.AgentTableRowDeleting(this, new AgentTableRowChangeEvent(((AgentTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAgentTableRow(AgentTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AgentDS ds = new AgentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AgentTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AgentTableRow : global::System.Data.DataRow {
            
            private AgentTableDataTable tableAgentTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AgentTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgentTable = ((AgentTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNumber {
                get {
                    return ((string)(this[this.tableAgentTable.AgentNumberColumn]));
                }
                set {
                    this[this.tableAgentTable.AgentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentName {
                get {
                    return ((string)(this[this.tableAgentTable.AgentNameColumn]));
                }
                set {
                    this[this.tableAgentTable.AgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MainZone {
                get {
                    try {
                        return ((string)(this[this.tableAgentTable.MainZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainZone\' in table \'AgentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTable.MainZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentParentNumber {
                get {
                    try {
                        return ((string)(this[this.tableAgentTable.AgentParentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentParentNumber\' in table \'AgentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTable.AgentParentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentSummary {
                get {
                    try {
                        return ((string)(this[this.tableAgentTable.AgentSummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentSummary\' in table \'AgentTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgentTable.AgentSummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMainZoneNull() {
                return this.IsNull(this.tableAgentTable.MainZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMainZoneNull() {
                this[this.tableAgentTable.MainZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentParentNumberNull() {
                return this.IsNull(this.tableAgentTable.AgentParentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentParentNumberNull() {
                this[this.tableAgentTable.AgentParentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentSummaryNull() {
                return this.IsNull(this.tableAgentTable.AgentSummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentSummaryNull() {
                this[this.tableAgentTable.AgentSummaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AgentTableRowChangeEvent : global::System.EventArgs {
            
            private AgentTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRowChangeEvent(AgentTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AgentTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAgents", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAgentsRequest {
        
        public GetAgentsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAgentsResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAgentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.AgentDS GetAgentsResult;
        
        public GetAgentsResponse() {
        }
        
        public GetAgentsResponse(Argix.Customers.AgentDS GetAgentsResult) {
            this.GetAgentsResult = GetAgentsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAgentsForClient", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAgentsForClientRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string clientNumber;
        
        public GetAgentsForClientRequest() {
        }
        
        public GetAgentsForClientRequest(string clientNumber) {
            this.clientNumber = clientNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAgentsForClientResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetAgentsForClientResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.AgentDS GetAgentsForClientResult;
        
        public GetAgentsForClientResponse() {
        }
        
        public GetAgentsForClientResponse(Argix.Customers.AgentDS GetAgentsForClientResult) {
            this.GetAgentsForClientResult = GetAgentsForClientResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StoreDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StoreDS : global::System.Data.DataSet {
        
        private StoreTableDataTable tableStoreTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StoreDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StoreDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StoreTable"] != null)) {
                    base.Tables.Add(new StoreTableDataTable(ds.Tables["StoreTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StoreTableDataTable StoreTable {
            get {
                return this.tableStoreTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StoreDS cln = ((StoreDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StoreTable"] != null)) {
                    base.Tables.Add(new StoreTableDataTable(ds.Tables["StoreTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStoreTable = ((StoreTableDataTable)(base.Tables["StoreTable"]));
            if ((initTable == true)) {
                if ((this.tableStoreTable != null)) {
                    this.tableStoreTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StoreDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StoreDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStoreTable = new StoreTableDataTable();
            base.Tables.Add(this.tableStoreTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStoreTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StoreDS ds = new StoreDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StoreTableRowChangeEventHandler(object sender, StoreTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StoreTableDataTable : global::System.Data.TypedTableBase<StoreTableRow> {
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnClientNumber;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnStoreNumber;
            
            private global::System.Data.DataColumn columnSubStoreNumber;
            
            private global::System.Data.DataColumn columnSanNumber;
            
            private global::System.Data.DataColumn columnStoreName;
            
            private global::System.Data.DataColumn columnStoreAddressline1;
            
            private global::System.Data.DataColumn columnStoreAddressline2;
            
            private global::System.Data.DataColumn columnStoreCity;
            
            private global::System.Data.DataColumn columnStoreState;
            
            private global::System.Data.DataColumn columnStoreZip;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnWindowTimeStart;
            
            private global::System.Data.DataColumn columnWindowTimeEnd;
            
            private global::System.Data.DataColumn columnZone;
            
            private global::System.Data.DataColumn columnAgentNumber;
            
            private global::System.Data.DataColumn columnAgentName;
            
            private global::System.Data.DataColumn columnSpecialInstructions;
            
            private global::System.Data.DataColumn columnDivision;
            
            private global::System.Data.DataColumn columnDeliveryScanStatus;
            
            private global::System.Data.DataColumn columnScanStatusDescrption;
            
            private global::System.Data.DataColumn columnIsDeliveryDayMonday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayTuesday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayWednesday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayThursday;
            
            private global::System.Data.DataColumn columnIsDeliveryDayFriday;
            
            private global::System.Data.DataColumn columnIsOutforDeliveryDay1;
            
            private global::System.Data.DataColumn columnIsOutforDeliveryDay2;
            
            private global::System.Data.DataColumn columnStandardTransit;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnRegionDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableDataTable() {
                this.TableName = "StoreTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StoreTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StoreTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNumberColumn {
                get {
                    return this.columnClientNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNumberColumn {
                get {
                    return this.columnStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubStoreNumberColumn {
                get {
                    return this.columnSubStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SanNumberColumn {
                get {
                    return this.columnSanNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNameColumn {
                get {
                    return this.columnStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreAddressline1Column {
                get {
                    return this.columnStoreAddressline1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreAddressline2Column {
                get {
                    return this.columnStoreAddressline2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreCityColumn {
                get {
                    return this.columnStoreCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreStateColumn {
                get {
                    return this.columnStoreState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreZipColumn {
                get {
                    return this.columnStoreZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowTimeStartColumn {
                get {
                    return this.columnWindowTimeStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowTimeEndColumn {
                get {
                    return this.columnWindowTimeEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneColumn {
                get {
                    return this.columnZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNumberColumn {
                get {
                    return this.columnAgentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNameColumn {
                get {
                    return this.columnAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialInstructionsColumn {
                get {
                    return this.columnSpecialInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionColumn {
                get {
                    return this.columnDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryScanStatusColumn {
                get {
                    return this.columnDeliveryScanStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanStatusDescrptionColumn {
                get {
                    return this.columnScanStatusDescrption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayMondayColumn {
                get {
                    return this.columnIsDeliveryDayMonday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayTuesdayColumn {
                get {
                    return this.columnIsDeliveryDayTuesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayWednesdayColumn {
                get {
                    return this.columnIsDeliveryDayWednesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayThursdayColumn {
                get {
                    return this.columnIsDeliveryDayThursday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDeliveryDayFridayColumn {
                get {
                    return this.columnIsDeliveryDayFriday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOutforDeliveryDay1Column {
                get {
                    return this.columnIsOutforDeliveryDay1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsOutforDeliveryDay2Column {
                get {
                    return this.columnIsOutforDeliveryDay2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardTransitColumn {
                get {
                    return this.columnStandardTransit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionDescriptionColumn {
                get {
                    return this.columnRegionDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow this[int index] {
                get {
                    return ((StoreTableRow)(this.Rows[index]));
                }
            }
            
            public event StoreTableRowChangeEventHandler StoreTableRowChanging;
            
            public event StoreTableRowChangeEventHandler StoreTableRowChanged;
            
            public event StoreTableRowChangeEventHandler StoreTableRowDeleting;
            
            public event StoreTableRowChangeEventHandler StoreTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStoreTableRow(StoreTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow AddStoreTableRow(
                        int CompanyID, 
                        string ClientNumber, 
                        string ClientName, 
                        int StoreNumber, 
                        string SubStoreNumber, 
                        string SanNumber, 
                        string StoreName, 
                        string StoreAddressline1, 
                        string StoreAddressline2, 
                        string StoreCity, 
                        string StoreState, 
                        string StoreZip, 
                        string ContactName, 
                        string PhoneNumber, 
                        System.DateTime WindowTimeStart, 
                        System.DateTime WindowTimeEnd, 
                        string Zone, 
                        string AgentNumber, 
                        string AgentName, 
                        string SpecialInstructions, 
                        string Division, 
                        byte DeliveryScanStatus, 
                        string ScanStatusDescrption, 
                        string IsDeliveryDayMonday, 
                        string IsDeliveryDayTuesday, 
                        string IsDeliveryDayWednesday, 
                        string IsDeliveryDayThursday, 
                        string IsDeliveryDayFriday, 
                        string IsOutforDeliveryDay1, 
                        string IsOutforDeliveryDay2, 
                        byte StandardTransit, 
                        string District, 
                        string DistrictName, 
                        string Region, 
                        string RegionDescription) {
                StoreTableRow rowStoreTableRow = ((StoreTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompanyID,
                        ClientNumber,
                        ClientName,
                        StoreNumber,
                        SubStoreNumber,
                        SanNumber,
                        StoreName,
                        StoreAddressline1,
                        StoreAddressline2,
                        StoreCity,
                        StoreState,
                        StoreZip,
                        ContactName,
                        PhoneNumber,
                        WindowTimeStart,
                        WindowTimeEnd,
                        Zone,
                        AgentNumber,
                        AgentName,
                        SpecialInstructions,
                        Division,
                        DeliveryScanStatus,
                        ScanStatusDescrption,
                        IsDeliveryDayMonday,
                        IsDeliveryDayTuesday,
                        IsDeliveryDayWednesday,
                        IsDeliveryDayThursday,
                        IsDeliveryDayFriday,
                        IsOutforDeliveryDay1,
                        IsOutforDeliveryDay2,
                        StandardTransit,
                        District,
                        DistrictName,
                        Region,
                        RegionDescription};
                rowStoreTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStoreTableRow);
                return rowStoreTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StoreTableDataTable cln = ((StoreTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StoreTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnClientNumber = base.Columns["ClientNumber"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnStoreNumber = base.Columns["StoreNumber"];
                this.columnSubStoreNumber = base.Columns["SubStoreNumber"];
                this.columnSanNumber = base.Columns["SanNumber"];
                this.columnStoreName = base.Columns["StoreName"];
                this.columnStoreAddressline1 = base.Columns["StoreAddressline1"];
                this.columnStoreAddressline2 = base.Columns["StoreAddressline2"];
                this.columnStoreCity = base.Columns["StoreCity"];
                this.columnStoreState = base.Columns["StoreState"];
                this.columnStoreZip = base.Columns["StoreZip"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnWindowTimeStart = base.Columns["WindowTimeStart"];
                this.columnWindowTimeEnd = base.Columns["WindowTimeEnd"];
                this.columnZone = base.Columns["Zone"];
                this.columnAgentNumber = base.Columns["AgentNumber"];
                this.columnAgentName = base.Columns["AgentName"];
                this.columnSpecialInstructions = base.Columns["SpecialInstructions"];
                this.columnDivision = base.Columns["Division"];
                this.columnDeliveryScanStatus = base.Columns["DeliveryScanStatus"];
                this.columnScanStatusDescrption = base.Columns["ScanStatusDescrption"];
                this.columnIsDeliveryDayMonday = base.Columns["IsDeliveryDayMonday"];
                this.columnIsDeliveryDayTuesday = base.Columns["IsDeliveryDayTuesday"];
                this.columnIsDeliveryDayWednesday = base.Columns["IsDeliveryDayWednesday"];
                this.columnIsDeliveryDayThursday = base.Columns["IsDeliveryDayThursday"];
                this.columnIsDeliveryDayFriday = base.Columns["IsDeliveryDayFriday"];
                this.columnIsOutforDeliveryDay1 = base.Columns["IsOutforDeliveryDay1"];
                this.columnIsOutforDeliveryDay2 = base.Columns["IsOutforDeliveryDay2"];
                this.columnStandardTransit = base.Columns["StandardTransit"];
                this.columnDistrict = base.Columns["District"];
                this.columnDistrictName = base.Columns["DistrictName"];
                this.columnRegion = base.Columns["Region"];
                this.columnRegionDescription = base.Columns["RegionDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnClientNumber = new global::System.Data.DataColumn("ClientNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNumber);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnStoreNumber = new global::System.Data.DataColumn("StoreNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreNumber);
                this.columnSubStoreNumber = new global::System.Data.DataColumn("SubStoreNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubStoreNumber);
                this.columnSanNumber = new global::System.Data.DataColumn("SanNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSanNumber);
                this.columnStoreName = new global::System.Data.DataColumn("StoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreName);
                this.columnStoreAddressline1 = new global::System.Data.DataColumn("StoreAddressline1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreAddressline1);
                this.columnStoreAddressline2 = new global::System.Data.DataColumn("StoreAddressline2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreAddressline2);
                this.columnStoreCity = new global::System.Data.DataColumn("StoreCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreCity);
                this.columnStoreState = new global::System.Data.DataColumn("StoreState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreState);
                this.columnStoreZip = new global::System.Data.DataColumn("StoreZip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreZip);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnWindowTimeStart = new global::System.Data.DataColumn("WindowTimeStart", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowTimeStart);
                this.columnWindowTimeEnd = new global::System.Data.DataColumn("WindowTimeEnd", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowTimeEnd);
                this.columnZone = new global::System.Data.DataColumn("Zone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone);
                this.columnAgentNumber = new global::System.Data.DataColumn("AgentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNumber);
                this.columnAgentName = new global::System.Data.DataColumn("AgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentName);
                this.columnSpecialInstructions = new global::System.Data.DataColumn("SpecialInstructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialInstructions);
                this.columnDivision = new global::System.Data.DataColumn("Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision);
                this.columnDeliveryScanStatus = new global::System.Data.DataColumn("DeliveryScanStatus", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryScanStatus);
                this.columnScanStatusDescrption = new global::System.Data.DataColumn("ScanStatusDescrption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanStatusDescrption);
                this.columnIsDeliveryDayMonday = new global::System.Data.DataColumn("IsDeliveryDayMonday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayMonday);
                this.columnIsDeliveryDayTuesday = new global::System.Data.DataColumn("IsDeliveryDayTuesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayTuesday);
                this.columnIsDeliveryDayWednesday = new global::System.Data.DataColumn("IsDeliveryDayWednesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayWednesday);
                this.columnIsDeliveryDayThursday = new global::System.Data.DataColumn("IsDeliveryDayThursday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayThursday);
                this.columnIsDeliveryDayFriday = new global::System.Data.DataColumn("IsDeliveryDayFriday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeliveryDayFriday);
                this.columnIsOutforDeliveryDay1 = new global::System.Data.DataColumn("IsOutforDeliveryDay1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutforDeliveryDay1);
                this.columnIsOutforDeliveryDay2 = new global::System.Data.DataColumn("IsOutforDeliveryDay2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutforDeliveryDay2);
                this.columnStandardTransit = new global::System.Data.DataColumn("StandardTransit", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardTransit);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnRegionDescription = new global::System.Data.DataColumn("RegionDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow NewStoreTableRow() {
                return ((StoreTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StoreTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StoreTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StoreTableRowChanged != null)) {
                    this.StoreTableRowChanged(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StoreTableRowChanging != null)) {
                    this.StoreTableRowChanging(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StoreTableRowDeleted != null)) {
                    this.StoreTableRowDeleted(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StoreTableRowDeleting != null)) {
                    this.StoreTableRowDeleting(this, new StoreTableRowChangeEvent(((StoreTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStoreTableRow(StoreTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StoreDS ds = new StoreDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StoreTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StoreTableRow : global::System.Data.DataRow {
            
            private StoreTableDataTable tableStoreTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StoreTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStoreTable = ((StoreTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableStoreTable.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ClientNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ClientNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreNumber {
                get {
                    try {
                        return ((int)(this[this.tableStoreTable.StoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubStoreNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.SubStoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubStoreNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.SubStoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SanNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.SanNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SanNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.SanNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreAddressline1 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreAddressline1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreAddressline1\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreAddressline1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreAddressline2 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreAddressline2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreAddressline2\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreAddressline2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreCity {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreCity\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreState {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreState\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreZip {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.StoreZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreZip\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StoreZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.PhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowTimeStart {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStoreTable.WindowTimeStartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowTimeStart\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.WindowTimeStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowTimeEnd {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStoreTable.WindowTimeEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowTimeEnd\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.WindowTimeEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNumber {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.AgentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentNumber\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.AgentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.AgentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.AgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialInstructions {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.SpecialInstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialInstructions\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.SpecialInstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Division {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.DivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DeliveryScanStatus {
                get {
                    try {
                        return ((byte)(this[this.tableStoreTable.DeliveryScanStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryScanStatus\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DeliveryScanStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScanStatusDescrption {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.ScanStatusDescrptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanStatusDescrption\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.ScanStatusDescrptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayMonday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayMondayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayMonday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayMondayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayTuesday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayTuesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayTuesday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayTuesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayWednesday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayWednesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayWednesday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayWednesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayThursday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayThursdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayThursday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayThursdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsDeliveryDayFriday {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsDeliveryDayFridayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeliveryDayFriday\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsDeliveryDayFridayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsOutforDeliveryDay1 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsOutforDeliveryDay1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOutforDeliveryDay1\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsOutforDeliveryDay1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsOutforDeliveryDay2 {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.IsOutforDeliveryDay2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOutforDeliveryDay2\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.IsOutforDeliveryDay2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte StandardTransit {
                get {
                    try {
                        return ((byte)(this[this.tableStoreTable.StandardTransitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardTransit\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.StandardTransitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistrictName {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.DistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictName\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.DistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegionDescription {
                get {
                    try {
                        return ((string)(this[this.tableStoreTable.RegionDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionDescription\' in table \'StoreTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoreTable.RegionDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableStoreTable.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableStoreTable.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNumberNull() {
                return this.IsNull(this.tableStoreTable.ClientNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNumberNull() {
                this[this.tableStoreTable.ClientNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableStoreTable.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tableStoreTable.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNumberNull() {
                return this.IsNull(this.tableStoreTable.StoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNumberNull() {
                this[this.tableStoreTable.StoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubStoreNumberNull() {
                return this.IsNull(this.tableStoreTable.SubStoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubStoreNumberNull() {
                this[this.tableStoreTable.SubStoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSanNumberNull() {
                return this.IsNull(this.tableStoreTable.SanNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSanNumberNull() {
                this[this.tableStoreTable.SanNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNameNull() {
                return this.IsNull(this.tableStoreTable.StoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNameNull() {
                this[this.tableStoreTable.StoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreAddressline1Null() {
                return this.IsNull(this.tableStoreTable.StoreAddressline1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreAddressline1Null() {
                this[this.tableStoreTable.StoreAddressline1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreAddressline2Null() {
                return this.IsNull(this.tableStoreTable.StoreAddressline2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreAddressline2Null() {
                this[this.tableStoreTable.StoreAddressline2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreCityNull() {
                return this.IsNull(this.tableStoreTable.StoreCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreCityNull() {
                this[this.tableStoreTable.StoreCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreStateNull() {
                return this.IsNull(this.tableStoreTable.StoreStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreStateNull() {
                this[this.tableStoreTable.StoreStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreZipNull() {
                return this.IsNull(this.tableStoreTable.StoreZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreZipNull() {
                this[this.tableStoreTable.StoreZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableStoreTable.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableStoreTable.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableStoreTable.PhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNumberNull() {
                this[this.tableStoreTable.PhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowTimeStartNull() {
                return this.IsNull(this.tableStoreTable.WindowTimeStartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowTimeStartNull() {
                this[this.tableStoreTable.WindowTimeStartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowTimeEndNull() {
                return this.IsNull(this.tableStoreTable.WindowTimeEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowTimeEndNull() {
                this[this.tableStoreTable.WindowTimeEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneNull() {
                return this.IsNull(this.tableStoreTable.ZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneNull() {
                this[this.tableStoreTable.ZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNumberNull() {
                return this.IsNull(this.tableStoreTable.AgentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNumberNull() {
                this[this.tableStoreTable.AgentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNameNull() {
                return this.IsNull(this.tableStoreTable.AgentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNameNull() {
                this[this.tableStoreTable.AgentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialInstructionsNull() {
                return this.IsNull(this.tableStoreTable.SpecialInstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialInstructionsNull() {
                this[this.tableStoreTable.SpecialInstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNull() {
                return this.IsNull(this.tableStoreTable.DivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNull() {
                this[this.tableStoreTable.DivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryScanStatusNull() {
                return this.IsNull(this.tableStoreTable.DeliveryScanStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryScanStatusNull() {
                this[this.tableStoreTable.DeliveryScanStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanStatusDescrptionNull() {
                return this.IsNull(this.tableStoreTable.ScanStatusDescrptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanStatusDescrptionNull() {
                this[this.tableStoreTable.ScanStatusDescrptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayMondayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayMondayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayMondayNull() {
                this[this.tableStoreTable.IsDeliveryDayMondayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayTuesdayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayTuesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayTuesdayNull() {
                this[this.tableStoreTable.IsDeliveryDayTuesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayWednesdayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayWednesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayWednesdayNull() {
                this[this.tableStoreTable.IsDeliveryDayWednesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayThursdayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayThursdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayThursdayNull() {
                this[this.tableStoreTable.IsDeliveryDayThursdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDeliveryDayFridayNull() {
                return this.IsNull(this.tableStoreTable.IsDeliveryDayFridayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDeliveryDayFridayNull() {
                this[this.tableStoreTable.IsDeliveryDayFridayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOutforDeliveryDay1Null() {
                return this.IsNull(this.tableStoreTable.IsOutforDeliveryDay1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOutforDeliveryDay1Null() {
                this[this.tableStoreTable.IsOutforDeliveryDay1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsOutforDeliveryDay2Null() {
                return this.IsNull(this.tableStoreTable.IsOutforDeliveryDay2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsOutforDeliveryDay2Null() {
                this[this.tableStoreTable.IsOutforDeliveryDay2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardTransitNull() {
                return this.IsNull(this.tableStoreTable.StandardTransitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardTransitNull() {
                this[this.tableStoreTable.StandardTransitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableStoreTable.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableStoreTable.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNameNull() {
                return this.IsNull(this.tableStoreTable.DistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNameNull() {
                this[this.tableStoreTable.DistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tableStoreTable.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tableStoreTable.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionDescriptionNull() {
                return this.IsNull(this.tableStoreTable.RegionDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionDescriptionNull() {
                this[this.tableStoreTable.RegionDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StoreTableRowChangeEvent : global::System.EventArgs {
            
            private StoreTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRowChangeEvent(StoreTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StoreTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStoreDetail", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetStoreDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int companyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        public int storeNumber;
        
        public GetStoreDetailRequest() {
        }
        
        public GetStoreDetailRequest(int companyID, int storeNumber) {
            this.companyID = companyID;
            this.storeNumber = storeNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStoreDetailResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetStoreDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.StoreDS GetStoreDetailResult;
        
        public GetStoreDetailResponse() {
        }
        
        public GetStoreDetailResponse(Argix.Customers.StoreDS GetStoreDetailResult) {
            this.GetStoreDetailResult = GetStoreDetailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSubStoreDetail", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetSubStoreDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int companyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subStore;
        
        public GetSubStoreDetailRequest() {
        }
        
        public GetSubStoreDetailRequest(int companyID, string subStore) {
            this.companyID = companyID;
            this.subStore = subStore;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSubStoreDetailResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetSubStoreDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.StoreDS GetSubStoreDetailResult;
        
        public GetSubStoreDetailResponse() {
        }
        
        public GetSubStoreDetailResponse(Argix.Customers.StoreDS GetSubStoreDetailResult) {
            this.GetSubStoreDetailResult = GetSubStoreDetailResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DeliveryDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DeliveryDS : global::System.Data.DataSet {
        
        private DeliveryTableDataTable tableDeliveryTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DeliveryDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DeliveryDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DeliveryTable"] != null)) {
                    base.Tables.Add(new DeliveryTableDataTable(ds.Tables["DeliveryTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeliveryTableDataTable DeliveryTable {
            get {
                return this.tableDeliveryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DeliveryDS cln = ((DeliveryDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DeliveryTable"] != null)) {
                    base.Tables.Add(new DeliveryTableDataTable(ds.Tables["DeliveryTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDeliveryTable = ((DeliveryTableDataTable)(base.Tables["DeliveryTable"]));
            if ((initTable == true)) {
                if ((this.tableDeliveryTable != null)) {
                    this.tableDeliveryTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DeliveryDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DeliveryDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDeliveryTable = new DeliveryTableDataTable();
            base.Tables.Add(this.tableDeliveryTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeliveryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DeliveryDS ds = new DeliveryDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DeliveryTableRowChangeEventHandler(object sender, DeliveryTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeliveryTableDataTable : global::System.Data.TypedTableBase<DeliveryTableRow> {
            
            private global::System.Data.DataColumn columnCBOL;
            
            private global::System.Data.DataColumn columnCPROID;
            
            private global::System.Data.DataColumn columnCPRONumber;
            
            private global::System.Data.DataColumn columnStoreNumber;
            
            private global::System.Data.DataColumn columnOFD1;
            
            private global::System.Data.DataColumn columnOFD2;
            
            private global::System.Data.DataColumn columnPodDate;
            
            private global::System.Data.DataColumn columnPodTime;
            
            private global::System.Data.DataColumn columnShouldBeDeliveredOn;
            
            private global::System.Data.DataColumn columnWindowStartTime;
            
            private global::System.Data.DataColumn columnWindowEndTime;
            
            private global::System.Data.DataColumn columnCartonsSorted;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnTLS;
            
            private global::System.Data.DataColumn columnPODCartonsMatch;
            
            private global::System.Data.DataColumn columnPODCartonsShort;
            
            private global::System.Data.DataColumn columnPODCartonsOver;
            
            private global::System.Data.DataColumn columnPODCartonsMisroute;
            
            private global::System.Data.DataColumn columnPODCartonsDamaged;
            
            private global::System.Data.DataColumn columnPODCartonsScanned;
            
            private global::System.Data.DataColumn columnPODCartonsManual;
            
            private global::System.Data.DataColumn columnOSDCartonsMatch;
            
            private global::System.Data.DataColumn columnOSDCartonsShort;
            
            private global::System.Data.DataColumn columnOSDCartonsOver;
            
            private global::System.Data.DataColumn columnOSDCartonsMisroute;
            
            private global::System.Data.DataColumn columnOSDCartonsDamaged;
            
            private global::System.Data.DataColumn columnOSDCartonsScanned;
            
            private global::System.Data.DataColumn columnOSDCartonsManual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableDataTable() {
                this.TableName = "DeliveryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeliveryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CBOLColumn {
                get {
                    return this.columnCBOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPROIDColumn {
                get {
                    return this.columnCPROID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPRONumberColumn {
                get {
                    return this.columnCPRONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNumberColumn {
                get {
                    return this.columnStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD1Column {
                get {
                    return this.columnOFD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD2Column {
                get {
                    return this.columnOFD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PodDateColumn {
                get {
                    return this.columnPodDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PodTimeColumn {
                get {
                    return this.columnPodTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShouldBeDeliveredOnColumn {
                get {
                    return this.columnShouldBeDeliveredOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowStartTimeColumn {
                get {
                    return this.columnWindowStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowEndTimeColumn {
                get {
                    return this.columnWindowEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsSortedColumn {
                get {
                    return this.columnCartonsSorted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLSColumn {
                get {
                    return this.columnTLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsMatchColumn {
                get {
                    return this.columnPODCartonsMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsShortColumn {
                get {
                    return this.columnPODCartonsShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsOverColumn {
                get {
                    return this.columnPODCartonsOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsMisrouteColumn {
                get {
                    return this.columnPODCartonsMisroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsDamagedColumn {
                get {
                    return this.columnPODCartonsDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsScannedColumn {
                get {
                    return this.columnPODCartonsScanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsManualColumn {
                get {
                    return this.columnPODCartonsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsMatchColumn {
                get {
                    return this.columnOSDCartonsMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsShortColumn {
                get {
                    return this.columnOSDCartonsShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsOverColumn {
                get {
                    return this.columnOSDCartonsOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsMisrouteColumn {
                get {
                    return this.columnOSDCartonsMisroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsDamagedColumn {
                get {
                    return this.columnOSDCartonsDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsScannedColumn {
                get {
                    return this.columnOSDCartonsScanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsManualColumn {
                get {
                    return this.columnOSDCartonsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow this[int index] {
                get {
                    return ((DeliveryTableRow)(this.Rows[index]));
                }
            }
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowChanging;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowChanged;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowDeleting;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeliveryTableRow(DeliveryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow AddDeliveryTableRow(
                        string CBOL, 
                        long CPROID, 
                        long CPRONumber, 
                        int StoreNumber, 
                        System.DateTime OFD1, 
                        System.DateTime OFD2, 
                        System.DateTime PodDate, 
                        System.DateTime PodTime, 
                        System.DateTime ShouldBeDeliveredOn, 
                        System.DateTime WindowStartTime, 
                        System.DateTime WindowEndTime, 
                        int CartonsSorted, 
                        int Weight, 
                        string TLS, 
                        int PODCartonsMatch, 
                        int PODCartonsShort, 
                        int PODCartonsOver, 
                        int PODCartonsMisroute, 
                        int PODCartonsDamaged, 
                        int PODCartonsScanned, 
                        int PODCartonsManual, 
                        int OSDCartonsMatch, 
                        int OSDCartonsShort, 
                        int OSDCartonsOver, 
                        int OSDCartonsMisroute, 
                        int OSDCartonsDamaged, 
                        int OSDCartonsScanned, 
                        int OSDCartonsManual) {
                DeliveryTableRow rowDeliveryTableRow = ((DeliveryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CBOL,
                        CPROID,
                        CPRONumber,
                        StoreNumber,
                        OFD1,
                        OFD2,
                        PodDate,
                        PodTime,
                        ShouldBeDeliveredOn,
                        WindowStartTime,
                        WindowEndTime,
                        CartonsSorted,
                        Weight,
                        TLS,
                        PODCartonsMatch,
                        PODCartonsShort,
                        PODCartonsOver,
                        PODCartonsMisroute,
                        PODCartonsDamaged,
                        PODCartonsScanned,
                        PODCartonsManual,
                        OSDCartonsMatch,
                        OSDCartonsShort,
                        OSDCartonsOver,
                        OSDCartonsMisroute,
                        OSDCartonsDamaged,
                        OSDCartonsScanned,
                        OSDCartonsManual};
                rowDeliveryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDeliveryTableRow);
                return rowDeliveryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DeliveryTableDataTable cln = ((DeliveryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DeliveryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCBOL = base.Columns["CBOL"];
                this.columnCPROID = base.Columns["CPROID"];
                this.columnCPRONumber = base.Columns["CPRONumber"];
                this.columnStoreNumber = base.Columns["StoreNumber"];
                this.columnOFD1 = base.Columns["OFD1"];
                this.columnOFD2 = base.Columns["OFD2"];
                this.columnPodDate = base.Columns["PodDate"];
                this.columnPodTime = base.Columns["PodTime"];
                this.columnShouldBeDeliveredOn = base.Columns["ShouldBeDeliveredOn"];
                this.columnWindowStartTime = base.Columns["WindowStartTime"];
                this.columnWindowEndTime = base.Columns["WindowEndTime"];
                this.columnCartonsSorted = base.Columns["CartonsSorted"];
                this.columnWeight = base.Columns["Weight"];
                this.columnTLS = base.Columns["TLS"];
                this.columnPODCartonsMatch = base.Columns["PODCartonsMatch"];
                this.columnPODCartonsShort = base.Columns["PODCartonsShort"];
                this.columnPODCartonsOver = base.Columns["PODCartonsOver"];
                this.columnPODCartonsMisroute = base.Columns["PODCartonsMisroute"];
                this.columnPODCartonsDamaged = base.Columns["PODCartonsDamaged"];
                this.columnPODCartonsScanned = base.Columns["PODCartonsScanned"];
                this.columnPODCartonsManual = base.Columns["PODCartonsManual"];
                this.columnOSDCartonsMatch = base.Columns["OSDCartonsMatch"];
                this.columnOSDCartonsShort = base.Columns["OSDCartonsShort"];
                this.columnOSDCartonsOver = base.Columns["OSDCartonsOver"];
                this.columnOSDCartonsMisroute = base.Columns["OSDCartonsMisroute"];
                this.columnOSDCartonsDamaged = base.Columns["OSDCartonsDamaged"];
                this.columnOSDCartonsScanned = base.Columns["OSDCartonsScanned"];
                this.columnOSDCartonsManual = base.Columns["OSDCartonsManual"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCBOL = new global::System.Data.DataColumn("CBOL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBOL);
                this.columnCPROID = new global::System.Data.DataColumn("CPROID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPROID);
                this.columnCPRONumber = new global::System.Data.DataColumn("CPRONumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPRONumber);
                this.columnStoreNumber = new global::System.Data.DataColumn("StoreNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreNumber);
                this.columnOFD1 = new global::System.Data.DataColumn("OFD1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD1);
                this.columnOFD2 = new global::System.Data.DataColumn("OFD2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD2);
                this.columnPodDate = new global::System.Data.DataColumn("PodDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodDate);
                this.columnPodTime = new global::System.Data.DataColumn("PodTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodTime);
                this.columnShouldBeDeliveredOn = new global::System.Data.DataColumn("ShouldBeDeliveredOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShouldBeDeliveredOn);
                this.columnWindowStartTime = new global::System.Data.DataColumn("WindowStartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowStartTime);
                this.columnWindowEndTime = new global::System.Data.DataColumn("WindowEndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowEndTime);
                this.columnCartonsSorted = new global::System.Data.DataColumn("CartonsSorted", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonsSorted);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnTLS = new global::System.Data.DataColumn("TLS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLS);
                this.columnPODCartonsMatch = new global::System.Data.DataColumn("PODCartonsMatch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsMatch);
                this.columnPODCartonsShort = new global::System.Data.DataColumn("PODCartonsShort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsShort);
                this.columnPODCartonsOver = new global::System.Data.DataColumn("PODCartonsOver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsOver);
                this.columnPODCartonsMisroute = new global::System.Data.DataColumn("PODCartonsMisroute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsMisroute);
                this.columnPODCartonsDamaged = new global::System.Data.DataColumn("PODCartonsDamaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsDamaged);
                this.columnPODCartonsScanned = new global::System.Data.DataColumn("PODCartonsScanned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsScanned);
                this.columnPODCartonsManual = new global::System.Data.DataColumn("PODCartonsManual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsManual);
                this.columnOSDCartonsMatch = new global::System.Data.DataColumn("OSDCartonsMatch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsMatch);
                this.columnOSDCartonsShort = new global::System.Data.DataColumn("OSDCartonsShort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsShort);
                this.columnOSDCartonsOver = new global::System.Data.DataColumn("OSDCartonsOver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsOver);
                this.columnOSDCartonsMisroute = new global::System.Data.DataColumn("OSDCartonsMisroute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsMisroute);
                this.columnOSDCartonsDamaged = new global::System.Data.DataColumn("OSDCartonsDamaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsDamaged);
                this.columnOSDCartonsScanned = new global::System.Data.DataColumn("OSDCartonsScanned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsScanned);
                this.columnOSDCartonsManual = new global::System.Data.DataColumn("OSDCartonsManual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsManual);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow NewDeliveryTableRow() {
                return ((DeliveryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DeliveryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DeliveryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeliveryTableRowChanged != null)) {
                    this.DeliveryTableRowChanged(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeliveryTableRowChanging != null)) {
                    this.DeliveryTableRowChanging(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeliveryTableRowDeleted != null)) {
                    this.DeliveryTableRowDeleted(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeliveryTableRowDeleting != null)) {
                    this.DeliveryTableRowDeleting(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeliveryTableRow(DeliveryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DeliveryDS ds = new DeliveryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeliveryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeliveryTableRow : global::System.Data.DataRow {
            
            private DeliveryTableDataTable tableDeliveryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeliveryTable = ((DeliveryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CBOL {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryTable.CBOLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBOL\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CBOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPROID {
                get {
                    try {
                        return ((long)(this[this.tableDeliveryTable.CPROIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPROID\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CPROIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPRONumber {
                get {
                    try {
                        return ((long)(this[this.tableDeliveryTable.CPRONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPRONumber\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CPRONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreNumber {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.StoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreNumber\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.StoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.OFD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD1\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OFD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.OFD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD2\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OFD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PodDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.PodDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PodDate\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PodDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PodTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.PodTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PodTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PodTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShouldBeDeliveredOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShouldBeDeliveredOn\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowStartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.WindowStartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowStartTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WindowStartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowEndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.WindowEndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowEndTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WindowEndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CartonsSorted {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.CartonsSortedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonsSorted\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CartonsSortedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLS {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryTable.TLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLS\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.TLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsMatch {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsMatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsMatch\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsMatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsShort {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsShort\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsOver {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsOver\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsMisroute {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsMisrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsMisroute\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsMisrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsDamaged {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsDamagedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsDamaged\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsScanned {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsScanned\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsScannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsManual {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsManualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsManual\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsMatch {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsMatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsMatch\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsMatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsShort {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsShort\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsOver {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsOver\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsMisroute {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsMisrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsMisroute\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsMisrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsDamaged {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsDamagedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsDamaged\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsScanned {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsScanned\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsScannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsManual {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsManualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsManual\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCBOLNull() {
                return this.IsNull(this.tableDeliveryTable.CBOLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCBOLNull() {
                this[this.tableDeliveryTable.CBOLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPROIDNull() {
                return this.IsNull(this.tableDeliveryTable.CPROIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPROIDNull() {
                this[this.tableDeliveryTable.CPROIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPRONumberNull() {
                return this.IsNull(this.tableDeliveryTable.CPRONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPRONumberNull() {
                this[this.tableDeliveryTable.CPRONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNumberNull() {
                return this.IsNull(this.tableDeliveryTable.StoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNumberNull() {
                this[this.tableDeliveryTable.StoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD1Null() {
                return this.IsNull(this.tableDeliveryTable.OFD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD1Null() {
                this[this.tableDeliveryTable.OFD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD2Null() {
                return this.IsNull(this.tableDeliveryTable.OFD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD2Null() {
                this[this.tableDeliveryTable.OFD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPodDateNull() {
                return this.IsNull(this.tableDeliveryTable.PodDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPodDateNull() {
                this[this.tableDeliveryTable.PodDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPodTimeNull() {
                return this.IsNull(this.tableDeliveryTable.PodTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPodTimeNull() {
                this[this.tableDeliveryTable.PodTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShouldBeDeliveredOnNull() {
                return this.IsNull(this.tableDeliveryTable.ShouldBeDeliveredOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShouldBeDeliveredOnNull() {
                this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowStartTimeNull() {
                return this.IsNull(this.tableDeliveryTable.WindowStartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowStartTimeNull() {
                this[this.tableDeliveryTable.WindowStartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowEndTimeNull() {
                return this.IsNull(this.tableDeliveryTable.WindowEndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowEndTimeNull() {
                this[this.tableDeliveryTable.WindowEndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsSortedNull() {
                return this.IsNull(this.tableDeliveryTable.CartonsSortedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsSortedNull() {
                this[this.tableDeliveryTable.CartonsSortedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableDeliveryTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableDeliveryTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLSNull() {
                return this.IsNull(this.tableDeliveryTable.TLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLSNull() {
                this[this.tableDeliveryTable.TLSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsMatchNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsMatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsMatchNull() {
                this[this.tableDeliveryTable.PODCartonsMatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsShortNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsShortNull() {
                this[this.tableDeliveryTable.PODCartonsShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsOverNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsOverNull() {
                this[this.tableDeliveryTable.PODCartonsOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsMisrouteNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsMisrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsMisrouteNull() {
                this[this.tableDeliveryTable.PODCartonsMisrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsDamagedNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsDamagedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsDamagedNull() {
                this[this.tableDeliveryTable.PODCartonsDamagedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsScannedNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsScannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsScannedNull() {
                this[this.tableDeliveryTable.PODCartonsScannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsManualNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsManualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsManualNull() {
                this[this.tableDeliveryTable.PODCartonsManualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsMatchNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsMatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsMatchNull() {
                this[this.tableDeliveryTable.OSDCartonsMatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsShortNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsShortNull() {
                this[this.tableDeliveryTable.OSDCartonsShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsOverNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsOverNull() {
                this[this.tableDeliveryTable.OSDCartonsOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsMisrouteNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsMisrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsMisrouteNull() {
                this[this.tableDeliveryTable.OSDCartonsMisrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsDamagedNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsDamagedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsDamagedNull() {
                this[this.tableDeliveryTable.OSDCartonsDamagedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsScannedNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsScannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsScannedNull() {
                this[this.tableDeliveryTable.OSDCartonsScannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsManualNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsManualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsManualNull() {
                this[this.tableDeliveryTable.OSDCartonsManualColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeliveryTableRowChangeEvent : global::System.EventArgs {
            
            private DeliveryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRowChangeEvent(DeliveryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeliveries", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetDeliveriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int companyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        public int storeNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=2)]
        public System.DateTime from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=3)]
        public System.DateTime to;
        
        public GetDeliveriesRequest() {
        }
        
        public GetDeliveriesRequest(int companyID, int storeNumber, System.DateTime from, System.DateTime to) {
            this.companyID = companyID;
            this.storeNumber = storeNumber;
            this.from = from;
            this.to = to;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeliveriesResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetDeliveriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.DeliveryDS GetDeliveriesResult;
        
        public GetDeliveriesResponse() {
        }
        
        public GetDeliveriesResponse(Argix.Customers.DeliveryDS GetDeliveriesResult) {
            this.GetDeliveriesResult = GetDeliveriesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDelivery", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetDeliveryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        public int companyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=1)]
        public int storeNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=2)]
        public System.DateTime from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=3)]
        public System.DateTime to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=4)]
        public long proID;
        
        public GetDeliveryRequest() {
        }
        
        public GetDeliveryRequest(int companyID, int storeNumber, System.DateTime from, System.DateTime to, long proID) {
            this.companyID = companyID;
            this.storeNumber = storeNumber;
            this.from = from;
            this.to = to;
            this.proID = proID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeliveryResponse", WrapperNamespace="http://Argix.Customers", IsWrapped=true)]
    public partial class GetDeliveryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Argix.Customers", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Argix.Customers.DeliveryDS GetDeliveryResult;
        
        public GetDeliveryResponse() {
        }
        
        public GetDeliveryResponse(Argix.Customers.DeliveryDS GetDeliveryResult) {
            this.GetDeliveryResult = GetDeliveryResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IIssueMgtServiceChannel : Argix.Customers.IIssueMgtService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class IssueMgtServiceClient : System.ServiceModel.ClientBase<Argix.Customers.IIssueMgtService>, Argix.Customers.IIssueMgtService {
        
        public IssueMgtServiceClient() {
        }
        
        public IssueMgtServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IssueMgtServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueMgtServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IssueMgtServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetOSDScansResponse Argix.Customers.IIssueMgtService.GetOSDScans(Argix.Customers.GetOSDScansRequest request) {
            return base.Channel.GetOSDScans(request);
        }
        
        public Argix.Customers.ScanDS GetOSDScans(long cProID) {
            Argix.Customers.GetOSDScansRequest inValue = new Argix.Customers.GetOSDScansRequest();
            inValue.cProID = cProID;
            Argix.Customers.GetOSDScansResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetOSDScans(inValue);
            return retVal.GetOSDScansResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetPODScansResponse Argix.Customers.IIssueMgtService.GetPODScans(Argix.Customers.GetPODScansRequest request) {
            return base.Channel.GetPODScans(request);
        }
        
        public Argix.Customers.ScanDS GetPODScans(long cProID) {
            Argix.Customers.GetPODScansRequest inValue = new Argix.Customers.GetPODScansRequest();
            inValue.cProID = cProID;
            Argix.Customers.GetPODScansResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetPODScans(inValue);
            return retVal.GetPODScansResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetContactsResponse Argix.Customers.IIssueMgtService.GetContacts(Argix.Customers.GetContactsRequest request) {
            return base.Channel.GetContacts(request);
        }
        
        public Argix.Customers.ContactDS GetContacts() {
            Argix.Customers.GetContactsRequest inValue = new Argix.Customers.GetContactsRequest();
            Argix.Customers.GetContactsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetContacts(inValue);
            return retVal.GetContactsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetContactsForLocationResponse Argix.Customers.IIssueMgtService.GetContactsForLocation(Argix.Customers.GetContactsForLocationRequest request) {
            return base.Channel.GetContactsForLocation(request);
        }
        
        public Argix.Customers.ContactDS GetContactsForLocation(int companyID, string regionNumber, string districtNumber, string agentNumber, string storeNumber) {
            Argix.Customers.GetContactsForLocationRequest inValue = new Argix.Customers.GetContactsForLocationRequest();
            inValue.companyID = companyID;
            inValue.regionNumber = regionNumber;
            inValue.districtNumber = districtNumber;
            inValue.agentNumber = agentNumber;
            inValue.storeNumber = storeNumber;
            Argix.Customers.GetContactsForLocationResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetContactsForLocation(inValue);
            return retVal.GetContactsForLocationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetContactResponse Argix.Customers.IIssueMgtService.GetContact(Argix.Customers.GetContactRequest request) {
            return base.Channel.GetContact(request);
        }
        
        public Argix.Customers.Contact GetContact(int contactID) {
            Argix.Customers.GetContactRequest inValue = new Argix.Customers.GetContactRequest();
            inValue.contactID = contactID;
            Argix.Customers.GetContactResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetContact(inValue);
            return retVal.GetContactResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.CreateContactResponse Argix.Customers.IIssueMgtService.CreateContact(Argix.Customers.CreateContactRequest request) {
            return base.Channel.CreateContact(request);
        }
        
        public int CreateContact(Argix.Customers.Contact contact) {
            Argix.Customers.CreateContactRequest inValue = new Argix.Customers.CreateContactRequest();
            inValue.contact = contact;
            Argix.Customers.CreateContactResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).CreateContact(inValue);
            return retVal.CreateContactResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.UpdateContactResponse Argix.Customers.IIssueMgtService.UpdateContact(Argix.Customers.UpdateContactRequest request) {
            return base.Channel.UpdateContact(request);
        }
        
        public bool UpdateContact(Argix.Customers.Contact contact) {
            Argix.Customers.UpdateContactRequest inValue = new Argix.Customers.UpdateContactRequest();
            inValue.contact = contact;
            Argix.Customers.UpdateContactResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).UpdateContact(inValue);
            return retVal.UpdateContactResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetTerminalInfoResponse Argix.Customers.IIssueMgtService.GetTerminalInfo(Argix.Customers.GetTerminalInfoRequest request) {
            return base.Channel.GetTerminalInfo(request);
        }
        
        public Argix.Customers.TerminalInfo GetTerminalInfo() {
            Argix.Customers.GetTerminalInfoRequest inValue = new Argix.Customers.GetTerminalInfoRequest();
            Argix.Customers.GetTerminalInfoResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetTerminalInfo(inValue);
            return retVal.GetTerminalInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueCategorysResponse Argix.Customers.IIssueMgtService.GetIssueCategorys(Argix.Customers.GetIssueCategorysRequest request) {
            return base.Channel.GetIssueCategorys(request);
        }
        
        public Argix.Customers.IssueTypeDS GetIssueCategorys() {
            Argix.Customers.GetIssueCategorysRequest inValue = new Argix.Customers.GetIssueCategorysRequest();
            Argix.Customers.GetIssueCategorysResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssueCategorys(inValue);
            return retVal.GetIssueCategorysResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueTypesResponse Argix.Customers.IIssueMgtService.GetIssueTypes(Argix.Customers.GetIssueTypesRequest request) {
            return base.Channel.GetIssueTypes(request);
        }
        
        public Argix.Customers.IssueTypeDS GetIssueTypes(string issueCategory) {
            Argix.Customers.GetIssueTypesRequest inValue = new Argix.Customers.GetIssueTypesRequest();
            inValue.issueCategory = issueCategory;
            Argix.Customers.GetIssueTypesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssueTypes(inValue);
            return retVal.GetIssueTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueTypeResponse Argix.Customers.IIssueMgtService.GetIssueType(Argix.Customers.GetIssueTypeRequest request) {
            return base.Channel.GetIssueType(request);
        }
        
        public string GetIssueType(int typeID) {
            Argix.Customers.GetIssueTypeRequest inValue = new Argix.Customers.GetIssueTypeRequest();
            inValue.typeID = typeID;
            Argix.Customers.GetIssueTypeResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssueType(inValue);
            return retVal.GetIssueTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetActionTypesResponse Argix.Customers.IIssueMgtService.GetActionTypes(Argix.Customers.GetActionTypesRequest request) {
            return base.Channel.GetActionTypes(request);
        }
        
        public Argix.Customers.ActionTypeDS GetActionTypes() {
            Argix.Customers.GetActionTypesRequest inValue = new Argix.Customers.GetActionTypesRequest();
            Argix.Customers.GetActionTypesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetActionTypes(inValue);
            return retVal.GetActionTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueActionTypesResponse Argix.Customers.IIssueMgtService.GetIssueActionTypes(Argix.Customers.GetIssueActionTypesRequest request) {
            return base.Channel.GetIssueActionTypes(request);
        }
        
        public Argix.Customers.ActionTypeDS GetIssueActionTypes(long issueID) {
            Argix.Customers.GetIssueActionTypesRequest inValue = new Argix.Customers.GetIssueActionTypesRequest();
            inValue.issueID = issueID;
            Argix.Customers.GetIssueActionTypesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssueActionTypes(inValue);
            return retVal.GetIssueActionTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetActionTypeResponse Argix.Customers.IIssueMgtService.GetActionType(Argix.Customers.GetActionTypeRequest request) {
            return base.Channel.GetActionType(request);
        }
        
        public string GetActionType(int typeID) {
            Argix.Customers.GetActionTypeRequest inValue = new Argix.Customers.GetActionTypeRequest();
            inValue.typeID = typeID;
            Argix.Customers.GetActionTypeResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetActionType(inValue);
            return retVal.GetActionTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssuesResponse Argix.Customers.IIssueMgtService.GetIssues(Argix.Customers.GetIssuesRequest request) {
            return base.Channel.GetIssues(request);
        }
        
        public Argix.Customers.IssueDS GetIssues() {
            Argix.Customers.GetIssuesRequest inValue = new Argix.Customers.GetIssuesRequest();
            Argix.Customers.GetIssuesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssues(inValue);
            return retVal.GetIssuesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssuesForDateResponse Argix.Customers.IIssueMgtService.GetIssuesForDate(Argix.Customers.GetIssuesForDateRequest request) {
            return base.Channel.GetIssuesForDate(request);
        }
        
        public Argix.Customers.IssueDS GetIssuesForDate(System.DateTime fromDate) {
            Argix.Customers.GetIssuesForDateRequest inValue = new Argix.Customers.GetIssuesForDateRequest();
            inValue.fromDate = fromDate;
            Argix.Customers.GetIssuesForDateResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssuesForDate(inValue);
            return retVal.GetIssuesForDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueResponse Argix.Customers.IIssueMgtService.GetIssue(Argix.Customers.GetIssueRequest request) {
            return base.Channel.GetIssue(request);
        }
        
        public Argix.Customers.Issue GetIssue(long issueID) {
            Argix.Customers.GetIssueRequest inValue = new Argix.Customers.GetIssueRequest();
            inValue.issueID = issueID;
            Argix.Customers.GetIssueResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssue(inValue);
            return retVal.GetIssueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueActionsResponse Argix.Customers.IIssueMgtService.GetIssueActions(Argix.Customers.GetIssueActionsRequest request) {
            return base.Channel.GetIssueActions(request);
        }
        
        public Action[] GetIssueActions(long issueID) {
            Argix.Customers.GetIssueActionsRequest inValue = new Argix.Customers.GetIssueActionsRequest();
            inValue.issueID = issueID;
            Argix.Customers.GetIssueActionsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssueActions(inValue);
            return retVal.GetIssueActionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetActionsResponse Argix.Customers.IIssueMgtService.GetActions(Argix.Customers.GetActionsRequest request) {
            return base.Channel.GetActions(request);
        }
        
        public Action[] GetActions(long issueID, long actionID) {
            Argix.Customers.GetActionsRequest inValue = new Argix.Customers.GetActionsRequest();
            inValue.issueID = issueID;
            inValue.actionID = actionID;
            Argix.Customers.GetActionsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetActions(inValue);
            return retVal.GetActionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetIssueAttachmentsResponse Argix.Customers.IIssueMgtService.GetIssueAttachments(Argix.Customers.GetIssueAttachmentsRequest request) {
            return base.Channel.GetIssueAttachments(request);
        }
        
        public Attachment[] GetIssueAttachments(long issueID) {
            Argix.Customers.GetIssueAttachmentsRequest inValue = new Argix.Customers.GetIssueAttachmentsRequest();
            inValue.issueID = issueID;
            Argix.Customers.GetIssueAttachmentsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetIssueAttachments(inValue);
            return retVal.GetIssueAttachmentsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetAttachmentsResponse Argix.Customers.IIssueMgtService.GetAttachments(Argix.Customers.GetAttachmentsRequest request) {
            return base.Channel.GetAttachments(request);
        }
        
        public Attachment[] GetAttachments(long issueID, long actionID) {
            Argix.Customers.GetAttachmentsRequest inValue = new Argix.Customers.GetAttachmentsRequest();
            inValue.issueID = issueID;
            inValue.actionID = actionID;
            Argix.Customers.GetAttachmentsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetAttachments(inValue);
            return retVal.GetAttachmentsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetAttachmentResponse Argix.Customers.IIssueMgtService.GetAttachment(Argix.Customers.GetAttachmentRequest request) {
            return base.Channel.GetAttachment(request);
        }
        
        public byte[] GetAttachment(int id) {
            Argix.Customers.GetAttachmentRequest inValue = new Argix.Customers.GetAttachmentRequest();
            inValue.id = id;
            Argix.Customers.GetAttachmentResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetAttachment(inValue);
            return retVal.GetAttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.CreateIssueResponse Argix.Customers.IIssueMgtService.CreateIssue(Argix.Customers.CreateIssueRequest request) {
            return base.Channel.CreateIssue(request);
        }
        
        public long CreateIssue(Argix.Customers.Issue issue) {
            Argix.Customers.CreateIssueRequest inValue = new Argix.Customers.CreateIssueRequest();
            inValue.issue = issue;
            Argix.Customers.CreateIssueResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).CreateIssue(inValue);
            return retVal.CreateIssueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.CreateIssueActionResponse Argix.Customers.IIssueMgtService.CreateIssueAction(Argix.Customers.CreateIssueActionRequest request) {
            return base.Channel.CreateIssueAction(request);
        }
        
        public bool CreateIssueAction(byte typeID, long issueID, string userID, string comment) {
            Argix.Customers.CreateIssueActionRequest inValue = new Argix.Customers.CreateIssueActionRequest();
            inValue.typeID = typeID;
            inValue.issueID = issueID;
            inValue.userID = userID;
            inValue.comment = comment;
            Argix.Customers.CreateIssueActionResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).CreateIssueAction(inValue);
            return retVal.CreateIssueActionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.CreateIssueAttachmentResponse Argix.Customers.IIssueMgtService.CreateIssueAttachment(Argix.Customers.CreateIssueAttachmentRequest request) {
            return base.Channel.CreateIssueAttachment(request);
        }
        
        public bool CreateIssueAttachment(string filename, byte[] bytes, long issueID) {
            Argix.Customers.CreateIssueAttachmentRequest inValue = new Argix.Customers.CreateIssueAttachmentRequest();
            inValue.filename = filename;
            inValue.bytes = bytes;
            inValue.issueID = issueID;
            Argix.Customers.CreateIssueAttachmentResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).CreateIssueAttachment(inValue);
            return retVal.CreateIssueAttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.UpdateIssueResponse Argix.Customers.IIssueMgtService.UpdateIssue(Argix.Customers.UpdateIssueRequest request) {
            return base.Channel.UpdateIssue(request);
        }
        
        public bool UpdateIssue(Argix.Customers.Issue issue) {
            Argix.Customers.UpdateIssueRequest inValue = new Argix.Customers.UpdateIssueRequest();
            inValue.issue = issue;
            Argix.Customers.UpdateIssueResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).UpdateIssue(inValue);
            return retVal.UpdateIssueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.SearchIssuesResponse Argix.Customers.IIssueMgtService.SearchIssues(Argix.Customers.SearchIssuesRequest request) {
            return base.Channel.SearchIssues(request);
        }
        
        public Argix.Customers.IssueDS SearchIssues(string searchText) {
            Argix.Customers.SearchIssuesRequest inValue = new Argix.Customers.SearchIssuesRequest();
            inValue.searchText = searchText;
            Argix.Customers.SearchIssuesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).SearchIssues(inValue);
            return retVal.SearchIssuesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.SearchIssuesAdvancedResponse Argix.Customers.IIssueMgtService.SearchIssuesAdvanced(Argix.Customers.SearchIssuesAdvancedRequest request) {
            return base.Channel.SearchIssuesAdvanced(request);
        }
        
        public Argix.Customers.IssueDS SearchIssuesAdvanced(object[] criteria) {
            Argix.Customers.SearchIssuesAdvancedRequest inValue = new Argix.Customers.SearchIssuesAdvancedRequest();
            inValue.criteria = criteria;
            Argix.Customers.SearchIssuesAdvancedResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).SearchIssuesAdvanced(inValue);
            return retVal.SearchIssuesAdvancedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetCompaniesResponse Argix.Customers.IIssueMgtService.GetCompanies(Argix.Customers.GetCompaniesRequest request) {
            return base.Channel.GetCompanies(request);
        }
        
        public Argix.Customers.CompanyDS GetCompanies() {
            Argix.Customers.GetCompaniesRequest inValue = new Argix.Customers.GetCompaniesRequest();
            Argix.Customers.GetCompaniesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetCompanies(inValue);
            return retVal.GetCompaniesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetActiveCompaniesResponse Argix.Customers.IIssueMgtService.GetActiveCompanies(Argix.Customers.GetActiveCompaniesRequest request) {
            return base.Channel.GetActiveCompanies(request);
        }
        
        public Argix.Customers.CompanyDS GetActiveCompanies(bool activeOnly) {
            Argix.Customers.GetActiveCompaniesRequest inValue = new Argix.Customers.GetActiveCompaniesRequest();
            inValue.activeOnly = activeOnly;
            Argix.Customers.GetActiveCompaniesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetActiveCompanies(inValue);
            return retVal.GetActiveCompaniesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetCompanyResponse Argix.Customers.IIssueMgtService.GetCompany(Argix.Customers.GetCompanyRequest request) {
            return base.Channel.GetCompany(request);
        }
        
        public string GetCompany(int companyID) {
            Argix.Customers.GetCompanyRequest inValue = new Argix.Customers.GetCompanyRequest();
            inValue.companyID = companyID;
            Argix.Customers.GetCompanyResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetCompany(inValue);
            return retVal.GetCompanyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetDistrictsResponse Argix.Customers.IIssueMgtService.GetDistricts(Argix.Customers.GetDistrictsRequest request) {
            return base.Channel.GetDistricts(request);
        }
        
        public Argix.Customers.LocationDS GetDistricts(string clientNumber) {
            Argix.Customers.GetDistrictsRequest inValue = new Argix.Customers.GetDistrictsRequest();
            inValue.clientNumber = clientNumber;
            Argix.Customers.GetDistrictsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetDistricts(inValue);
            return retVal.GetDistrictsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetRegionsResponse Argix.Customers.IIssueMgtService.GetRegions(Argix.Customers.GetRegionsRequest request) {
            return base.Channel.GetRegions(request);
        }
        
        public Argix.Customers.LocationDS GetRegions(string clientNumber) {
            Argix.Customers.GetRegionsRequest inValue = new Argix.Customers.GetRegionsRequest();
            inValue.clientNumber = clientNumber;
            Argix.Customers.GetRegionsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetRegions(inValue);
            return retVal.GetRegionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetAgentsResponse Argix.Customers.IIssueMgtService.GetAgents(Argix.Customers.GetAgentsRequest request) {
            return base.Channel.GetAgents(request);
        }
        
        public Argix.Customers.AgentDS GetAgents() {
            Argix.Customers.GetAgentsRequest inValue = new Argix.Customers.GetAgentsRequest();
            Argix.Customers.GetAgentsResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetAgents(inValue);
            return retVal.GetAgentsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetAgentsForClientResponse Argix.Customers.IIssueMgtService.GetAgentsForClient(Argix.Customers.GetAgentsForClientRequest request) {
            return base.Channel.GetAgentsForClient(request);
        }
        
        public Argix.Customers.AgentDS GetAgentsForClient(string clientNumber) {
            Argix.Customers.GetAgentsForClientRequest inValue = new Argix.Customers.GetAgentsForClientRequest();
            inValue.clientNumber = clientNumber;
            Argix.Customers.GetAgentsForClientResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetAgentsForClient(inValue);
            return retVal.GetAgentsForClientResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetStoreDetailResponse Argix.Customers.IIssueMgtService.GetStoreDetail(Argix.Customers.GetStoreDetailRequest request) {
            return base.Channel.GetStoreDetail(request);
        }
        
        public Argix.Customers.StoreDS GetStoreDetail(int companyID, int storeNumber) {
            Argix.Customers.GetStoreDetailRequest inValue = new Argix.Customers.GetStoreDetailRequest();
            inValue.companyID = companyID;
            inValue.storeNumber = storeNumber;
            Argix.Customers.GetStoreDetailResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetStoreDetail(inValue);
            return retVal.GetStoreDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetSubStoreDetailResponse Argix.Customers.IIssueMgtService.GetSubStoreDetail(Argix.Customers.GetSubStoreDetailRequest request) {
            return base.Channel.GetSubStoreDetail(request);
        }
        
        public Argix.Customers.StoreDS GetSubStoreDetail(int companyID, string subStore) {
            Argix.Customers.GetSubStoreDetailRequest inValue = new Argix.Customers.GetSubStoreDetailRequest();
            inValue.companyID = companyID;
            inValue.subStore = subStore;
            Argix.Customers.GetSubStoreDetailResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetSubStoreDetail(inValue);
            return retVal.GetSubStoreDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetDeliveriesResponse Argix.Customers.IIssueMgtService.GetDeliveries(Argix.Customers.GetDeliveriesRequest request) {
            return base.Channel.GetDeliveries(request);
        }
        
        public Argix.Customers.DeliveryDS GetDeliveries(int companyID, int storeNumber, System.DateTime from, System.DateTime to) {
            Argix.Customers.GetDeliveriesRequest inValue = new Argix.Customers.GetDeliveriesRequest();
            inValue.companyID = companyID;
            inValue.storeNumber = storeNumber;
            inValue.from = from;
            inValue.to = to;
            Argix.Customers.GetDeliveriesResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetDeliveries(inValue);
            return retVal.GetDeliveriesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Argix.Customers.GetDeliveryResponse Argix.Customers.IIssueMgtService.GetDelivery(Argix.Customers.GetDeliveryRequest request) {
            return base.Channel.GetDelivery(request);
        }
        
        public Argix.Customers.DeliveryDS GetDelivery(int companyID, int storeNumber, System.DateTime from, System.DateTime to, long proID) {
            Argix.Customers.GetDeliveryRequest inValue = new Argix.Customers.GetDeliveryRequest();
            inValue.companyID = companyID;
            inValue.storeNumber = storeNumber;
            inValue.from = from;
            inValue.to = to;
            inValue.proID = proID;
            Argix.Customers.GetDeliveryResponse retVal = ((Argix.Customers.IIssueMgtService)(this)).GetDelivery(inValue);
            return retVal.GetDeliveryResult;
        }
    }
}
