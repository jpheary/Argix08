//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4959.
// 
#pragma warning disable 1591

namespace Argix.SQLReportSever {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportingService2010Soap", Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExpirationDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RecurrencePattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleDefinitionOrReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceDefinitionOrReference))]
    public partial class ReportingService2010 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private TrustedUserHeader trustedUserHeaderValueField;
        
        private ServerInfoHeader serverInfoHeaderValueField;
        
        private ItemNamespaceHeader itemNamespaceHeaderValueField;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportingService2010() {
            this.Url = "http://rgxvmsqlrpt08:80/ReportServer/ReportService2010.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public TrustedUserHeader TrustedUserHeaderValue {
            get {
                return this.trustedUserHeaderValueField;
            }
            set {
                this.trustedUserHeaderValueField = value;
            }
        }
        
        public ServerInfoHeader ServerInfoHeaderValue {
            get {
                return this.serverInfoHeaderValueField;
            }
            set {
                this.serverInfoHeaderValueField = value;
            }
        }
        
        public ItemNamespaceHeader ItemNamespaceHeaderValue {
            get {
                return this.itemNamespaceHeaderValueField;
            }
            set {
                this.itemNamespaceHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa" +
            "talogItem", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ItemInfo")]
        public CatalogItem CreateCatalogItem(string ItemType, string Name, string Parent, bool Overwrite, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Definition, Property[] Properties, out Warning[] Warnings) {
            object[] results = this.Invoke("CreateCatalogItem", new object[] {
                        ItemType,
                        Name,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties});
            Warnings = ((Warning[])(results[1]));
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCatalogItem(string ItemType, string Name, string Parent, bool Overwrite, byte[] Definition, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCatalogItem", new object[] {
                        ItemType,
                        Name,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem EndCreateCatalogItem(System.IAsyncResult asyncResult, out Warning[] Warnings) {
            object[] results = this.EndInvoke(asyncResult);
            Warnings = ((Warning[])(results[1]));
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD" +
            "efinition", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Warnings")]
        public Warning[] SetItemDefinition(string ItemPath, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Definition, Property[] Properties) {
            object[] results = this.Invoke("SetItemDefinition", new object[] {
                        ItemPath,
                        Definition,
                        Properties});
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemDefinition(string ItemPath, byte[] Definition, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemDefinition", new object[] {
                        ItemPath,
                        Definition,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public Warning[] EndSetItemDefinition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "efinition", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Definition", DataType="base64Binary")]
        public byte[] GetItemDefinition(string ItemPath) {
            object[] results = this.Invoke("GetItemDefinition", new object[] {
                        ItemPath});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemDefinition(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemDefinition", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetItemDefinition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemT" +
            "ype", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Type")]
        public string GetItemType(string ItemPath) {
            object[] results = this.Invoke("GetItemType", new object[] {
                        ItemPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemType(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemType", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetItemType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt" +
            "em", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItem(string ItemPath) {
            this.Invoke("DeleteItem", new object[] {
                        ItemPath});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteItem(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteItem", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/MoveItem" +
            "", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveItem(string ItemPath, string Target) {
            this.Invoke("MoveItem", new object[] {
                        ItemPath,
                        Target});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveItem(string ItemPath, string Target, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveItem", new object[] {
                        ItemPath,
                        Target}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritP" +
            "arentSecurity", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InheritParentSecurity(string ItemPath) {
            this.Invoke("InheritParentSecurity", new object[] {
                        ItemPath});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInheritParentSecurity(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InheritParentSecurity", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndInheritParentSecurity(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem" +
            "History", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ItemHistory")]
        public ItemHistorySnapshot[] ListItemHistory(string ItemPath) {
            object[] results = this.Invoke("ListItemHistory", new object[] {
                        ItemPath});
            return ((ItemHistorySnapshot[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListItemHistory(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListItemHistory", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public ItemHistorySnapshot[] EndListItemHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ItemHistorySnapshot[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListChil" +
            "dren", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CatalogItems")]
        public CatalogItem[] ListChildren(string ItemPath, bool Recursive) {
            object[] results = this.Invoke("ListChildren", new object[] {
                        ItemPath,
                        Recursive});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListChildren(string ItemPath, bool Recursive, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListChildren", new object[] {
                        ItemPath,
                        Recursive}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListChildren(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListDepe" +
            "ndentItems", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CatalogItems")]
        public CatalogItem[] ListDependentItems(string ItemPath) {
            object[] results = this.Invoke("ListDependentItems", new object[] {
                        ItemPath});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListDependentItems(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListDependentItems", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListDependentItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FindItem" +
            "s", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Items")]
        public CatalogItem[] FindItems(string Folder, BooleanOperatorEnum BooleanOperator, Property[] SearchOptions, SearchCondition[] SearchConditions) {
            object[] results = this.Invoke("FindItems", new object[] {
                        Folder,
                        BooleanOperator,
                        SearchOptions,
                        SearchConditions});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindItems(string Folder, BooleanOperatorEnum BooleanOperator, Property[] SearchOptions, SearchCondition[] SearchConditions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindItems", new object[] {
                        Folder,
                        BooleanOperator,
                        SearchOptions,
                        SearchConditions}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndFindItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPare" +
            "nts", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CatalogItem[] ListParents(string ItemPath) {
            object[] results = this.Invoke("ListParents", new object[] {
                        ItemPath});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListParents(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListParents", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListParents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateFo" +
            "lder", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ItemInfo")]
        public CatalogItem CreateFolder(string Folder, string Parent, Property[] Properties) {
            object[] results = this.Invoke("CreateFolder", new object[] {
                        Folder,
                        Parent,
                        Properties});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFolder(string Folder, string Parent, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFolder", new object[] {
                        Folder,
                        Parent,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem EndCreateFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPrope" +
            "rties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetProperties(string ItemPath, Property[] Properties) {
            this.Invoke("SetProperties", new object[] {
                        ItemPath,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetProperties(string ItemPath, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetProperties", new object[] {
                        ItemPath,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("ItemNamespaceHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPrope" +
            "rties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Values")]
        public Property[] GetProperties(string ItemPath, Property[] Properties) {
            object[] results = this.Invoke("GetProperties", new object[] {
                        ItemPath,
                        Properties});
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProperties(string ItemPath, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProperties", new object[] {
                        ItemPath,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public Property[] EndGetProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemR" +
            "eferences", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetItemReferences(string ItemPath, ItemReference[] ItemReferences) {
            this.Invoke("SetItemReferences", new object[] {
                        ItemPath,
                        ItemReferences});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemReferences(string ItemPath, ItemReference[] ItemReferences, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemReferences", new object[] {
                        ItemPath,
                        ItemReferences}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetItemReferences(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemR" +
            "eferences", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ItemReferences")]
        public ItemReferenceData[] GetItemReferences(string ItemPath, string ReferenceItemType) {
            object[] results = this.Invoke("GetItemReferences", new object[] {
                        ItemPath,
                        ReferenceItemType});
            return ((ItemReferenceData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemReferences(string ItemPath, string ReferenceItemType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemReferences", new object[] {
                        ItemPath,
                        ReferenceItemType}, callback, asyncState);
        }
        
        /// <remarks/>
        public ItemReferenceData[] EndGetItemReferences(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ItemReferenceData[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem" +
            "Types", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListItemTypes() {
            object[] results = this.Invoke("ListItemTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListItemTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListItemTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListItemTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSubsc" +
            "riptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSubscriptionProperties(string SubscriptionID, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters) {
            this.Invoke("SetSubscriptionProperties", new object[] {
                        SubscriptionID,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSubscriptionProperties(string SubscriptionID, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSubscriptionProperties", new object[] {
                        SubscriptionID,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetSubscriptionProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSubsc" +
            "riptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Owner")]
        public string GetSubscriptionProperties(string SubscriptionID, out ExtensionSettings ExtensionSettings, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValue[] Parameters) {
            object[] results = this.Invoke("GetSubscriptionProperties", new object[] {
                        SubscriptionID});
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            Description = ((string)(results[2]));
            Active = ((ActiveState)(results[3]));
            Status = ((string)(results[4]));
            EventType = ((string)(results[5]));
            MatchData = ((string)(results[6]));
            Parameters = ((ParameterValue[])(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubscriptionProperties(string SubscriptionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubscriptionProperties", new object[] {
                        SubscriptionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetSubscriptionProperties(System.IAsyncResult asyncResult, out ExtensionSettings ExtensionSettings, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValue[] Parameters) {
            object[] results = this.EndInvoke(asyncResult);
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            Description = ((string)(results[2]));
            Active = ((ActiveState)(results[3]));
            Status = ((string)(results[4]));
            EventType = ((string)(results[5]));
            MatchData = ((string)(results[6]));
            Parameters = ((ParameterValue[])(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataD" +
            "rivenSubscriptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters) {
            this.Invoke("SetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDataDrivenSubscriptionProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataD" +
            "rivenSubscriptionProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Owner")]
        public string GetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, out ExtensionSettings ExtensionSettings, out DataRetrievalPlan DataRetrievalPlan, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValueOrFieldReference[] Parameters) {
            object[] results = this.Invoke("GetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID});
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            DataRetrievalPlan = ((DataRetrievalPlan)(results[2]));
            Description = ((string)(results[3]));
            Active = ((ActiveState)(results[4]));
            Status = ((string)(results[5]));
            EventType = ((string)(results[6]));
            MatchData = ((string)(results[7]));
            Parameters = ((ParameterValueOrFieldReference[])(results[8]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataDrivenSubscriptionProperties(string DataDrivenSubscriptionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataDrivenSubscriptionProperties", new object[] {
                        DataDrivenSubscriptionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDataDrivenSubscriptionProperties(System.IAsyncResult asyncResult, out ExtensionSettings ExtensionSettings, out DataRetrievalPlan DataRetrievalPlan, out string Description, out ActiveState Active, out string Status, out string EventType, out string MatchData, out ParameterValueOrFieldReference[] Parameters) {
            object[] results = this.EndInvoke(asyncResult);
            ExtensionSettings = ((ExtensionSettings)(results[1]));
            DataRetrievalPlan = ((DataRetrievalPlan)(results[2]));
            Description = ((string)(results[3]));
            Active = ((ActiveState)(results[4]));
            Status = ((string)(results[5]));
            EventType = ((string)(results[6]));
            MatchData = ((string)(results[7]));
            Parameters = ((ParameterValueOrFieldReference[])(results[8]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSu" +
            "bscription", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSubscription(string SubscriptionID) {
            this.Invoke("DeleteSubscription", new object[] {
                        SubscriptionID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSubscription(string SubscriptionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSubscription", new object[] {
                        SubscriptionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteSubscription(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSu" +
            "bscription", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubscriptionID")]
        public string CreateSubscription(string ItemPath, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        ItemPath,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSubscription(string ItemPath, ExtensionSettings ExtensionSettings, string Description, string EventType, string MatchData, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSubscription", new object[] {
                        ItemPath,
                        ExtensionSettings,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateSubscription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa" +
            "taDrivenSubscription", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubscriptionID")]
        public string CreateDataDrivenSubscription(string ItemPath, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters) {
            object[] results = this.Invoke("CreateDataDrivenSubscription", new object[] {
                        ItemPath,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDataDrivenSubscription(string ItemPath, ExtensionSettings ExtensionSettings, DataRetrievalPlan DataRetrievalPlan, string Description, string EventType, string MatchData, ParameterValueOrFieldReference[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDataDrivenSubscription", new object[] {
                        ItemPath,
                        ExtensionSettings,
                        DataRetrievalPlan,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateDataDrivenSubscription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExten" +
            "sionSettings", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ExtensionParameters")]
        public ExtensionParameter[] GetExtensionSettings(string Extension) {
            object[] results = this.Invoke("GetExtensionSettings", new object[] {
                        Extension});
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExtensionSettings(string Extension, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExtensionSettings", new object[] {
                        Extension}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExtensionParameter[] EndGetExtensionSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Validate" +
            "ExtensionSettings", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ParameterErrors")]
        public ExtensionParameter[] ValidateExtensionSettings(string Extension, ParameterValueOrFieldReference[] ParameterValues, string SiteUrl) {
            object[] results = this.Invoke("ValidateExtensionSettings", new object[] {
                        Extension,
                        ParameterValues,
                        SiteUrl});
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateExtensionSettings(string Extension, ParameterValueOrFieldReference[] ParameterValues, string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateExtensionSettings", new object[] {
                        Extension,
                        ParameterValues,
                        SiteUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExtensionParameter[] EndValidateExtensionSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExtensionParameter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs" +
            "criptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")]
        public Subscription[] ListSubscriptions(string ItemPathOrSiteURL) {
            object[] results = this.Invoke("ListSubscriptions", new object[] {
                        ItemPathOrSiteURL});
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSubscriptions(string ItemPathOrSiteURL, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSubscriptions", new object[] {
                        ItemPathOrSiteURL}, callback, asyncState);
        }
        
        /// <remarks/>
        public Subscription[] EndListSubscriptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMySu" +
            "bscriptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")]
        public Subscription[] ListMySubscriptions(string ItemPathOrSiteURL) {
            object[] results = this.Invoke("ListMySubscriptions", new object[] {
                        ItemPathOrSiteURL});
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListMySubscriptions(string ItemPathOrSiteURL, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListMySubscriptions", new object[] {
                        ItemPathOrSiteURL}, callback, asyncState);
        }
        
        /// <remarks/>
        public Subscription[] EndListMySubscriptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs" +
            "criptionsUsingDataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")]
        public Subscription[] ListSubscriptionsUsingDataSource(string DataSource) {
            object[] results = this.Invoke("ListSubscriptionsUsingDataSource", new object[] {
                        DataSource});
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSubscriptionsUsingDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSubscriptionsUsingDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public Subscription[] EndListSubscriptionsUsingDataSource(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Subscription[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ChangeSu" +
            "bscriptionOwner", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeSubscriptionOwner(string SubscriptionID, string NewOwner) {
            this.Invoke("ChangeSubscriptionOwner", new object[] {
                        SubscriptionID,
                        NewOwner});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeSubscriptionOwner(string SubscriptionID, string NewOwner, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeSubscriptionOwner", new object[] {
                        SubscriptionID,
                        NewOwner}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeSubscriptionOwner(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa" +
            "taSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ItemInfo")]
        public CatalogItem CreateDataSource(string DataSource, string Parent, bool Overwrite, DataSourceDefinition Definition, Property[] Properties) {
            object[] results = this.Invoke("CreateDataSource", new object[] {
                        DataSource,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDataSource(string DataSource, string Parent, bool Overwrite, DataSourceDefinition Definition, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDataSource", new object[] {
                        DataSource,
                        Parent,
                        Overwrite,
                        Definition,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem EndCreateDataSource(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PrepareQ" +
            "uery", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DataSettings")]
        public DataSetDefinition PrepareQuery(DataSource DataSource, DataSetDefinition DataSet, out bool Changed, out string[] ParameterNames) {
            object[] results = this.Invoke("PrepareQuery", new object[] {
                        DataSource,
                        DataSet});
            Changed = ((bool)(results[1]));
            ParameterNames = ((string[])(results[2]));
            return ((DataSetDefinition)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrepareQuery(DataSource DataSource, DataSetDefinition DataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrepareQuery", new object[] {
                        DataSource,
                        DataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetDefinition EndPrepareQuery(System.IAsyncResult asyncResult, out bool Changed, out string[] ParameterNames) {
            object[] results = this.EndInvoke(asyncResult);
            Changed = ((bool)(results[1]));
            ParameterNames = ((string[])(results[2]));
            return ((DataSetDefinition)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/EnableDa" +
            "taSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableDataSource(string DataSource) {
            this.Invoke("EnableDataSource", new object[] {
                        DataSource});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnableDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnableDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnableDataSource(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DisableD" +
            "ataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DisableDataSource(string DataSource) {
            this.Invoke("DisableDataSource", new object[] {
                        DataSource});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDisableDataSource(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DisableDataSource", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDisableDataSource(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataS" +
            "ourceContents", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDataSourceContents(string DataSource, DataSourceDefinition Definition) {
            this.Invoke("SetDataSourceContents", new object[] {
                        DataSource,
                        Definition});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDataSourceContents(string DataSource, DataSourceDefinition Definition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDataSourceContents", new object[] {
                        DataSource,
                        Definition}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDataSourceContents(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataS" +
            "ourceContents", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Definition")]
        public DataSourceDefinition GetDataSourceContents(string DataSource) {
            object[] results = this.Invoke("GetDataSourceContents", new object[] {
                        DataSource});
            return ((DataSourceDefinition)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataSourceContents(string DataSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataSourceContents", new object[] {
                        DataSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSourceDefinition EndGetDataSourceContents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSourceDefinition)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListData" +
            "baseCredentialRetrievalOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListDatabaseCredentialRetrievalOptions() {
            object[] results = this.Invoke("ListDatabaseCredentialRetrievalOptions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListDatabaseCredentialRetrievalOptions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListDatabaseCredentialRetrievalOptions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListDatabaseCredentialRetrievalOptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD" +
            "ataSources", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetItemDataSources(string ItemPath, DataSource[] DataSources) {
            this.Invoke("SetItemDataSources", new object[] {
                        ItemPath,
                        DataSources});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemDataSources(string ItemPath, DataSource[] DataSources, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemDataSources", new object[] {
                        ItemPath,
                        DataSources}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetItemDataSources(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "ataSources", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DataSources")]
        public DataSource[] GetItemDataSources(string ItemPath) {
            object[] results = this.Invoke("GetItemDataSources", new object[] {
                        ItemPath});
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemDataSources(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemDataSources", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSource[] EndGetItemDataSources(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn" +
            "ectForDataSourceDefinition", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestConnectForDataSourceDefinition(DataSourceDefinition DataSourceDefinition, string UserName, string Password, out string ConnectError) {
            object[] results = this.Invoke("TestConnectForDataSourceDefinition", new object[] {
                        DataSourceDefinition,
                        UserName,
                        Password});
            ConnectError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConnectForDataSourceDefinition(DataSourceDefinition DataSourceDefinition, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConnectForDataSourceDefinition", new object[] {
                        DataSourceDefinition,
                        UserName,
                        Password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTestConnectForDataSourceDefinition(System.IAsyncResult asyncResult, out string ConnectError) {
            object[] results = this.EndInvoke(asyncResult);
            ConnectError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn" +
            "ectForItemDataSource", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestConnectForItemDataSource(string ItemPath, string DataSourceName, string UserName, string Password, out string ConnectError) {
            object[] results = this.Invoke("TestConnectForItemDataSource", new object[] {
                        ItemPath,
                        DataSourceName,
                        UserName,
                        Password});
            ConnectError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConnectForItemDataSource(string ItemPath, string DataSourceName, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConnectForItemDataSource", new object[] {
                        ItemPath,
                        DataSourceName,
                        UserName,
                        Password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTestConnectForItemDataSource(System.IAsyncResult asyncResult, out string ConnectError) {
            object[] results = this.EndInvoke(asyncResult);
            ConnectError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRo" +
            "le", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateRole(string Name, string Description, string[] TaskIDs) {
            this.Invoke("CreateRole", new object[] {
                        Name,
                        Description,
                        TaskIDs});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateRole(string Name, string Description, string[] TaskIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateRole", new object[] {
                        Name,
                        Description,
                        TaskIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateRole(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetRoleP" +
            "roperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRoleProperties(string Name, string Description, string[] TaskIDs) {
            this.Invoke("SetRoleProperties", new object[] {
                        Name,
                        Description,
                        TaskIDs});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetRoleProperties(string Name, string Description, string[] TaskIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetRoleProperties", new object[] {
                        Name,
                        Description,
                        TaskIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetRoleProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRoleP" +
            "roperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("TaskIDs")]
        public string[] GetRoleProperties(string Name, string SiteUrl, out string Description) {
            object[] results = this.Invoke("GetRoleProperties", new object[] {
                        Name,
                        SiteUrl});
            Description = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRoleProperties(string Name, string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRoleProperties", new object[] {
                        Name,
                        SiteUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetRoleProperties(System.IAsyncResult asyncResult, out string Description) {
            object[] results = this.EndInvoke(asyncResult);
            Description = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteRo" +
            "le", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(string Name) {
            this.Invoke("DeleteRole", new object[] {
                        Name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteRole(string Name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteRole", new object[] {
                        Name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteRole(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListRole" +
            "s", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Roles")]
        public Role[] ListRoles(string SecurityScope, string SiteUrl) {
            object[] results = this.Invoke("ListRoles", new object[] {
                        SecurityScope,
                        SiteUrl});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListRoles(string SecurityScope, string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListRoles", new object[] {
                        SecurityScope,
                        SiteUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public Role[] EndListRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListTask" +
            "s", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Tasks")]
        public Task[] ListTasks(string SecurityScope) {
            object[] results = this.Invoke("ListTasks", new object[] {
                        SecurityScope});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListTasks(string SecurityScope, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListTasks", new object[] {
                        SecurityScope}, callback, asyncState);
        }
        
        /// <remarks/>
        public Task[] EndListTasks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPolic" +
            "ies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPolicies(string ItemPath, Policy[] Policies) {
            this.Invoke("SetPolicies", new object[] {
                        ItemPath,
                        Policies});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPolicies(string ItemPath, Policy[] Policies, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPolicies", new object[] {
                        ItemPath,
                        Policies}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetPolicies(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPolic" +
            "ies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Policies")]
        public Policy[] GetPolicies(string ItemPath, out bool InheritParent) {
            object[] results = this.Invoke("GetPolicies", new object[] {
                        ItemPath});
            InheritParent = ((bool)(results[1]));
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPolicies(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPolicies", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public Policy[] EndGetPolicies(System.IAsyncResult asyncResult, out bool InheritParent) {
            object[] results = this.EndInvoke(asyncResult);
            InheritParent = ((bool)(results[1]));
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD" +
            "ataSourcePrompts", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DataSourcePrompts")]
        public DataSourcePrompt[] GetItemDataSourcePrompts(string ItemPath) {
            object[] results = this.Invoke("GetItemDataSourcePrompts", new object[] {
                        ItemPath});
            return ((DataSourcePrompt[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemDataSourcePrompts(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemDataSourcePrompts", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSourcePrompt[] EndGetItemDataSourcePrompts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSourcePrompt[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Generate" +
            "Model", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ItemInfo")]
        public CatalogItem GenerateModel(string DataSource, string Model, string Parent, Property[] Properties, out Warning[] Warnings) {
            object[] results = this.Invoke("GenerateModel", new object[] {
                        DataSource,
                        Model,
                        Parent,
                        Properties});
            Warnings = ((Warning[])(results[1]));
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGenerateModel(string DataSource, string Model, string Parent, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GenerateModel", new object[] {
                        DataSource,
                        Model,
                        Parent,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem EndGenerateModel(System.IAsyncResult asyncResult, out Warning[] Warnings) {
            object[] results = this.EndInvoke(asyncResult);
            Warnings = ((Warning[])(results[1]));
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel" +
            "ItemPermissions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Permissions")]
        public string[] GetModelItemPermissions(string Model, string ModelItemID) {
            object[] results = this.Invoke("GetModelItemPermissions", new object[] {
                        Model,
                        ModelItemID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetModelItemPermissions(string Model, string ModelItemID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetModelItemPermissions", new object[] {
                        Model,
                        ModelItemID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetModelItemPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel" +
            "ItemPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetModelItemPolicies(string Model, string ModelItemID, Policy[] Policies) {
            this.Invoke("SetModelItemPolicies", new object[] {
                        Model,
                        ModelItemID,
                        Policies});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetModelItemPolicies(string Model, string ModelItemID, Policy[] Policies, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetModelItemPolicies", new object[] {
                        Model,
                        ModelItemID,
                        Policies}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetModelItemPolicies(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel" +
            "ItemPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Policies")]
        public Policy[] GetModelItemPolicies(string Model, string ModelItemID, out bool InheritParent) {
            object[] results = this.Invoke("GetModelItemPolicies", new object[] {
                        Model,
                        ModelItemID});
            InheritParent = ((bool)(results[1]));
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetModelItemPolicies(string Model, string ModelItemID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetModelItemPolicies", new object[] {
                        Model,
                        ModelItemID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Policy[] EndGetModelItemPolicies(System.IAsyncResult asyncResult, out bool InheritParent) {
            object[] results = this.EndInvoke(asyncResult);
            InheritParent = ((bool)(results[1]));
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetUserM" +
            "odel", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Definition", DataType="base64Binary")]
        public byte[] GetUserModel(string Model, string Perspective) {
            object[] results = this.Invoke("GetUserModel", new object[] {
                        Model,
                        Perspective});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserModel(string Model, string Perspective, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserModel", new object[] {
                        Model,
                        Perspective}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetUserModel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritM" +
            "odelItemParentSecurity", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InheritModelItemParentSecurity(string Model, string ModelItemID) {
            this.Invoke("InheritModelItemParentSecurity", new object[] {
                        Model,
                        ModelItemID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInheritModelItemParentSecurity(string Model, string ModelItemID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InheritModelItemParentSecurity", new object[] {
                        Model,
                        ModelItemID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndInheritModelItemParentSecurity(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel" +
            "DrillthroughReports", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetModelDrillthroughReports(string Model, string ModelItemID, ModelDrillthroughReport[] Reports) {
            this.Invoke("SetModelDrillthroughReports", new object[] {
                        Model,
                        ModelItemID,
                        Reports});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetModelDrillthroughReports(string Model, string ModelItemID, ModelDrillthroughReport[] Reports, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetModelDrillthroughReports", new object[] {
                        Model,
                        ModelItemID,
                        Reports}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetModelDrillthroughReports(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lDrillthroughReports", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Reports")]
        public ModelDrillthroughReport[] ListModelDrillthroughReports(string Model, string ModelItemID) {
            object[] results = this.Invoke("ListModelDrillthroughReports", new object[] {
                        Model,
                        ModelItemID});
            return ((ModelDrillthroughReport[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListModelDrillthroughReports(string Model, string ModelItemID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListModelDrillthroughReports", new object[] {
                        Model,
                        ModelItemID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ModelDrillthroughReport[] EndListModelDrillthroughReports(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ModelDrillthroughReport[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lItemChildren", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ModelItems")]
        public ModelItem[] ListModelItemChildren(string Model, string ModelItemID, bool Recursive) {
            object[] results = this.Invoke("ListModelItemChildren", new object[] {
                        Model,
                        ModelItemID,
                        Recursive});
            return ((ModelItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListModelItemChildren(string Model, string ModelItemID, bool Recursive, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListModelItemChildren", new object[] {
                        Model,
                        ModelItemID,
                        Recursive}, callback, asyncState);
        }
        
        /// <remarks/>
        public ModelItem[] EndListModelItemChildren(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ModelItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lItemTypes", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListModelItemTypes() {
            object[] results = this.Invoke("ListModelItemTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListModelItemTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListModelItemTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListModelItemTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode" +
            "lPerspectives", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ModelCatalogItems")]
        public ModelCatalogItem[] ListModelPerspectives(string Model) {
            object[] results = this.Invoke("ListModelPerspectives", new object[] {
                        Model});
            return ((ModelCatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListModelPerspectives(string Model, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListModelPerspectives", new object[] {
                        Model}, callback, asyncState);
        }
        
        /// <remarks/>
        public ModelCatalogItem[] EndListModelPerspectives(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ModelCatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Regenera" +
            "teModel", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Warnings")]
        public Warning[] RegenerateModel(string Model) {
            object[] results = this.Invoke("RegenerateModel", new object[] {
                        Model});
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegenerateModel(string Model, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegenerateModel", new object[] {
                        Model}, callback, asyncState);
        }
        
        /// <remarks/>
        public Warning[] EndRegenerateModel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/RemoveAl" +
            "lModelItemPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAllModelItemPolicies(string Model) {
            this.Invoke("RemoveAllModelItemPolicies", new object[] {
                        Model});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveAllModelItemPolicies(string Model, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveAllModelItemPolicies", new object[] {
                        Model}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRemoveAllModelItemPolicies(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSc" +
            "hedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ScheduleID")]
        public string CreateSchedule(string Name, ScheduleDefinition ScheduleDefinition, string SiteUrl) {
            object[] results = this.Invoke("CreateSchedule", new object[] {
                        Name,
                        ScheduleDefinition,
                        SiteUrl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSchedule(string Name, ScheduleDefinition ScheduleDefinition, string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSchedule", new object[] {
                        Name,
                        ScheduleDefinition,
                        SiteUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateSchedule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSc" +
            "hedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSchedule(string ScheduleID) {
            this.Invoke("DeleteSchedule", new object[] {
                        ScheduleID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSchedule(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSchedule", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteSchedule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "dules", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Schedules")]
        public Schedule[] ListSchedules(string SiteUrl) {
            object[] results = this.Invoke("ListSchedules", new object[] {
                        SiteUrl});
            return ((Schedule[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSchedules(string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSchedules", new object[] {
                        SiteUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public Schedule[] EndListSchedules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Schedule[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSched" +
            "uleProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Schedule")]
        public Schedule GetScheduleProperties(string ScheduleID) {
            object[] results = this.Invoke("GetScheduleProperties", new object[] {
                        ScheduleID});
            return ((Schedule)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScheduleProperties(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScheduleProperties", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Schedule EndGetScheduleProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Schedule)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "duleStates", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListScheduleStates() {
            object[] results = this.Invoke("ListScheduleStates", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListScheduleStates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListScheduleStates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListScheduleStates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PauseSch" +
            "edule", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PauseSchedule(string ScheduleID) {
            this.Invoke("PauseSchedule", new object[] {
                        ScheduleID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPauseSchedule(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PauseSchedule", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPauseSchedule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ResumeSc" +
            "hedule", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResumeSchedule(string ScheduleID) {
            this.Invoke("ResumeSchedule", new object[] {
                        ScheduleID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResumeSchedule(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResumeSchedule", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndResumeSchedule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSched" +
            "uleProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetScheduleProperties(string Name, string ScheduleID, ScheduleDefinition ScheduleDefinition) {
            this.Invoke("SetScheduleProperties", new object[] {
                        Name,
                        ScheduleID,
                        ScheduleDefinition});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetScheduleProperties(string Name, string ScheduleID, ScheduleDefinition ScheduleDefinition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetScheduleProperties", new object[] {
                        Name,
                        ScheduleID,
                        ScheduleDefinition}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetScheduleProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche" +
            "duledItems", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Items")]
        public CatalogItem[] ListScheduledItems(string ScheduleID) {
            object[] results = this.Invoke("ListScheduledItems", new object[] {
                        ScheduleID});
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListScheduledItems(string ScheduleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListScheduledItems", new object[] {
                        ScheduleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public CatalogItem[] EndListScheduledItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CatalogItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemP" +
            "arameters", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetItemParameters(string ItemPath, ItemParameter[] Parameters) {
            this.Invoke("SetItemParameters", new object[] {
                        ItemPath,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemParameters(string ItemPath, ItemParameter[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemParameters", new object[] {
                        ItemPath,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetItemParameters(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemP" +
            "arameters", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Parameters")]
        public ItemParameter[] GetItemParameters(string ItemPath, string HistoryID, bool ForRendering, ParameterValue[] Values, DataSourceCredentials[] Credentials) {
            object[] results = this.Invoke("GetItemParameters", new object[] {
                        ItemPath,
                        HistoryID,
                        ForRendering,
                        Values,
                        Credentials});
            return ((ItemParameter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemParameters(string ItemPath, string HistoryID, bool ForRendering, ParameterValue[] Values, DataSourceCredentials[] Credentials, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemParameters", new object[] {
                        ItemPath,
                        HistoryID,
                        ForRendering,
                        Values,
                        Credentials}, callback, asyncState);
        }
        
        /// <remarks/>
        public ItemParameter[] EndGetItemParameters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ItemParameter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara" +
            "meterTypes", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListParameterTypes() {
            object[] results = this.Invoke("ListParameterTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListParameterTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListParameterTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListParameterTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara" +
            "meterStates", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListParameterStates() {
            object[] results = this.Invoke("ListParameterStates", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListParameterStates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListParameterStates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListParameterStates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRe" +
            "portEditSession", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EditSessionID")]
        public string CreateReportEditSession(string Report, string Parent, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Definition, out Warning[] Warnings) {
            object[] results = this.Invoke("CreateReportEditSession", new object[] {
                        Report,
                        Parent,
                        Definition});
            Warnings = ((Warning[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateReportEditSession(string Report, string Parent, byte[] Definition, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateReportEditSession", new object[] {
                        Report,
                        Parent,
                        Definition}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateReportEditSession(System.IAsyncResult asyncResult, out Warning[] Warnings) {
            object[] results = this.EndInvoke(asyncResult);
            Warnings = ((Warning[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateLi" +
            "nkedItem", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateLinkedItem(string ItemPath, string Parent, string Link, Property[] Properties) {
            this.Invoke("CreateLinkedItem", new object[] {
                        ItemPath,
                        Parent,
                        Link,
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateLinkedItem(string ItemPath, string Parent, string Link, Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateLinkedItem", new object[] {
                        ItemPath,
                        Parent,
                        Link,
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateLinkedItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemL" +
            "ink", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetItemLink(string ItemPath, string Link) {
            this.Invoke("SetItemLink", new object[] {
                        ItemPath,
                        Link});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemLink(string ItemPath, string Link, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemLink", new object[] {
                        ItemPath,
                        Link}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetItemLink(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemL" +
            "ink", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Link")]
        public string GetItemLink(string ItemPath) {
            object[] results = this.Invoke("GetItemLink", new object[] {
                        ItemPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemLink(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemLink", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetItemLink(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExec" +
            "utionSettings", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListExecutionSettings() {
            object[] results = this.Invoke("ListExecutionSettings", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListExecutionSettings(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListExecutionSettings", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListExecutionSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetExecu" +
            "tionOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetExecutionOptions(string ItemPath, string ExecutionSetting, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] ScheduleDefinitionOrReference Item) {
            this.Invoke("SetExecutionOptions", new object[] {
                        ItemPath,
                        ExecutionSetting,
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetExecutionOptions(string ItemPath, string ExecutionSetting, ScheduleDefinitionOrReference Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetExecutionOptions", new object[] {
                        ItemPath,
                        ExecutionSetting,
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetExecutionOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExecu" +
            "tionOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecutionSetting")]
        public string GetExecutionOptions(string ItemPath, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] out ScheduleDefinitionOrReference Item) {
            object[] results = this.Invoke("GetExecutionOptions", new object[] {
                        ItemPath});
            Item = ((ScheduleDefinitionOrReference)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExecutionOptions(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExecutionOptions", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetExecutionOptions(System.IAsyncResult asyncResult, out ScheduleDefinitionOrReference Item) {
            object[] results = this.EndInvoke(asyncResult);
            Item = ((ScheduleDefinitionOrReference)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/UpdateIt" +
            "emExecutionSnapshot", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateItemExecutionSnapshot(string ItemPath) {
            this.Invoke("UpdateItemExecutionSnapshot", new object[] {
                        ItemPath});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateItemExecutionSnapshot(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateItemExecutionSnapshot", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateItemExecutionSnapshot(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache" +
            "Options", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCacheOptions(string ItemPath, bool CacheItem, [System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", typeof(ScheduleExpiration))] [System.Xml.Serialization.XmlElementAttribute("TimeExpiration", typeof(TimeExpiration))] ExpirationDefinition Item) {
            this.Invoke("SetCacheOptions", new object[] {
                        ItemPath,
                        CacheItem,
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetCacheOptions(string ItemPath, bool CacheItem, ExpirationDefinition Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetCacheOptions", new object[] {
                        ItemPath,
                        CacheItem,
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetCacheOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache" +
            "Options", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CacheItem")]
        public bool GetCacheOptions(string ItemPath, [System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", typeof(ScheduleExpiration))] [System.Xml.Serialization.XmlElementAttribute("TimeExpiration", typeof(TimeExpiration))] out ExpirationDefinition Item) {
            object[] results = this.Invoke("GetCacheOptions", new object[] {
                        ItemPath});
            Item = ((ExpirationDefinition)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCacheOptions(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCacheOptions", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetCacheOptions(System.IAsyncResult asyncResult, out ExpirationDefinition Item) {
            object[] results = this.EndInvoke(asyncResult);
            Item = ((ExpirationDefinition)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FlushCac" +
            "he", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FlushCache(string ItemPath) {
            this.Invoke("FlushCache", new object[] {
                        ItemPath});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFlushCache(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FlushCache", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndFlushCache(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateIt" +
            "emHistorySnapshot", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("HistoryID")]
        public string CreateItemHistorySnapshot(string ItemPath, out Warning[] Warnings) {
            object[] results = this.Invoke("CreateItemHistorySnapshot", new object[] {
                        ItemPath});
            Warnings = ((Warning[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateItemHistorySnapshot(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateItemHistorySnapshot", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateItemHistorySnapshot(System.IAsyncResult asyncResult, out Warning[] Warnings) {
            object[] results = this.EndInvoke(asyncResult);
            Warnings = ((Warning[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt" +
            "emHistorySnapshot", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItemHistorySnapshot(string ItemPath, string HistoryID) {
            this.Invoke("DeleteItemHistorySnapshot", new object[] {
                        ItemPath,
                        HistoryID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteItemHistorySnapshot(string ItemPath, string HistoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteItemHistorySnapshot", new object[] {
                        ItemPath,
                        HistoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteItemHistorySnapshot(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH" +
            "istoryLimit", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetItemHistoryLimit(string ItemPath, bool UseSystem, int HistoryLimit) {
            this.Invoke("SetItemHistoryLimit", new object[] {
                        ItemPath,
                        UseSystem,
                        HistoryLimit});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemHistoryLimit(string ItemPath, bool UseSystem, int HistoryLimit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemHistoryLimit", new object[] {
                        ItemPath,
                        UseSystem,
                        HistoryLimit}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetItemHistoryLimit(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH" +
            "istoryLimit", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("HistoryLimit")]
        public int GetItemHistoryLimit(string ItemPath, out bool IsSystem, out int SystemLimit) {
            object[] results = this.Invoke("GetItemHistoryLimit", new object[] {
                        ItemPath});
            IsSystem = ((bool)(results[1]));
            SystemLimit = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemHistoryLimit(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemHistoryLimit", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetItemHistoryLimit(System.IAsyncResult asyncResult, out bool IsSystem, out int SystemLimit) {
            object[] results = this.EndInvoke(asyncResult);
            IsSystem = ((bool)(results[1]));
            SystemLimit = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH" +
            "istoryOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetItemHistoryOptions(string ItemPath, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] ScheduleDefinitionOrReference Item) {
            this.Invoke("SetItemHistoryOptions", new object[] {
                        ItemPath,
                        EnableManualSnapshotCreation,
                        KeepExecutionSnapshots,
                        Item});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetItemHistoryOptions(string ItemPath, bool EnableManualSnapshotCreation, bool KeepExecutionSnapshots, ScheduleDefinitionOrReference Item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetItemHistoryOptions", new object[] {
                        ItemPath,
                        EnableManualSnapshotCreation,
                        KeepExecutionSnapshots,
                        Item}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetItemHistoryOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH" +
            "istoryOptions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EnableManualSnapshotCreation")]
        public bool GetItemHistoryOptions(string ItemPath, out bool KeepExecutionSnapshots, [System.Xml.Serialization.XmlElementAttribute("NoSchedule", typeof(NoSchedule))] [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))] [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))] out ScheduleDefinitionOrReference Item) {
            object[] results = this.Invoke("GetItemHistoryOptions", new object[] {
                        ItemPath});
            KeepExecutionSnapshots = ((bool)(results[1]));
            Item = ((ScheduleDefinitionOrReference)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemHistoryOptions(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemHistoryOptions", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetItemHistoryOptions(System.IAsyncResult asyncResult, out bool KeepExecutionSnapshots, out ScheduleDefinitionOrReference Item) {
            object[] results = this.EndInvoke(asyncResult);
            KeepExecutionSnapshots = ((bool)(results[1]));
            Item = ((ScheduleDefinitionOrReference)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRepor" +
            "tServerConfigInfo", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServerConfigInfo")]
        public string GetReportServerConfigInfo(bool ScaleOut) {
            object[] results = this.Invoke("GetReportServerConfigInfo", new object[] {
                        ScaleOut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportServerConfigInfo(bool ScaleOut, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportServerConfigInfo", new object[] {
                        ScaleOut}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetReportServerConfigInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/IsSSLReq" +
            "uired", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSSLRequired() {
            object[] results = this.Invoke("IsSSLRequired", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsSSLRequired(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsSSLRequired", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsSSLRequired(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste" +
            "mProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSystemProperties(Property[] Properties) {
            this.Invoke("SetSystemProperties", new object[] {
                        Properties});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSystemProperties(Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSystemProperties", new object[] {
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetSystemProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Values")]
        public Property[] GetSystemProperties(Property[] Properties) {
            object[] results = this.Invoke("GetSystemProperties", new object[] {
                        Properties});
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemProperties(Property[] Properties, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemProperties", new object[] {
                        Properties}, callback, asyncState);
        }
        
        /// <remarks/>
        public Property[] EndGetSystemProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Property[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste" +
            "mPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSystemPolicies(Policy[] Policies) {
            this.Invoke("SetSystemPolicies", new object[] {
                        Policies});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSystemPolicies(Policy[] Policies, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSystemPolicies", new object[] {
                        Policies}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetSystemPolicies(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mPolicies", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Policies")]
        public Policy[] GetSystemPolicies() {
            object[] results = this.Invoke("GetSystemPolicies", new object[0]);
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemPolicies(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemPolicies", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Policy[] EndGetSystemPolicies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Policy[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte" +
            "nsions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Extensions")]
        public Extension[] ListExtensions(string ExtensionType) {
            object[] results = this.Invoke("ListExtensions", new object[] {
                        ExtensionType});
            return ((Extension[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListExtensions(string ExtensionType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListExtensions", new object[] {
                        ExtensionType}, callback, asyncState);
        }
        
        /// <remarks/>
        public Extension[] EndListExtensions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Extension[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte" +
            "nsionTypes", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListExtensionTypes() {
            object[] results = this.Invoke("ListExtensionTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListExtensionTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListExtensionTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListExtensionTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListEven" +
            "ts", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Events")]
        public Event[] ListEvents() {
            object[] results = this.Invoke("ListEvents", new object[0]);
            return ((Event[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListEvents(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListEvents", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Event[] EndListEvents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Event[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FireEven" +
            "t", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FireEvent(string EventType, string EventData, string SiteUrl) {
            this.Invoke("FireEvent", new object[] {
                        EventType,
                        EventData,
                        SiteUrl});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFireEvent(string EventType, string EventData, string SiteUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FireEvent", new object[] {
                        EventType,
                        EventData,
                        SiteUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndFireEvent(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobs" +
            "", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Jobs")]
        public Job[] ListJobs() {
            object[] results = this.Invoke("ListJobs", new object[0]);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListJobs(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListJobs", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Job[] EndListJobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobT" +
            "ypes", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListJobTypes() {
            object[] results = this.Invoke("ListJobTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListJobTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListJobTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListJobTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobA" +
            "ctions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListJobActions() {
            object[] results = this.Invoke("ListJobActions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListJobActions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListJobActions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListJobActions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobS" +
            "tates", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListJobStates() {
            object[] results = this.Invoke("ListJobStates", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListJobStates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListJobStates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListJobStates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CancelJo" +
            "b", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelJob(string JobID) {
            object[] results = this.Invoke("CancelJob", new object[] {
                        JobID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelJob(string JobID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelJob", new object[] {
                        JobID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCancelJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa" +
            "cheRefreshPlan", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CacheRefreshPlanID")]
        public string CreateCacheRefreshPlan(string ItemPath, string Description, string EventType, string MatchData, ParameterValue[] Parameters) {
            object[] results = this.Invoke("CreateCacheRefreshPlan", new object[] {
                        ItemPath,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateCacheRefreshPlan(string ItemPath, string Description, string EventType, string MatchData, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateCacheRefreshPlan", new object[] {
                        ItemPath,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateCacheRefreshPlan(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache" +
            "RefreshPlanProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCacheRefreshPlanProperties(string CacheRefreshPlanID, string Description, string EventType, string MatchData, ParameterValue[] Parameters) {
            this.Invoke("SetCacheRefreshPlanProperties", new object[] {
                        CacheRefreshPlanID,
                        Description,
                        EventType,
                        MatchData,
                        Parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetCacheRefreshPlanProperties(string CacheRefreshPlanID, string Description, string EventType, string MatchData, ParameterValue[] Parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetCacheRefreshPlanProperties", new object[] {
                        CacheRefreshPlanID,
                        Description,
                        EventType,
                        MatchData,
                        Parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetCacheRefreshPlanProperties(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache" +
            "RefreshPlanProperties", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Description")]
        public string GetCacheRefreshPlanProperties(string CacheRefreshPlanID, out string LastRunStatus, out CacheRefreshPlanState State, out string EventType, out string MatchData, out ParameterValue[] Parameters) {
            object[] results = this.Invoke("GetCacheRefreshPlanProperties", new object[] {
                        CacheRefreshPlanID});
            LastRunStatus = ((string)(results[1]));
            State = ((CacheRefreshPlanState)(results[2]));
            EventType = ((string)(results[3]));
            MatchData = ((string)(results[4]));
            Parameters = ((ParameterValue[])(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCacheRefreshPlanProperties(string CacheRefreshPlanID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCacheRefreshPlanProperties", new object[] {
                        CacheRefreshPlanID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetCacheRefreshPlanProperties(System.IAsyncResult asyncResult, out string LastRunStatus, out CacheRefreshPlanState State, out string EventType, out string MatchData, out ParameterValue[] Parameters) {
            object[] results = this.EndInvoke(asyncResult);
            LastRunStatus = ((string)(results[1]));
            State = ((CacheRefreshPlanState)(results[2]));
            EventType = ((string)(results[3]));
            MatchData = ((string)(results[4]));
            Parameters = ((ParameterValue[])(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteCa" +
            "cheRefreshPlan", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCacheRefreshPlan(string CacheRefreshPlanID) {
            this.Invoke("DeleteCacheRefreshPlan", new object[] {
                        CacheRefreshPlanID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteCacheRefreshPlan(string CacheRefreshPlanID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteCacheRefreshPlan", new object[] {
                        CacheRefreshPlanID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteCacheRefreshPlan(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListCach" +
            "eRefreshPlans", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("CacheRefreshPlans")]
        public CacheRefreshPlan[] ListCacheRefreshPlans(string ItemPath) {
            object[] results = this.Invoke("ListCacheRefreshPlans", new object[] {
                        ItemPath});
            return ((CacheRefreshPlan[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListCacheRefreshPlans(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListCacheRefreshPlans", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public CacheRefreshPlan[] EndListCacheRefreshPlans(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CacheRefreshPlan[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/LogonUse" +
            "r", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogonUser(string userName, string password, string authority) {
            this.Invoke("LogonUser", new object[] {
                        userName,
                        password,
                        authority});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogonUser(string userName, string password, string authority, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LogonUser", new object[] {
                        userName,
                        password,
                        authority}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogonUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Logoff", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logoff() {
            this.Invoke("Logoff", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogoff(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logoff", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogoff(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPermi" +
            "ssions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Permissions")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Operation")]
        public string[] GetPermissions(string ItemPath) {
            object[] results = this.Invoke("GetPermissions", new object[] {
                        ItemPath});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPermissions(string ItemPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPermissions", new object[] {
                        ItemPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste" +
            "mPermissions", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Permissions")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Operation")]
        public string[] GetSystemPermissions() {
            object[] results = this.Invoke("GetSystemPermissions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemPermissions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemPermissions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetSystemPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSecu" +
            "rityScopes", RequestNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListSecurityScopes() {
            object[] results = this.Invoke("ListSecurityScopes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListSecurityScopes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListSecurityScopes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListSecurityScopes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsNullable=false)]
    public partial class ServerInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string reportServerVersionNumberField;
        
        private string reportServerEditionField;
        
        private string reportServerVersionField;
        
        private string reportServerDateTimeField;
        
        private TimeZoneInformation reportServerTimeZoneInfoField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ReportServerVersionNumber {
            get {
                return this.reportServerVersionNumberField;
            }
            set {
                this.reportServerVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ReportServerEdition {
            get {
                return this.reportServerEditionField;
            }
            set {
                this.reportServerEditionField = value;
            }
        }
        
        /// <remarks/>
        public string ReportServerVersion {
            get {
                return this.reportServerVersionField;
            }
            set {
                this.reportServerVersionField = value;
            }
        }
        
        /// <remarks/>
        public string ReportServerDateTime {
            get {
                return this.reportServerDateTimeField;
            }
            set {
                this.reportServerDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public TimeZoneInformation ReportServerTimeZoneInfo {
            get {
                return this.reportServerTimeZoneInfoField;
            }
            set {
                this.reportServerTimeZoneInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class TimeZoneInformation {
        
        private int biasField;
        
        private int standardBiasField;
        
        private SYSTEMTIME standardDateField;
        
        private int daylightBiasField;
        
        private SYSTEMTIME daylightDateField;
        
        /// <remarks/>
        public int Bias {
            get {
                return this.biasField;
            }
            set {
                this.biasField = value;
            }
        }
        
        /// <remarks/>
        public int StandardBias {
            get {
                return this.standardBiasField;
            }
            set {
                this.standardBiasField = value;
            }
        }
        
        /// <remarks/>
        public SYSTEMTIME StandardDate {
            get {
                return this.standardDateField;
            }
            set {
                this.standardDateField = value;
            }
        }
        
        /// <remarks/>
        public int DaylightBias {
            get {
                return this.daylightBiasField;
            }
            set {
                this.daylightBiasField = value;
            }
        }
        
        /// <remarks/>
        public SYSTEMTIME DaylightDate {
            get {
                return this.daylightDateField;
            }
            set {
                this.daylightDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class SYSTEMTIME {
        
        private short yearField;
        
        private short monthField;
        
        private short dayOfWeekField;
        
        private short dayField;
        
        private short hourField;
        
        private short minuteField;
        
        private short secondField;
        
        private short millisecondsField;
        
        /// <remarks/>
        public short year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public short month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        public short dayOfWeek {
            get {
                return this.dayOfWeekField;
            }
            set {
                this.dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public short day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        public short hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
            }
        }
        
        /// <remarks/>
        public short minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
            }
        }
        
        /// <remarks/>
        public short second {
            get {
                return this.secondField;
            }
            set {
                this.secondField = value;
            }
        }
        
        /// <remarks/>
        public short milliseconds {
            get {
                return this.millisecondsField;
            }
            set {
                this.millisecondsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class CacheRefreshPlan {
        
        private string cacheRefreshPlanIDField;
        
        private string itemPathField;
        
        private string descriptionField;
        
        private CacheRefreshPlanState stateField;
        
        private System.DateTime lastExecutedField;
        
        private System.DateTime modifiedDateField;
        
        private string modifiedByField;
        
        private string lastRunStatusField;
        
        /// <remarks/>
        public string CacheRefreshPlanID {
            get {
                return this.cacheRefreshPlanIDField;
            }
            set {
                this.cacheRefreshPlanIDField = value;
            }
        }
        
        /// <remarks/>
        public string ItemPath {
            get {
                return this.itemPathField;
            }
            set {
                this.itemPathField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public CacheRefreshPlanState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastExecuted {
            get {
                return this.lastExecutedField;
            }
            set {
                this.lastExecutedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public string LastRunStatus {
            get {
                return this.lastRunStatusField;
            }
            set {
                this.lastRunStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class CacheRefreshPlanState {
        
        private bool missingParameterValueField;
        
        private bool invalidParameterValueField;
        
        private bool unknownItemParameterField;
        
        private bool cachingNotEnabledOnItemField;
        
        /// <remarks/>
        public bool MissingParameterValue {
            get {
                return this.missingParameterValueField;
            }
            set {
                this.missingParameterValueField = value;
            }
        }
        
        /// <remarks/>
        public bool InvalidParameterValue {
            get {
                return this.invalidParameterValueField;
            }
            set {
                this.invalidParameterValueField = value;
            }
        }
        
        /// <remarks/>
        public bool UnknownItemParameter {
            get {
                return this.unknownItemParameterField;
            }
            set {
                this.unknownItemParameterField = value;
            }
        }
        
        /// <remarks/>
        public bool CachingNotEnabledOnItem {
            get {
                return this.cachingNotEnabledOnItemField;
            }
            set {
                this.cachingNotEnabledOnItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Job {
        
        private string jobIDField;
        
        private string nameField;
        
        private string pathField;
        
        private string descriptionField;
        
        private string machineField;
        
        private string userField;
        
        private System.DateTime startDateTimeField;
        
        private string jobActionNameField;
        
        private string jobTypeNameField;
        
        private string jobStatusNameField;
        
        /// <remarks/>
        public string JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Machine {
            get {
                return this.machineField;
            }
            set {
                this.machineField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string JobActionName {
            get {
                return this.jobActionNameField;
            }
            set {
                this.jobActionNameField = value;
            }
        }
        
        /// <remarks/>
        public string JobTypeName {
            get {
                return this.jobTypeNameField;
            }
            set {
                this.jobTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string JobStatusName {
            get {
                return this.jobStatusNameField;
            }
            set {
                this.jobStatusNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Event {
        
        private string typeField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Extension {
        
        private string extensionTypeNameField;
        
        private string nameField;
        
        private string localizedNameField;
        
        private bool visibleField;
        
        private bool isModelGenerationSupportedField;
        
        /// <remarks/>
        public string ExtensionTypeName {
            get {
                return this.extensionTypeNameField;
            }
            set {
                this.extensionTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string LocalizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsModelGenerationSupported {
            get {
                return this.isModelGenerationSupportedField;
            }
            set {
                this.isModelGenerationSupportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleExpiration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeExpiration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ExpirationDefinition {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleExpiration : ExpirationDefinition {
        
        private ScheduleDefinitionOrReference itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", typeof(ScheduleDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("ScheduleReference", typeof(ScheduleReference))]
        public ScheduleDefinitionOrReference Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleDefinition : ScheduleDefinitionOrReference {
        
        private System.DateTime startDateTimeField;
        
        private System.DateTime endDateField;
        
        private bool endDateFieldSpecified;
        
        private RecurrencePattern itemField;
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DailyRecurrence", typeof(DailyRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("MinuteRecurrence", typeof(MinuteRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("MonthlyDOWRecurrence", typeof(MonthlyDOWRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("MonthlyRecurrence", typeof(MonthlyRecurrence))]
        [System.Xml.Serialization.XmlElementAttribute("WeeklyRecurrence", typeof(WeeklyRecurrence))]
        public RecurrencePattern Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DailyRecurrence : RecurrencePattern {
        
        private int daysIntervalField;
        
        /// <remarks/>
        public int DaysInterval {
            get {
                return this.daysIntervalField;
            }
            set {
                this.daysIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MinuteRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DailyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WeeklyRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MonthlyDOWRecurrence))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MonthlyRecurrence))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class RecurrencePattern {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MinuteRecurrence : RecurrencePattern {
        
        private int minutesIntervalField;
        
        /// <remarks/>
        public int MinutesInterval {
            get {
                return this.minutesIntervalField;
            }
            set {
                this.minutesIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class WeeklyRecurrence : RecurrencePattern {
        
        private int weeksIntervalField;
        
        private bool weeksIntervalFieldSpecified;
        
        private DaysOfWeekSelector daysOfWeekField;
        
        /// <remarks/>
        public int WeeksInterval {
            get {
                return this.weeksIntervalField;
            }
            set {
                this.weeksIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeeksIntervalSpecified {
            get {
                return this.weeksIntervalFieldSpecified;
            }
            set {
                this.weeksIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public DaysOfWeekSelector DaysOfWeek {
            get {
                return this.daysOfWeekField;
            }
            set {
                this.daysOfWeekField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DaysOfWeekSelector {
        
        private bool sundayField;
        
        private bool mondayField;
        
        private bool tuesdayField;
        
        private bool wednesdayField;
        
        private bool thursdayField;
        
        private bool fridayField;
        
        private bool saturdayField;
        
        /// <remarks/>
        public bool Sunday {
            get {
                return this.sundayField;
            }
            set {
                this.sundayField = value;
            }
        }
        
        /// <remarks/>
        public bool Monday {
            get {
                return this.mondayField;
            }
            set {
                this.mondayField = value;
            }
        }
        
        /// <remarks/>
        public bool Tuesday {
            get {
                return this.tuesdayField;
            }
            set {
                this.tuesdayField = value;
            }
        }
        
        /// <remarks/>
        public bool Wednesday {
            get {
                return this.wednesdayField;
            }
            set {
                this.wednesdayField = value;
            }
        }
        
        /// <remarks/>
        public bool Thursday {
            get {
                return this.thursdayField;
            }
            set {
                this.thursdayField = value;
            }
        }
        
        /// <remarks/>
        public bool Friday {
            get {
                return this.fridayField;
            }
            set {
                this.fridayField = value;
            }
        }
        
        /// <remarks/>
        public bool Saturday {
            get {
                return this.saturdayField;
            }
            set {
                this.saturdayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MonthlyDOWRecurrence : RecurrencePattern {
        
        private WeekNumberEnum whichWeekField;
        
        private bool whichWeekFieldSpecified;
        
        private DaysOfWeekSelector daysOfWeekField;
        
        private MonthsOfYearSelector monthsOfYearField;
        
        /// <remarks/>
        public WeekNumberEnum WhichWeek {
            get {
                return this.whichWeekField;
            }
            set {
                this.whichWeekField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WhichWeekSpecified {
            get {
                return this.whichWeekFieldSpecified;
            }
            set {
                this.whichWeekFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public DaysOfWeekSelector DaysOfWeek {
            get {
                return this.daysOfWeekField;
            }
            set {
                this.daysOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public MonthsOfYearSelector MonthsOfYear {
            get {
                return this.monthsOfYearField;
            }
            set {
                this.monthsOfYearField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum WeekNumberEnum {
        
        /// <remarks/>
        FirstWeek,
        
        /// <remarks/>
        SecondWeek,
        
        /// <remarks/>
        ThirdWeek,
        
        /// <remarks/>
        FourthWeek,
        
        /// <remarks/>
        LastWeek,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MonthsOfYearSelector {
        
        private bool januaryField;
        
        private bool februaryField;
        
        private bool marchField;
        
        private bool aprilField;
        
        private bool mayField;
        
        private bool juneField;
        
        private bool julyField;
        
        private bool augustField;
        
        private bool septemberField;
        
        private bool octoberField;
        
        private bool novemberField;
        
        private bool decemberField;
        
        /// <remarks/>
        public bool January {
            get {
                return this.januaryField;
            }
            set {
                this.januaryField = value;
            }
        }
        
        /// <remarks/>
        public bool February {
            get {
                return this.februaryField;
            }
            set {
                this.februaryField = value;
            }
        }
        
        /// <remarks/>
        public bool March {
            get {
                return this.marchField;
            }
            set {
                this.marchField = value;
            }
        }
        
        /// <remarks/>
        public bool April {
            get {
                return this.aprilField;
            }
            set {
                this.aprilField = value;
            }
        }
        
        /// <remarks/>
        public bool May {
            get {
                return this.mayField;
            }
            set {
                this.mayField = value;
            }
        }
        
        /// <remarks/>
        public bool June {
            get {
                return this.juneField;
            }
            set {
                this.juneField = value;
            }
        }
        
        /// <remarks/>
        public bool July {
            get {
                return this.julyField;
            }
            set {
                this.julyField = value;
            }
        }
        
        /// <remarks/>
        public bool August {
            get {
                return this.augustField;
            }
            set {
                this.augustField = value;
            }
        }
        
        /// <remarks/>
        public bool September {
            get {
                return this.septemberField;
            }
            set {
                this.septemberField = value;
            }
        }
        
        /// <remarks/>
        public bool October {
            get {
                return this.octoberField;
            }
            set {
                this.octoberField = value;
            }
        }
        
        /// <remarks/>
        public bool November {
            get {
                return this.novemberField;
            }
            set {
                this.novemberField = value;
            }
        }
        
        /// <remarks/>
        public bool December {
            get {
                return this.decemberField;
            }
            set {
                this.decemberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class MonthlyRecurrence : RecurrencePattern {
        
        private string daysField;
        
        private MonthsOfYearSelector monthsOfYearField;
        
        /// <remarks/>
        public string Days {
            get {
                return this.daysField;
            }
            set {
                this.daysField = value;
            }
        }
        
        /// <remarks/>
        public MonthsOfYearSelector MonthsOfYear {
            get {
                return this.monthsOfYearField;
            }
            set {
                this.monthsOfYearField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NoSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleDefinition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ScheduleReference : ScheduleDefinitionOrReference {
        
        private string scheduleIDField;
        
        private ScheduleDefinition definitionField;
        
        /// <remarks/>
        public string ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public ScheduleDefinition Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class NoSchedule : ScheduleDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class TimeExpiration : ExpirationDefinition {
        
        private int minutesField;
        
        /// <remarks/>
        public int Minutes {
            get {
                return this.minutesField;
            }
            set {
                this.minutesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceCredentials {
        
        private string dataSourceNameField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemParameter {
        
        private string nameField;
        
        private string parameterTypeNameField;
        
        private bool nullableField;
        
        private bool nullableFieldSpecified;
        
        private bool allowBlankField;
        
        private bool allowBlankFieldSpecified;
        
        private bool multiValueField;
        
        private bool multiValueFieldSpecified;
        
        private bool queryParameterField;
        
        private bool queryParameterFieldSpecified;
        
        private string promptField;
        
        private bool promptUserField;
        
        private bool promptUserFieldSpecified;
        
        private string[] dependenciesField;
        
        private bool validValuesQueryBasedField;
        
        private bool validValuesQueryBasedFieldSpecified;
        
        private ValidValue[] validValuesField;
        
        private bool defaultValuesQueryBasedField;
        
        private bool defaultValuesQueryBasedFieldSpecified;
        
        private string[] defaultValuesField;
        
        private string parameterStateNameField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ParameterTypeName {
            get {
                return this.parameterTypeNameField;
            }
            set {
                this.parameterTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Nullable {
            get {
                return this.nullableField;
            }
            set {
                this.nullableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified {
            get {
                return this.nullableFieldSpecified;
            }
            set {
                this.nullableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AllowBlank {
            get {
                return this.allowBlankField;
            }
            set {
                this.allowBlankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified {
            get {
                return this.allowBlankFieldSpecified;
            }
            set {
                this.allowBlankFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool MultiValue {
            get {
                return this.multiValueField;
            }
            set {
                this.multiValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified {
            get {
                return this.multiValueFieldSpecified;
            }
            set {
                this.multiValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool QueryParameter {
            get {
                return this.queryParameterField;
            }
            set {
                this.queryParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParameterSpecified {
            get {
                return this.queryParameterFieldSpecified;
            }
            set {
                this.queryParameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
            }
        }
        
        /// <remarks/>
        public bool PromptUser {
            get {
                return this.promptUserField;
            }
            set {
                this.promptUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptUserSpecified {
            get {
                return this.promptUserFieldSpecified;
            }
            set {
                this.promptUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Dependency")]
        public string[] Dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidValuesQueryBased {
            get {
                return this.validValuesQueryBasedField;
            }
            set {
                this.validValuesQueryBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesQueryBasedSpecified {
            get {
                return this.validValuesQueryBasedFieldSpecified;
            }
            set {
                this.validValuesQueryBasedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ValidValue[] ValidValues {
            get {
                return this.validValuesField;
            }
            set {
                this.validValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool DefaultValuesQueryBased {
            get {
                return this.defaultValuesQueryBasedField;
            }
            set {
                this.defaultValuesQueryBasedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValuesQueryBasedSpecified {
            get {
                return this.defaultValuesQueryBasedFieldSpecified;
            }
            set {
                this.defaultValuesQueryBasedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] DefaultValues {
            get {
                return this.defaultValuesField;
            }
            set {
                this.defaultValuesField = value;
            }
        }
        
        /// <remarks/>
        public string ParameterStateName {
            get {
                return this.parameterStateNameField;
            }
            set {
                this.parameterStateNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ValidValue {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Schedule {
        
        private string scheduleIDField;
        
        private string nameField;
        
        private ScheduleDefinition definitionField;
        
        private string descriptionField;
        
        private string creatorField;
        
        private System.DateTime nextRunTimeField;
        
        private bool nextRunTimeFieldSpecified;
        
        private System.DateTime lastRunTimeField;
        
        private bool lastRunTimeFieldSpecified;
        
        private bool referencesPresentField;
        
        private string scheduleStateNameField;
        
        /// <remarks/>
        public string ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public ScheduleDefinition Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NextRunTime {
            get {
                return this.nextRunTimeField;
            }
            set {
                this.nextRunTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NextRunTimeSpecified {
            get {
                return this.nextRunTimeFieldSpecified;
            }
            set {
                this.nextRunTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastRunTime {
            get {
                return this.lastRunTimeField;
            }
            set {
                this.lastRunTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRunTimeSpecified {
            get {
                return this.lastRunTimeFieldSpecified;
            }
            set {
                this.lastRunTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ReferencesPresent {
            get {
                return this.referencesPresentField;
            }
            set {
                this.referencesPresentField = value;
            }
        }
        
        /// <remarks/>
        public string ScheduleStateName {
            get {
                return this.scheduleStateNameField;
            }
            set {
                this.scheduleStateNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelPerspective {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelCatalogItem {
        
        private string modelField;
        
        private string descriptionField;
        
        private ModelPerspective[] perspectivesField;
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ModelPerspective[] Perspectives {
            get {
                return this.perspectivesField;
            }
            set {
                this.perspectivesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelItem {
        
        private string idField;
        
        private string nameField;
        
        private string modelItemTypeNameField;
        
        private string descriptionField;
        
        private ModelItem[] modelItemsField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ModelItemTypeName {
            get {
                return this.modelItemTypeNameField;
            }
            set {
                this.modelItemTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ModelItem[] ModelItems {
            get {
                return this.modelItemsField;
            }
            set {
                this.modelItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ModelDrillthroughReport {
        
        private string pathField;
        
        private DrillthroughType typeField;
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public DrillthroughType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum DrillthroughType {
        
        /// <remarks/>
        Detail,
        
        /// <remarks/>
        List,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourcePrompt {
        
        private string nameField;
        
        private string dataSourceIDField;
        
        private string promptField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                this.dataSourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Policy {
        
        private string groupUserNameField;
        
        private Role[] rolesField;
        
        /// <remarks/>
        public string GroupUserName {
            get {
                return this.groupUserNameField;
            }
            set {
                this.groupUserNameField = value;
            }
        }
        
        /// <remarks/>
        public Role[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Role {
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Task {
        
        private string taskIDField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string TaskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSource {
        
        private string nameField;
        
        private DataSourceDefinitionOrReference itemField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", typeof(DataSourceDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference", typeof(DataSourceReference))]
        [System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", typeof(InvalidDataSourceReference))]
        public DataSourceDefinitionOrReference Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceDefinition : DataSourceDefinitionOrReference {
        
        private string extensionField;
        
        private string connectStringField;
        
        private bool useOriginalConnectStringField;
        
        private bool originalConnectStringExpressionBasedField;
        
        private CredentialRetrievalEnum credentialRetrievalField;
        
        private bool windowsCredentialsField;
        
        private bool impersonateUserField;
        
        private bool impersonateUserFieldSpecified;
        
        private string promptField;
        
        private string userNameField;
        
        private string passwordField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectString {
            get {
                return this.connectStringField;
            }
            set {
                this.connectStringField = value;
            }
        }
        
        /// <remarks/>
        public bool UseOriginalConnectString {
            get {
                return this.useOriginalConnectStringField;
            }
            set {
                this.useOriginalConnectStringField = value;
            }
        }
        
        /// <remarks/>
        public bool OriginalConnectStringExpressionBased {
            get {
                return this.originalConnectStringExpressionBasedField;
            }
            set {
                this.originalConnectStringExpressionBasedField = value;
            }
        }
        
        /// <remarks/>
        public CredentialRetrievalEnum CredentialRetrieval {
            get {
                return this.credentialRetrievalField;
            }
            set {
                this.credentialRetrievalField = value;
            }
        }
        
        /// <remarks/>
        public bool WindowsCredentials {
            get {
                return this.windowsCredentialsField;
            }
            set {
                this.windowsCredentialsField = value;
            }
        }
        
        /// <remarks/>
        public bool ImpersonateUser {
            get {
                return this.impersonateUserField;
            }
            set {
                this.impersonateUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImpersonateUserSpecified {
            get {
                return this.impersonateUserFieldSpecified;
            }
            set {
                this.impersonateUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum CredentialRetrievalEnum {
        
        /// <remarks/>
        Prompt,
        
        /// <remarks/>
        Store,
        
        /// <remarks/>
        Integrated,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InvalidDataSourceReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceDefinition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSourceReference : DataSourceDefinitionOrReference {
        
        private string referenceField;
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class InvalidDataSourceReference : DataSourceDefinitionOrReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Subscription {
        
        private string subscriptionIDField;
        
        private string ownerField;
        
        private string pathField;
        
        private string virtualPathField;
        
        private string reportField;
        
        private ExtensionSettings deliverySettingsField;
        
        private string descriptionField;
        
        private string statusField;
        
        private ActiveState activeField;
        
        private System.DateTime lastExecutedField;
        
        private bool lastExecutedFieldSpecified;
        
        private string modifiedByField;
        
        private System.DateTime modifiedDateField;
        
        private string eventTypeField;
        
        private bool isDataDrivenField;
        
        /// <remarks/>
        public string SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string VirtualPath {
            get {
                return this.virtualPathField;
            }
            set {
                this.virtualPathField = value;
            }
        }
        
        /// <remarks/>
        public string Report {
            get {
                return this.reportField;
            }
            set {
                this.reportField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionSettings DeliverySettings {
            get {
                return this.deliverySettingsField;
            }
            set {
                this.deliverySettingsField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public ActiveState Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastExecuted {
            get {
                return this.lastExecutedField;
            }
            set {
                this.lastExecutedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastExecutedSpecified {
            get {
                return this.lastExecutedFieldSpecified;
            }
            set {
                this.lastExecutedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDataDriven {
            get {
                return this.isDataDrivenField;
            }
            set {
                this.isDataDrivenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ExtensionSettings {
        
        private string extensionField;
        
        private ParameterValueOrFieldReference[] parameterValuesField;
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterFieldReference))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ParameterValue))]
        public ParameterValueOrFieldReference[] ParameterValues {
            get {
                return this.parameterValuesField;
            }
            set {
                this.parameterValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ParameterFieldReference : ParameterValueOrFieldReference {
        
        private string parameterNameField;
        
        private string fieldAliasField;
        
        /// <remarks/>
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        public string FieldAlias {
            get {
                return this.fieldAliasField;
            }
            set {
                this.fieldAliasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterFieldReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValue))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ParameterValueOrFieldReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ParameterValue : ParameterValueOrFieldReference {
        
        private string nameField;
        
        private string valueField;
        
        private string labelField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ActiveState {
        
        private bool deliveryExtensionRemovedField;
        
        private bool deliveryExtensionRemovedFieldSpecified;
        
        private bool sharedDataSourceRemovedField;
        
        private bool sharedDataSourceRemovedFieldSpecified;
        
        private bool missingParameterValueField;
        
        private bool missingParameterValueFieldSpecified;
        
        private bool invalidParameterValueField;
        
        private bool invalidParameterValueFieldSpecified;
        
        private bool unknownReportParameterField;
        
        private bool unknownReportParameterFieldSpecified;
        
        /// <remarks/>
        public bool DeliveryExtensionRemoved {
            get {
                return this.deliveryExtensionRemovedField;
            }
            set {
                this.deliveryExtensionRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryExtensionRemovedSpecified {
            get {
                return this.deliveryExtensionRemovedFieldSpecified;
            }
            set {
                this.deliveryExtensionRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SharedDataSourceRemoved {
            get {
                return this.sharedDataSourceRemovedField;
            }
            set {
                this.sharedDataSourceRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharedDataSourceRemovedSpecified {
            get {
                return this.sharedDataSourceRemovedFieldSpecified;
            }
            set {
                this.sharedDataSourceRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool MissingParameterValue {
            get {
                return this.missingParameterValueField;
            }
            set {
                this.missingParameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MissingParameterValueSpecified {
            get {
                return this.missingParameterValueFieldSpecified;
            }
            set {
                this.missingParameterValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool InvalidParameterValue {
            get {
                return this.invalidParameterValueField;
            }
            set {
                this.invalidParameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvalidParameterValueSpecified {
            get {
                return this.invalidParameterValueFieldSpecified;
            }
            set {
                this.invalidParameterValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UnknownReportParameter {
            get {
                return this.unknownReportParameterField;
            }
            set {
                this.unknownReportParameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnknownReportParameterSpecified {
            get {
                return this.unknownReportParameterFieldSpecified;
            }
            set {
                this.unknownReportParameterFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ExtensionParameter {
        
        private string nameField;
        
        private string displayNameField;
        
        private bool requiredField;
        
        private bool requiredFieldSpecified;
        
        private bool readOnlyField;
        
        private string valueField;
        
        private string errorField;
        
        private bool encryptedField;
        
        private bool isPasswordField;
        
        private ValidValue[] validValuesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequiredSpecified {
            get {
                return this.requiredFieldSpecified;
            }
            set {
                this.requiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public bool Encrypted {
            get {
                return this.encryptedField;
            }
            set {
                this.encryptedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPassword {
            get {
                return this.isPasswordField;
            }
            set {
                this.isPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public ValidValue[] ValidValues {
            get {
                return this.validValuesField;
            }
            set {
                this.validValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class QueryDefinition {
        
        private string commandTypeField;
        
        private string commandTextField;
        
        private int timeoutField;
        
        private bool timeoutFieldSpecified;
        
        /// <remarks/>
        public string CommandType {
            get {
                return this.commandTypeField;
            }
            set {
                this.commandTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CommandText {
            get {
                return this.commandTextField;
            }
            set {
                this.commandTextField = value;
            }
        }
        
        /// <remarks/>
        public int Timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeoutSpecified {
            get {
                return this.timeoutFieldSpecified;
            }
            set {
                this.timeoutFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Field {
        
        private string aliasField;
        
        private string nameField;
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataSetDefinition {
        
        private Field[] fieldsField;
        
        private QueryDefinition queryField;
        
        private SensitivityEnum caseSensitivityField;
        
        private bool caseSensitivityFieldSpecified;
        
        private string collationField;
        
        private SensitivityEnum accentSensitivityField;
        
        private bool accentSensitivityFieldSpecified;
        
        private SensitivityEnum kanatypeSensitivityField;
        
        private bool kanatypeSensitivityFieldSpecified;
        
        private SensitivityEnum widthSensitivityField;
        
        private bool widthSensitivityFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        public Field[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        public QueryDefinition Query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        public SensitivityEnum CaseSensitivity {
            get {
                return this.caseSensitivityField;
            }
            set {
                this.caseSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CaseSensitivitySpecified {
            get {
                return this.caseSensitivityFieldSpecified;
            }
            set {
                this.caseSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Collation {
            get {
                return this.collationField;
            }
            set {
                this.collationField = value;
            }
        }
        
        /// <remarks/>
        public SensitivityEnum AccentSensitivity {
            get {
                return this.accentSensitivityField;
            }
            set {
                this.accentSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccentSensitivitySpecified {
            get {
                return this.accentSensitivityFieldSpecified;
            }
            set {
                this.accentSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public SensitivityEnum KanatypeSensitivity {
            get {
                return this.kanatypeSensitivityField;
            }
            set {
                this.kanatypeSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KanatypeSensitivitySpecified {
            get {
                return this.kanatypeSensitivityFieldSpecified;
            }
            set {
                this.kanatypeSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public SensitivityEnum WidthSensitivity {
            get {
                return this.widthSensitivityField;
            }
            set {
                this.widthSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSensitivitySpecified {
            get {
                return this.widthSensitivityFieldSpecified;
            }
            set {
                this.widthSensitivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum SensitivityEnum {
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
        
        /// <remarks/>
        Auto,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class DataRetrievalPlan {
        
        private DataSourceDefinitionOrReference itemField;
        
        private DataSetDefinition dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", typeof(DataSourceDefinition))]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceReference", typeof(DataSourceReference))]
        [System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", typeof(InvalidDataSourceReference))]
        public DataSourceDefinitionOrReference Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public DataSetDefinition DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemReferenceData {
        
        private string nameField;
        
        private string referenceField;
        
        private string referenceTypeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceType {
            get {
                return this.referenceTypeField;
            }
            set {
                this.referenceTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemReference {
        
        private string nameField;
        
        private string referenceField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class SearchCondition {
        
        private ConditionEnum conditionField;
        
        private bool conditionFieldSpecified;
        
        private string[] valuesField;
        
        private string nameField;
        
        /// <remarks/>
        public ConditionEnum Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified {
            get {
                return this.conditionFieldSpecified;
            }
            set {
                this.conditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum ConditionEnum {
        
        /// <remarks/>
        Contains,
        
        /// <remarks/>
        Equals,
        
        /// <remarks/>
        In,
        
        /// <remarks/>
        Between,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class ItemHistorySnapshot {
        
        private string historyIDField;
        
        private System.DateTime creationDateField;
        
        private int sizeField;
        
        /// <remarks/>
        public string HistoryID {
            get {
                return this.historyIDField;
            }
            set {
                this.historyIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Warning {
        
        private string codeField;
        
        private string severityField;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string messageField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class CatalogItem {
        
        private string idField;
        
        private string nameField;
        
        private string pathField;
        
        private string virtualPathField;
        
        private string typeNameField;
        
        private int sizeField;
        
        private bool sizeFieldSpecified;
        
        private string descriptionField;
        
        private bool hiddenField;
        
        private bool hiddenFieldSpecified;
        
        private System.DateTime creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private System.DateTime modifiedDateField;
        
        private bool modifiedDateFieldSpecified;
        
        private string createdByField;
        
        private string modifiedByField;
        
        private Property[] itemMetadataField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string VirtualPath {
            get {
                return this.virtualPathField;
            }
            set {
                this.virtualPathField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HiddenSpecified {
            get {
                return this.hiddenFieldSpecified;
            }
            set {
                this.hiddenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModifiedDateSpecified {
            get {
                return this.modifiedDateFieldSpecified;
            }
            set {
                this.modifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public Property[] ItemMetadata {
            get {
                return this.itemMetadataField;
            }
            set {
                this.itemMetadataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public partial class Property {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsNullable=false)]
    public partial class TrustedUserHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private byte[] userTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsNullable=false)]
    public partial class ItemNamespaceHeader : System.Web.Services.Protocols.SoapHeader {
        
        private ItemNamespaceEnum itemNamespaceField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public ItemNamespaceEnum ItemNamespace {
            get {
                return this.itemNamespaceField;
            }
            set {
                this.itemNamespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum ItemNamespaceEnum {
        
        /// <remarks/>
        PathBased,
        
        /// <remarks/>
        GUIDBased,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")]
    public enum BooleanOperatorEnum {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
}

#pragma warning restore 1591