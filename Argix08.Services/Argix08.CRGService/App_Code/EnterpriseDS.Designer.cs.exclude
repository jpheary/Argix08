//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Argix.Enterprise {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EnterpriseDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EnterpriseDS : global::System.Data.DataSet {
        
        private DeliveryTableDataTable tableDeliveryTable;
        
        private ScanTableDataTable tableScanTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EnterpriseDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EnterpriseDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DeliveryTable"] != null)) {
                    base.Tables.Add(new DeliveryTableDataTable(ds.Tables["DeliveryTable"]));
                }
                if ((ds.Tables["ScanTable"] != null)) {
                    base.Tables.Add(new ScanTableDataTable(ds.Tables["ScanTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeliveryTableDataTable DeliveryTable {
            get {
                return this.tableDeliveryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScanTableDataTable ScanTable {
            get {
                return this.tableScanTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EnterpriseDS cln = ((EnterpriseDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DeliveryTable"] != null)) {
                    base.Tables.Add(new DeliveryTableDataTable(ds.Tables["DeliveryTable"]));
                }
                if ((ds.Tables["ScanTable"] != null)) {
                    base.Tables.Add(new ScanTableDataTable(ds.Tables["ScanTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDeliveryTable = ((DeliveryTableDataTable)(base.Tables["DeliveryTable"]));
            if ((initTable == true)) {
                if ((this.tableDeliveryTable != null)) {
                    this.tableDeliveryTable.InitVars();
                }
            }
            this.tableScanTable = ((ScanTableDataTable)(base.Tables["ScanTable"]));
            if ((initTable == true)) {
                if ((this.tableScanTable != null)) {
                    this.tableScanTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EnterpriseDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EnterpriseDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDeliveryTable = new DeliveryTableDataTable();
            base.Tables.Add(this.tableDeliveryTable);
            this.tableScanTable = new ScanTableDataTable();
            base.Tables.Add(this.tableScanTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeliveryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeScanTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EnterpriseDS ds = new EnterpriseDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DeliveryTableRowChangeEventHandler(object sender, DeliveryTableRowChangeEvent e);
        
        public delegate void ScanTableRowChangeEventHandler(object sender, ScanTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeliveryTableDataTable : global::System.Data.TypedTableBase<DeliveryTableRow> {
            
            private global::System.Data.DataColumn columnCBOL;
            
            private global::System.Data.DataColumn columnCPROID;
            
            private global::System.Data.DataColumn columnCPRONumber;
            
            private global::System.Data.DataColumn columnStoreNumber;
            
            private global::System.Data.DataColumn columnOFD1;
            
            private global::System.Data.DataColumn columnOFD2;
            
            private global::System.Data.DataColumn columnPodDate;
            
            private global::System.Data.DataColumn columnPodTime;
            
            private global::System.Data.DataColumn columnShouldBeDeliveredOn;
            
            private global::System.Data.DataColumn columnWindowStartTime;
            
            private global::System.Data.DataColumn columnWindowEndTime;
            
            private global::System.Data.DataColumn columnCartonsSorted;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnTLS;
            
            private global::System.Data.DataColumn columnPODCartonsMatch;
            
            private global::System.Data.DataColumn columnPODCartonsShort;
            
            private global::System.Data.DataColumn columnPODCartonsOver;
            
            private global::System.Data.DataColumn columnPODCartonsMisroute;
            
            private global::System.Data.DataColumn columnPODCartonsDamaged;
            
            private global::System.Data.DataColumn columnPODCartonsScanned;
            
            private global::System.Data.DataColumn columnPODCartonsManual;
            
            private global::System.Data.DataColumn columnOSDCartonsMatch;
            
            private global::System.Data.DataColumn columnOSDCartonsShort;
            
            private global::System.Data.DataColumn columnOSDCartonsOver;
            
            private global::System.Data.DataColumn columnOSDCartonsMisroute;
            
            private global::System.Data.DataColumn columnOSDCartonsDamaged;
            
            private global::System.Data.DataColumn columnOSDCartonsScanned;
            
            private global::System.Data.DataColumn columnOSDCartonsManual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableDataTable() {
                this.TableName = "DeliveryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeliveryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CBOLColumn {
                get {
                    return this.columnCBOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPROIDColumn {
                get {
                    return this.columnCPROID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPRONumberColumn {
                get {
                    return this.columnCPRONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreNumberColumn {
                get {
                    return this.columnStoreNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD1Column {
                get {
                    return this.columnOFD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFD2Column {
                get {
                    return this.columnOFD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PodDateColumn {
                get {
                    return this.columnPodDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PodTimeColumn {
                get {
                    return this.columnPodTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShouldBeDeliveredOnColumn {
                get {
                    return this.columnShouldBeDeliveredOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowStartTimeColumn {
                get {
                    return this.columnWindowStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WindowEndTimeColumn {
                get {
                    return this.columnWindowEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonsSortedColumn {
                get {
                    return this.columnCartonsSorted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLSColumn {
                get {
                    return this.columnTLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsMatchColumn {
                get {
                    return this.columnPODCartonsMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsShortColumn {
                get {
                    return this.columnPODCartonsShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsOverColumn {
                get {
                    return this.columnPODCartonsOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsMisrouteColumn {
                get {
                    return this.columnPODCartonsMisroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsDamagedColumn {
                get {
                    return this.columnPODCartonsDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsScannedColumn {
                get {
                    return this.columnPODCartonsScanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODCartonsManualColumn {
                get {
                    return this.columnPODCartonsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsMatchColumn {
                get {
                    return this.columnOSDCartonsMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsShortColumn {
                get {
                    return this.columnOSDCartonsShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsOverColumn {
                get {
                    return this.columnOSDCartonsOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsMisrouteColumn {
                get {
                    return this.columnOSDCartonsMisroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsDamagedColumn {
                get {
                    return this.columnOSDCartonsDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsScannedColumn {
                get {
                    return this.columnOSDCartonsScanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSDCartonsManualColumn {
                get {
                    return this.columnOSDCartonsManual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow this[int index] {
                get {
                    return ((DeliveryTableRow)(this.Rows[index]));
                }
            }
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowChanging;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowChanged;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowDeleting;
            
            public event DeliveryTableRowChangeEventHandler DeliveryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeliveryTableRow(DeliveryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow AddDeliveryTableRow(
                        string CBOL, 
                        long CPROID, 
                        long CPRONumber, 
                        int StoreNumber, 
                        System.DateTime OFD1, 
                        System.DateTime OFD2, 
                        System.DateTime PodDate, 
                        System.DateTime PodTime, 
                        System.DateTime ShouldBeDeliveredOn, 
                        System.DateTime WindowStartTime, 
                        System.DateTime WindowEndTime, 
                        int CartonsSorted, 
                        int Weight, 
                        string TLS, 
                        int PODCartonsMatch, 
                        int PODCartonsShort, 
                        int PODCartonsOver, 
                        int PODCartonsMisroute, 
                        int PODCartonsDamaged, 
                        int PODCartonsScanned, 
                        int PODCartonsManual, 
                        int OSDCartonsMatch, 
                        int OSDCartonsShort, 
                        int OSDCartonsOver, 
                        int OSDCartonsMisroute, 
                        int OSDCartonsDamaged, 
                        int OSDCartonsScanned, 
                        int OSDCartonsManual) {
                DeliveryTableRow rowDeliveryTableRow = ((DeliveryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CBOL,
                        CPROID,
                        CPRONumber,
                        StoreNumber,
                        OFD1,
                        OFD2,
                        PodDate,
                        PodTime,
                        ShouldBeDeliveredOn,
                        WindowStartTime,
                        WindowEndTime,
                        CartonsSorted,
                        Weight,
                        TLS,
                        PODCartonsMatch,
                        PODCartonsShort,
                        PODCartonsOver,
                        PODCartonsMisroute,
                        PODCartonsDamaged,
                        PODCartonsScanned,
                        PODCartonsManual,
                        OSDCartonsMatch,
                        OSDCartonsShort,
                        OSDCartonsOver,
                        OSDCartonsMisroute,
                        OSDCartonsDamaged,
                        OSDCartonsScanned,
                        OSDCartonsManual};
                rowDeliveryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDeliveryTableRow);
                return rowDeliveryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DeliveryTableDataTable cln = ((DeliveryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DeliveryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCBOL = base.Columns["CBOL"];
                this.columnCPROID = base.Columns["CPROID"];
                this.columnCPRONumber = base.Columns["CPRONumber"];
                this.columnStoreNumber = base.Columns["StoreNumber"];
                this.columnOFD1 = base.Columns["OFD1"];
                this.columnOFD2 = base.Columns["OFD2"];
                this.columnPodDate = base.Columns["PodDate"];
                this.columnPodTime = base.Columns["PodTime"];
                this.columnShouldBeDeliveredOn = base.Columns["ShouldBeDeliveredOn"];
                this.columnWindowStartTime = base.Columns["WindowStartTime"];
                this.columnWindowEndTime = base.Columns["WindowEndTime"];
                this.columnCartonsSorted = base.Columns["CartonsSorted"];
                this.columnWeight = base.Columns["Weight"];
                this.columnTLS = base.Columns["TLS"];
                this.columnPODCartonsMatch = base.Columns["PODCartonsMatch"];
                this.columnPODCartonsShort = base.Columns["PODCartonsShort"];
                this.columnPODCartonsOver = base.Columns["PODCartonsOver"];
                this.columnPODCartonsMisroute = base.Columns["PODCartonsMisroute"];
                this.columnPODCartonsDamaged = base.Columns["PODCartonsDamaged"];
                this.columnPODCartonsScanned = base.Columns["PODCartonsScanned"];
                this.columnPODCartonsManual = base.Columns["PODCartonsManual"];
                this.columnOSDCartonsMatch = base.Columns["OSDCartonsMatch"];
                this.columnOSDCartonsShort = base.Columns["OSDCartonsShort"];
                this.columnOSDCartonsOver = base.Columns["OSDCartonsOver"];
                this.columnOSDCartonsMisroute = base.Columns["OSDCartonsMisroute"];
                this.columnOSDCartonsDamaged = base.Columns["OSDCartonsDamaged"];
                this.columnOSDCartonsScanned = base.Columns["OSDCartonsScanned"];
                this.columnOSDCartonsManual = base.Columns["OSDCartonsManual"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCBOL = new global::System.Data.DataColumn("CBOL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBOL);
                this.columnCPROID = new global::System.Data.DataColumn("CPROID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPROID);
                this.columnCPRONumber = new global::System.Data.DataColumn("CPRONumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPRONumber);
                this.columnStoreNumber = new global::System.Data.DataColumn("StoreNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreNumber);
                this.columnOFD1 = new global::System.Data.DataColumn("OFD1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD1);
                this.columnOFD2 = new global::System.Data.DataColumn("OFD2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFD2);
                this.columnPodDate = new global::System.Data.DataColumn("PodDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodDate);
                this.columnPodTime = new global::System.Data.DataColumn("PodTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPodTime);
                this.columnShouldBeDeliveredOn = new global::System.Data.DataColumn("ShouldBeDeliveredOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShouldBeDeliveredOn);
                this.columnWindowStartTime = new global::System.Data.DataColumn("WindowStartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowStartTime);
                this.columnWindowEndTime = new global::System.Data.DataColumn("WindowEndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWindowEndTime);
                this.columnCartonsSorted = new global::System.Data.DataColumn("CartonsSorted", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonsSorted);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnTLS = new global::System.Data.DataColumn("TLS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLS);
                this.columnPODCartonsMatch = new global::System.Data.DataColumn("PODCartonsMatch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsMatch);
                this.columnPODCartonsShort = new global::System.Data.DataColumn("PODCartonsShort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsShort);
                this.columnPODCartonsOver = new global::System.Data.DataColumn("PODCartonsOver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsOver);
                this.columnPODCartonsMisroute = new global::System.Data.DataColumn("PODCartonsMisroute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsMisroute);
                this.columnPODCartonsDamaged = new global::System.Data.DataColumn("PODCartonsDamaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsDamaged);
                this.columnPODCartonsScanned = new global::System.Data.DataColumn("PODCartonsScanned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsScanned);
                this.columnPODCartonsManual = new global::System.Data.DataColumn("PODCartonsManual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODCartonsManual);
                this.columnOSDCartonsMatch = new global::System.Data.DataColumn("OSDCartonsMatch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsMatch);
                this.columnOSDCartonsShort = new global::System.Data.DataColumn("OSDCartonsShort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsShort);
                this.columnOSDCartonsOver = new global::System.Data.DataColumn("OSDCartonsOver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsOver);
                this.columnOSDCartonsMisroute = new global::System.Data.DataColumn("OSDCartonsMisroute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsMisroute);
                this.columnOSDCartonsDamaged = new global::System.Data.DataColumn("OSDCartonsDamaged", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsDamaged);
                this.columnOSDCartonsScanned = new global::System.Data.DataColumn("OSDCartonsScanned", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsScanned);
                this.columnOSDCartonsManual = new global::System.Data.DataColumn("OSDCartonsManual", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSDCartonsManual);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow NewDeliveryTableRow() {
                return ((DeliveryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DeliveryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DeliveryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeliveryTableRowChanged != null)) {
                    this.DeliveryTableRowChanged(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeliveryTableRowChanging != null)) {
                    this.DeliveryTableRowChanging(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeliveryTableRowDeleted != null)) {
                    this.DeliveryTableRowDeleted(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeliveryTableRowDeleting != null)) {
                    this.DeliveryTableRowDeleting(this, new DeliveryTableRowChangeEvent(((DeliveryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeliveryTableRow(DeliveryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeliveryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScanTableDataTable : global::System.Data.TypedTableBase<ScanTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLabelSequenceNumber;
            
            private global::System.Data.DataColumn columnScanStatus;
            
            private global::System.Data.DataColumn columnCartonStatus;
            
            private global::System.Data.DataColumn columnDamage;
            
            private global::System.Data.DataColumn columnScanDate;
            
            private global::System.Data.DataColumn columnScanTime;
            
            private global::System.Data.DataColumn columnTrackingNumber;
            
            private global::System.Data.DataColumn columnVendorNumber;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnZoneCode;
            
            private global::System.Data.DataColumn columnTLNumber;
            
            private global::System.Data.DataColumn columnBLNumber;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupNumber;
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnVendorKey;
            
            private global::System.Data.DataColumn columnSortDate;
            
            private global::System.Data.DataColumn columnSortTime;
            
            private global::System.Data.DataColumn columnSortedLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableDataTable() {
                this.TableName = "ScanTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScanTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ScanTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelSequenceNumberColumn {
                get {
                    return this.columnLabelSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanStatusColumn {
                get {
                    return this.columnScanStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CartonStatusColumn {
                get {
                    return this.columnCartonStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DamageColumn {
                get {
                    return this.columnDamage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanDateColumn {
                get {
                    return this.columnScanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScanTimeColumn {
                get {
                    return this.columnScanTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrackingNumberColumn {
                get {
                    return this.columnTrackingNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNumberColumn {
                get {
                    return this.columnVendorNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneCodeColumn {
                get {
                    return this.columnZoneCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TLNumberColumn {
                get {
                    return this.columnTLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLNumberColumn {
                get {
                    return this.columnBLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupNumberColumn {
                get {
                    return this.columnPickupNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorKeyColumn {
                get {
                    return this.columnVendorKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDateColumn {
                get {
                    return this.columnSortDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortTimeColumn {
                get {
                    return this.columnSortTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortedLocationColumn {
                get {
                    return this.columnSortedLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow this[int index] {
                get {
                    return ((ScanTableRow)(this.Rows[index]));
                }
            }
            
            public event ScanTableRowChangeEventHandler ScanTableRowChanging;
            
            public event ScanTableRowChangeEventHandler ScanTableRowChanged;
            
            public event ScanTableRowChangeEventHandler ScanTableRowDeleting;
            
            public event ScanTableRowChangeEventHandler ScanTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddScanTableRow(ScanTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow AddScanTableRow(
                        long ID, 
                        long LabelSequenceNumber, 
                        string ScanStatus, 
                        string CartonStatus, 
                        string Damage, 
                        System.DateTime ScanDate, 
                        System.DateTime ScanTime, 
                        string TrackingNumber, 
                        string VendorNumber, 
                        string VendorName, 
                        int Weight, 
                        string ZoneCode, 
                        string TLNumber, 
                        int BLNumber, 
                        System.DateTime PickupDate, 
                        int PickupNumber, 
                        string ItemNumber, 
                        string VendorKey, 
                        System.DateTime SortDate, 
                        System.DateTime SortTime, 
                        string SortedLocation) {
                ScanTableRow rowScanTableRow = ((ScanTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        LabelSequenceNumber,
                        ScanStatus,
                        CartonStatus,
                        Damage,
                        ScanDate,
                        ScanTime,
                        TrackingNumber,
                        VendorNumber,
                        VendorName,
                        Weight,
                        ZoneCode,
                        TLNumber,
                        BLNumber,
                        PickupDate,
                        PickupNumber,
                        ItemNumber,
                        VendorKey,
                        SortDate,
                        SortTime,
                        SortedLocation};
                rowScanTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScanTableRow);
                return rowScanTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ScanTableDataTable cln = ((ScanTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ScanTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLabelSequenceNumber = base.Columns["LabelSequenceNumber"];
                this.columnScanStatus = base.Columns["ScanStatus"];
                this.columnCartonStatus = base.Columns["CartonStatus"];
                this.columnDamage = base.Columns["Damage"];
                this.columnScanDate = base.Columns["ScanDate"];
                this.columnScanTime = base.Columns["ScanTime"];
                this.columnTrackingNumber = base.Columns["TrackingNumber"];
                this.columnVendorNumber = base.Columns["VendorNumber"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnWeight = base.Columns["Weight"];
                this.columnZoneCode = base.Columns["ZoneCode"];
                this.columnTLNumber = base.Columns["TLNumber"];
                this.columnBLNumber = base.Columns["BLNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupNumber = base.Columns["PickupNumber"];
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnVendorKey = base.Columns["VendorKey"];
                this.columnSortDate = base.Columns["SortDate"];
                this.columnSortTime = base.Columns["SortTime"];
                this.columnSortedLocation = base.Columns["SortedLocation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLabelSequenceNumber = new global::System.Data.DataColumn("LabelSequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelSequenceNumber);
                this.columnScanStatus = new global::System.Data.DataColumn("ScanStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanStatus);
                this.columnCartonStatus = new global::System.Data.DataColumn("CartonStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonStatus);
                this.columnDamage = new global::System.Data.DataColumn("Damage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDamage);
                this.columnScanDate = new global::System.Data.DataColumn("ScanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanDate);
                this.columnScanTime = new global::System.Data.DataColumn("ScanTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScanTime);
                this.columnTrackingNumber = new global::System.Data.DataColumn("TrackingNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingNumber);
                this.columnVendorNumber = new global::System.Data.DataColumn("VendorNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorNumber);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnZoneCode = new global::System.Data.DataColumn("ZoneCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneCode);
                this.columnTLNumber = new global::System.Data.DataColumn("TLNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTLNumber);
                this.columnBLNumber = new global::System.Data.DataColumn("BLNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLNumber);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupNumber = new global::System.Data.DataColumn("PickupNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupNumber);
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnVendorKey = new global::System.Data.DataColumn("VendorKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorKey);
                this.columnSortDate = new global::System.Data.DataColumn("SortDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortDate);
                this.columnSortTime = new global::System.Data.DataColumn("SortTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortTime);
                this.columnSortedLocation = new global::System.Data.DataColumn("SortedLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortedLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow NewScanTableRow() {
                return ((ScanTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ScanTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ScanTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ScanTableRowChanged != null)) {
                    this.ScanTableRowChanged(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ScanTableRowChanging != null)) {
                    this.ScanTableRowChanging(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ScanTableRowDeleted != null)) {
                    this.ScanTableRowDeleted(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ScanTableRowDeleting != null)) {
                    this.ScanTableRowDeleting(this, new ScanTableRowChangeEvent(((ScanTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveScanTableRow(ScanTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EnterpriseDS ds = new EnterpriseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScanTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeliveryTableRow : global::System.Data.DataRow {
            
            private DeliveryTableDataTable tableDeliveryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeliveryTable = ((DeliveryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CBOL {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryTable.CBOLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBOL\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CBOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPROID {
                get {
                    try {
                        return ((long)(this[this.tableDeliveryTable.CPROIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPROID\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CPROIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPRONumber {
                get {
                    try {
                        return ((long)(this[this.tableDeliveryTable.CPRONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPRONumber\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CPRONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreNumber {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.StoreNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreNumber\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.StoreNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.OFD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD1\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OFD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OFD2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.OFD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFD2\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OFD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PodDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.PodDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PodDate\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PodDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PodTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.PodTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PodTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PodTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShouldBeDeliveredOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShouldBeDeliveredOn\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowStartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.WindowStartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowStartTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WindowStartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WindowEndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryTable.WindowEndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WindowEndTime\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WindowEndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CartonsSorted {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.CartonsSortedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonsSorted\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.CartonsSortedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLS {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryTable.TLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLS\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.TLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsMatch {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsMatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsMatch\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsMatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsShort {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsShort\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsOver {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsOver\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsMisroute {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsMisrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsMisroute\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsMisrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsDamaged {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsDamagedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsDamaged\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsScanned {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsScanned\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsScannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PODCartonsManual {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.PODCartonsManualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODCartonsManual\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.PODCartonsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsMatch {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsMatchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsMatch\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsMatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsShort {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsShort\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsOver {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsOver\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsMisroute {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsMisrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsMisroute\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsMisrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsDamaged {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsDamagedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsDamaged\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsScanned {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsScannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsScanned\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsScannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OSDCartonsManual {
                get {
                    try {
                        return ((int)(this[this.tableDeliveryTable.OSDCartonsManualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSDCartonsManual\' in table \'DeliveryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryTable.OSDCartonsManualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCBOLNull() {
                return this.IsNull(this.tableDeliveryTable.CBOLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCBOLNull() {
                this[this.tableDeliveryTable.CBOLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPROIDNull() {
                return this.IsNull(this.tableDeliveryTable.CPROIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPROIDNull() {
                this[this.tableDeliveryTable.CPROIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPRONumberNull() {
                return this.IsNull(this.tableDeliveryTable.CPRONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPRONumberNull() {
                this[this.tableDeliveryTable.CPRONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNumberNull() {
                return this.IsNull(this.tableDeliveryTable.StoreNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNumberNull() {
                this[this.tableDeliveryTable.StoreNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD1Null() {
                return this.IsNull(this.tableDeliveryTable.OFD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD1Null() {
                this[this.tableDeliveryTable.OFD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFD2Null() {
                return this.IsNull(this.tableDeliveryTable.OFD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFD2Null() {
                this[this.tableDeliveryTable.OFD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPodDateNull() {
                return this.IsNull(this.tableDeliveryTable.PodDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPodDateNull() {
                this[this.tableDeliveryTable.PodDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPodTimeNull() {
                return this.IsNull(this.tableDeliveryTable.PodTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPodTimeNull() {
                this[this.tableDeliveryTable.PodTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShouldBeDeliveredOnNull() {
                return this.IsNull(this.tableDeliveryTable.ShouldBeDeliveredOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShouldBeDeliveredOnNull() {
                this[this.tableDeliveryTable.ShouldBeDeliveredOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowStartTimeNull() {
                return this.IsNull(this.tableDeliveryTable.WindowStartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowStartTimeNull() {
                this[this.tableDeliveryTable.WindowStartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWindowEndTimeNull() {
                return this.IsNull(this.tableDeliveryTable.WindowEndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWindowEndTimeNull() {
                this[this.tableDeliveryTable.WindowEndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonsSortedNull() {
                return this.IsNull(this.tableDeliveryTable.CartonsSortedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonsSortedNull() {
                this[this.tableDeliveryTable.CartonsSortedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableDeliveryTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableDeliveryTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLSNull() {
                return this.IsNull(this.tableDeliveryTable.TLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLSNull() {
                this[this.tableDeliveryTable.TLSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsMatchNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsMatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsMatchNull() {
                this[this.tableDeliveryTable.PODCartonsMatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsShortNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsShortNull() {
                this[this.tableDeliveryTable.PODCartonsShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsOverNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsOverNull() {
                this[this.tableDeliveryTable.PODCartonsOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsMisrouteNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsMisrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsMisrouteNull() {
                this[this.tableDeliveryTable.PODCartonsMisrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsDamagedNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsDamagedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsDamagedNull() {
                this[this.tableDeliveryTable.PODCartonsDamagedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsScannedNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsScannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsScannedNull() {
                this[this.tableDeliveryTable.PODCartonsScannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODCartonsManualNull() {
                return this.IsNull(this.tableDeliveryTable.PODCartonsManualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODCartonsManualNull() {
                this[this.tableDeliveryTable.PODCartonsManualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsMatchNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsMatchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsMatchNull() {
                this[this.tableDeliveryTable.OSDCartonsMatchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsShortNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsShortNull() {
                this[this.tableDeliveryTable.OSDCartonsShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsOverNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsOverNull() {
                this[this.tableDeliveryTable.OSDCartonsOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsMisrouteNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsMisrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsMisrouteNull() {
                this[this.tableDeliveryTable.OSDCartonsMisrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsDamagedNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsDamagedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsDamagedNull() {
                this[this.tableDeliveryTable.OSDCartonsDamagedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsScannedNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsScannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsScannedNull() {
                this[this.tableDeliveryTable.OSDCartonsScannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSDCartonsManualNull() {
                return this.IsNull(this.tableDeliveryTable.OSDCartonsManualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSDCartonsManualNull() {
                this[this.tableDeliveryTable.OSDCartonsManualColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ScanTableRow : global::System.Data.DataRow {
            
            private ScanTableDataTable tableScanTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScanTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableScanTable = ((ScanTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableScanTable.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LabelSequenceNumber {
                get {
                    try {
                        return ((long)(this[this.tableScanTable.LabelSequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelSequenceNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.LabelSequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScanStatus {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.ScanStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanStatus\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ScanStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CartonStatus {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.CartonStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonStatus\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.CartonStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Damage {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.DamageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Damage\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.DamageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.ScanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanDate\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ScanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ScanTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.ScanTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScanTime\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ScanTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrackingNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.TrackingNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.TrackingNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.VendorNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.VendorNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Weight {
                get {
                    try {
                        return ((int)(this[this.tableScanTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZoneCode {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.ZoneCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneCode\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ZoneCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TLNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.TLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TLNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.TLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLNumber {
                get {
                    try {
                        return ((int)(this[this.tableScanTable.BLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.BLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PickupNumber {
                get {
                    try {
                        return ((int)(this[this.tableScanTable.PickupNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.PickupNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNumber {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.ItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNumber\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorKey {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.VendorKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorKey\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.VendorKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.SortDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortDate\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.SortDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SortTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScanTable.SortTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortTime\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.SortTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SortedLocation {
                get {
                    try {
                        return ((string)(this[this.tableScanTable.SortedLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortedLocation\' in table \'ScanTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScanTable.SortedLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableScanTable.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableScanTable.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabelSequenceNumberNull() {
                return this.IsNull(this.tableScanTable.LabelSequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabelSequenceNumberNull() {
                this[this.tableScanTable.LabelSequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanStatusNull() {
                return this.IsNull(this.tableScanTable.ScanStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanStatusNull() {
                this[this.tableScanTable.ScanStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCartonStatusNull() {
                return this.IsNull(this.tableScanTable.CartonStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCartonStatusNull() {
                this[this.tableScanTable.CartonStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDamageNull() {
                return this.IsNull(this.tableScanTable.DamageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDamageNull() {
                this[this.tableScanTable.DamageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanDateNull() {
                return this.IsNull(this.tableScanTable.ScanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanDateNull() {
                this[this.tableScanTable.ScanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScanTimeNull() {
                return this.IsNull(this.tableScanTable.ScanTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScanTimeNull() {
                this[this.tableScanTable.ScanTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrackingNumberNull() {
                return this.IsNull(this.tableScanTable.TrackingNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrackingNumberNull() {
                this[this.tableScanTable.TrackingNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNumberNull() {
                return this.IsNull(this.tableScanTable.VendorNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNumberNull() {
                this[this.tableScanTable.VendorNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableScanTable.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableScanTable.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableScanTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableScanTable.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneCodeNull() {
                return this.IsNull(this.tableScanTable.ZoneCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneCodeNull() {
                this[this.tableScanTable.ZoneCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTLNumberNull() {
                return this.IsNull(this.tableScanTable.TLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTLNumberNull() {
                this[this.tableScanTable.TLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLNumberNull() {
                return this.IsNull(this.tableScanTable.BLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLNumberNull() {
                this[this.tableScanTable.BLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableScanTable.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableScanTable.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupNumberNull() {
                return this.IsNull(this.tableScanTable.PickupNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupNumberNull() {
                this[this.tableScanTable.PickupNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNumberNull() {
                return this.IsNull(this.tableScanTable.ItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNumberNull() {
                this[this.tableScanTable.ItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorKeyNull() {
                return this.IsNull(this.tableScanTable.VendorKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorKeyNull() {
                this[this.tableScanTable.VendorKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDateNull() {
                return this.IsNull(this.tableScanTable.SortDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDateNull() {
                this[this.tableScanTable.SortDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortTimeNull() {
                return this.IsNull(this.tableScanTable.SortTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortTimeNull() {
                this[this.tableScanTable.SortTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortedLocationNull() {
                return this.IsNull(this.tableScanTable.SortedLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortedLocationNull() {
                this[this.tableScanTable.SortedLocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeliveryTableRowChangeEvent : global::System.EventArgs {
            
            private DeliveryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRowChangeEvent(DeliveryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ScanTableRowChangeEvent : global::System.EventArgs {
            
            private ScanTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRowChangeEvent(ScanTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScanTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591